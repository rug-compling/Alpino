                     hash       txt	prolog	  fadd1   fadd3   fadd4   conc	fadd3'
bigram
string x string -> int
             5000    4,000       860	 3,080	    459     408     408    753	   378
            20000   11,000     2,919     9,864    1,388   1,235   1,214  2,616   1,138
            40000   19,000     5,330	17,421	  2,390   2,029   2,029  4,394   1,913
            60000   27,000     7,384    23,713    4,184   3,281   3,281  6,200   3,061



trigram
string x string x string -> int
             5000    5,500     1,609	 4,468	    749     772     772  1,969	   743
	    20000   18,000     6,001	16,081    2,596   2,545   2,545  6,394   2,469
            40000   36,000    11,658	30,595	  4,869   4,572   4,572 11,131   4,456
            60000   53,000    16,790	43,543    9,342   7,700   7,700 15,111   7,480



fourgram
string x string x string x string -> int
             5000    7,000     2,285	 5,898      982   1,192   1,192  3,704   1,163
	    20000   24,000     8,747	22,052    3,565   4,139   4,139 12,487   4,064
            40000   46,000    17,355	43,185    6,906   7,715   7,715 20,807   7,599
            60000   68,000    25,397	62,720   13,835  13,219  13,219 28,527  12,999



POS-tagger
string x string -> int
string x string -> int
                    26,000    11,893    29,342    4,244   4,599   4,599     NA	 3,900


log-linear
string -> double
                    15,000     7,885    16,650       NA   4,623   4,623     NA   4,799



trigram prob
string x string x string -> double
(here dict uses fadd3)
             5000    5,500     1,901     4,819       NA   1,316   1,316  1,891
            20000   18,000     7,438    17,550       NA   4,843   4,843  6,106
            40000   35,000    14,886    33,945       NA   9,007   9,007 10,576

                     hash        txt	prolog	  fadd1   fadd3   fadd4   conc

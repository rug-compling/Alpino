%!PS-Adobe-2.0
%%Creator: dvips 5.515 Copyright 1986, 1993 Radical Eye Software
%%Title: manual1.dvi
%%CreationDate: Thu Nov 30 15:00:44 1995
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips manual1.dvi -o manual1.ps
%DVIPSSource:  TeX output 1995.11.30:1458
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[
0 -1 1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{Resolution hsize -72 div mul 0 TR}if Resolution VResolution vsize
-72 div 1 add mul TR matrix currentmatrix dup dup 4 get round 4 exch put
dup dup 5 get round 5 exch put setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 add]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300
(/home/MP/konrad/fracas/clig/doc/manual1.dvi) @start
/Fa 1 1 df<FFFFF0FFFFF014027D881B>0 D E /Fb 16 121 df<071018F03070607060
60C060C060C06080C080C480C4C1C446C838700E0E7E8D13>97 D<07C00C201070207060
00C000C000C00080008000C010C02060C03F000C0E7E8D0F>99 D<003E000C000C000C00
0C0018001800180018073018F0307060706060C060C060C06080C080C480C4C1C446C838
700F177E9612>I<07C01C20301060106020FFC0C000C000C000C000C010402060C01F00
0C0E7E8D10>I<1F0006000600060006000C000C000C000C0018F01B181C081808381830
18301830306030603160616062C022C03C10177E9614>104 D<03000380030000000000
00000000000000001C002400460046008C000C0018001800180031003100320032001C00
09177F960C>I<3E0C0C0C0C181818183030303060606060C0C8C8C8D07007177E960B>
108 D<383C1E0044C6630047028100460301008E0703000C0603000C0603000C06060018
0C0600180C0620180C0C20180C0C4030180440301807801B0E7F8D1F>I<383C0044C600
4702004602008E06000C06000C06000C0C00180C00180C40181840181880300880300F00
120E7F8D15>I<07C00C20101020186018C018C018C01880308030C060C0C061803E000D
0E7E8D11>I<1C3C22462382230346030603060306030C060C060C0C0C081A3019E01800
1800300030003000FC001014808D12>I<38F04518463846308C000C000C000C00180018
0018001800300030000D0E7F8D10>114 D<07C00C201870187038001E000FC003E00060
6060E060C0C0C1803F000C0E7E8D10>I<030003000600060006000600FFC00C000C000C
001800180018001800300030803080310031001E000A147F930D>I<1C020426060E4606
06460606860C040C0C040C0C040C0C041818081818081818100818100C2C2003C7C0170E
7F8D19>119 D<0F1F0011A18020C38020C3004180000180000180000180000300000302
00C30200E70400C5080078F000110E7F8D14>I E /Fc 13 121 df<03F1C00FFDC03FFF
C07C0FC07003C0E003C0E001C0E001C0E001C0E000007000007800003F00001FF00007FE
0000FF00000F800003C00001C00000E00000E06000E0E000E0E000E0E001C0F001C0FC07
80FFFF80EFFE00E3F800131E7D9D1A>83 D<1FF0003FFC007FFE00780F00300700000380
000380007F8007FF801FFF803F8380780380700380E00380E00380E00380700780780F80
3FFFFC1FFDFC07F0FC16157D941A>97 D<FE0000FE0000FE00000E00000E00000E00000E
00000E00000E00000E3E000EFF800FFFE00FC1F00F80700F00380E00380E001C0E001C0E
001C0E001C0E001C0E001C0E001C0F00380F00780F80F00FC1E00FFFC00EFF80063E0016
1E7F9D1A>I<00FF8003FFC00FFFE01F01E03C00C0780000700000700000E00000E00000
E00000E00000E000007000007000007800703C00701F01F00FFFE003FFC000FE0014157D
941A>I<001FC0001FC0001FC00001C00001C00001C00001C00001C00001C001F1C007FD
C00FFFC01E0FC03C07C07803C07001C0E001C0E001C0E001C0E001C0E001C0E001C0E001
C07003C07003C03807C03E0FC01FFFFC07FDFC01F1FC161E7E9D1A>I<01F80007FF000F
FF801E07C03C01C07800E07000E0E00070E00070FFFFF0FFFFF0FFFFF0E0000070000070
00007800703C00701F01F00FFFE003FFC000FE0014157D941A>I<00C00001E00001E000
00C0000000000000000000000000000000000000007FE0007FE0007FE00000E00000E000
00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
00E0007FFF80FFFFC07FFF80121F7C9E1A>105 D<FE0000FE0000FE00000E00000E0000
0E00000E00000E00000E00000E0FFC0E1FFE0E0FFC0E03C00E07800E0F000E1E000E3C00
0E78000EFC000FFC000FDE000F8F000E07800E03800E01C00E01E00E00F0FFE3FEFFE3FF
FFE3FE181E7F9D1A>107 D<01F00007FC001FFF003E0F803C07807803C07001C0E000E0
E000E0E000E0E000E0E000E0E000E0F001E07001C07803C03C07803E0F801FFF0007FC00
01F00013157D941A>111 D<7F83F0FF8FF87FBFFC03FC3C03F01803E00003C00003C000
0380000380000380000380000380000380000380000380000380000380007FFF00FFFF00
7FFF0016157E941A>114 D<07FB801FFF807FFF80780780E00380E00380E00380780000
7FC0003FFC0007FE00003F800007806001C0E001C0E001C0F003C0FC0780FFFF00EFFE00
E3F80012157C941A>I<00C00001C00001C00001C00001C00001C00001C0007FFFE0FFFF
E0FFFFE001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0
7001C07001C07001C07000E0E000FFE0007FC0001F00141C7F9B1A>I<7FC7F87FCFFC7F
C7F80703C003838003C70001EF0000FE00007C00007800003800007C0000EE0001EE0001
C7000383800783C00F01C07FC7FCFFC7FE7FC7FC17157F941A>120
D E /Fd 64 126 df<70F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F870000000000070F8F8F8
70051C779B18>33 D<4010E038F078E038E038E038E038E038E038E038E038E038E03860
300D0E7B9C18>I<007000F001E003C007800F001E001C00380038007000700070007000
E000E000E000E000E000E000E000E0007000700070007000380038001C001E000F000780
03C001F000F000700C24799F18>40 D<6000F00078003C001E000F000780038001C001C0
00E000E000E000E00070007000700070007000700070007000E000E000E000E001C001C0
038007800F001E003C007800F00060000C247C9F18>I<1C3E7E7F3F1F070E1E7CF86008
0C788518>44 D<7FFF00FFFF80FFFF807FFF0011047D8F18>I<3078FCFC783006067785
18>I<000300000780000780000F80000F00001F00001E00001E00003E00003C00007C00
00780000780000F80000F00001F00001E00003E00003C00003C00007C0000780000F8000
0F00000F00001F00001E00003E00003C00003C00007C0000780000F80000F00000F00000
60000011247D9F18>I<03F0000FFE003FFF007C0F807003C0E001C0F000E0F000E06000
E00000E00000E00001C00001C00003C0000780000F00001E00003C0000780000F00001E0
0007C0000F80001E00E03C00E07FFFE0FFFFE07FFFE0131C7E9B18>50
D<07F8001FFE003FFF007807807803C07801C03001C00001C00003C0000380000F0003FF
0003FE0003FF000007800003C00001C00000E00000E00000E0F000E0F000E0F001C0F003
C07C07803FFF001FFE0003F800131C7E9B18>I<007E0001FF0007FF800F83C01E03C01C
03C0380180380000700000700000E1F800E7FE00FFFF00FE0780F803C0F001C0F000E0E0
00E0F000E07000E07000E07000E03801C03C03C01E07800FFF0007FE0001F800131C7E9B
18>54 D<3078FCFC783000000000000000003078FCFC78300614779318>58
D<000300000780001F80003F00007E0001FC0003F00007E0001FC0003F00007E0000FC00
00FC00007E00003F00001FC00007E00003F00001FC00007E00003F00001F800007800003
0011187D9918>60 D<600000F00000FC00007E00003F00001FC00007E00003F00001FC00
007E00003F00001F80001F80003F00007E0001FC0003F00007E0001FC0003F00007E0000
FC0000F0000060000011187D9918>62 D<00700000F80000F80000D80000D80001DC0001
DC0001DC00018C00038E00038E00038E00038E000306000707000707000707000707000F
FF800FFF800FFF800E03800E03801C01C01C01C07F07F0FF8FF87F07F0151C7F9B18>65
D<FFFC00FFFF00FFFF801C03C01C01C01C00E01C00E01C00E01C00E01C01E01C01C01C07
C01FFF801FFF001FFFC01C03C01C00E01C00F01C00701C00701C00701C00701C00F01C00
E01C03E0FFFFC0FFFF80FFFE00141C7F9B18>I<00F8E003FEE007FFE00F07E01E03E03C
01E03800E07000E07000E0700000E00000E00000E00000E00000E00000E00000E00000E0
00007000007000E07000E03800E03C00E01E01C00F07C007FF8003FE0000F800131C7E9B
18>I<7FF800FFFE007FFF001C0F801C03C01C03C01C01E01C00E01C00E01C00F01C0070
1C00701C00701C00701C00701C00701C00701C00701C00F01C00E01C00E01C01E01C01C0
1C03C01C0F807FFF00FFFE007FF800141C7F9B18>I<FFFFF0FFFFF0FFFFF01C00701C00
701C00701C00701C00001C00001C0E001C0E001C0E001FFE001FFE001FFE001C0E001C0E
001C0E001C00001C00001C00381C00381C00381C00381C0038FFFFF8FFFFF8FFFFF8151C
7F9B18>I<01F1C003FDC00FFFC01F0FC01C03C03803C03801C07001C07001C0700000E0
0000E00000E00000E00000E00000E00FF0E01FF0E00FF07001C07001C07003C03803C038
03C01C07C01F0FC00FFFC003FDC001F1C0141C7E9B18>71 D<7F07F0FF8FF87F07F01C01
C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01FFFC01FFFC01FFFC01C01
C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C07F07F0FF8FF87F07
F0151C7F9B18>I<7FFF00FFFF807FFF0001C00001C00001C00001C00001C00001C00001
C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
C00001C00001C00001C0007FFF00FFFF807FFF00111C7D9B18>I<01FFC003FFC001FFC0
000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00
000E00000E00000E00000E00000E00000E00000E00F00E00F00E00F03C007FFC003FF000
0FC000121C7D9B18>I<7F07F0FF87F87F07F01C03C01C07801C07001C0E001C1E001C3C
001C38001C70001CF0001DF0001DF0001FB8001FB8001F1C001E1C001C0E001C0E001C07
001C07001C03801C03801C01C07F03F0FF87F87F03F0151C7F9B18>I<7FE000FFE0007F
E0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E
00000E00000E00000E00000E00000E00000E00700E00700E00700E00700E00707FFFF0FF
FFF07FFFF0141C7F9B18>I<FC01F8FE03F8FE03F83B06E03B06E03B06E03B06E03B8EE0
3B8EE0398CE0398CE039DCE039DCE039DCE038D8E038D8E038F8E03870E03870E03800E0
3800E03800E03800E03800E03800E0FE03F8FE03F8FE03F8151C7F9B18>I<7E07F0FF0F
F87F07F01D81C01D81C01D81C01DC1C01CC1C01CC1C01CE1C01CE1C01CE1C01C61C01C71
C01C71C01C31C01C39C01C39C01C39C01C19C01C19C01C1DC01C0DC01C0DC01C0DC07F07
C0FF87C07F03C0151C7F9B18>I<0FF8003FFE007FFF00780F00700700F00780E00380E0
0380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0
0380E00380E00380F00780700700780F007FFF003FFE000FF800111C7D9B18>I<FFFE00
FFFF80FFFFC01C03C01C01E01C00E01C00701C00701C00701C00701C00701C00E01C01E0
1C03C01FFFC01FFF801FFE001C00001C00001C00001C00001C00001C00001C00001C0000
FF8000FF8000FF8000141C7F9B18>I<0FF8003FFE007FFF00780F00700700F00780E003
80E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E003
80E00380E1E380E1E380F0E78070F700787F007FFF003FFE000FFC00001C00001E00000E
00000F0000070000070011227D9B18>I<7FF800FFFE007FFF001C0F801C03801C03C01C
01C01C01C01C01C01C03C01C03801C0F801FFF001FFE001FFE001C0F001C07001C03801C
03801C03801C03801C03801C039C1C039C1C039C7F01F8FF81F87F00F0161C7F9B18>I<
03F3801FFF803FFF807C0F80700780E00380E00380E00380E000007000007800003F0000
1FF00007FE0000FF00000F800003C00001C00000E00000E06000E0E000E0E001E0F001C0
F80780FFFF80FFFE00E7F800131C7E9B18>I<7FFFF8FFFFF8FFFFF8E07038E07038E070
38E070380070000070000070000070000070000070000070000070000070000070000070
0000700000700000700000700000700000700000700007FF0007FF0007FF00151C7F9B18
>I<FF83FEFF83FEFF83FE1C00701C00701C00701C00701C00701C00701C00701C00701C
00701C00701C00701C00701C00701C00701C00701C00701C00701C00701C00700E00E00F
01E00783C003FF8001FF00007C00171C809B18>I<FF07F8FF07F8FF07F81C01C01C01C0
1C01C01C01C00E03800E03800E03800E03800F0780070700070700070700070700038E00
038E00038E00038E00018C0001DC0001DC0001DC0000D80000F80000F800007000151C7F
9B18>I<FF07F8FF07F8FF07F81C01C01E03C00E03800F0780070700070700038E00038E
0001DC0001DC0001DC0000F80000F8000070000070000070000070000070000070000070
0000700000700001FC0003FE0001FC00151C7F9B18>89 D<1FE0003FF8007FFC00781E00
300E0000070000070000FF0007FF001FFF007F0700780700E00700E00700E00700F00F00
781F003FFFF01FFBF007E1F014147D9318>97 D<7E0000FE00007E00000E00000E00000E
00000E00000E00000E3E000EFF800FFFC00FC1E00F80E00F00700E00700E00380E00380E
00380E00380E00380E00380F00700F00700F80E00FC1E00FFFC00EFF80063E00151C809B
18>I<01FE0007FF001FFF803E0780380300700000700000E00000E00000E00000E00000
E00000E000007000007001C03801C03E03C01FFF8007FF0001FC0012147D9318>I<001F
80003F80001F8000038000038000038000038000038003E3800FFB801FFF803C1F80380F
80700780700380E00380E00380E00380E00380E00380E00380700780700780380F803C1F
801FFFF00FFBF803E3F0151C7E9B18>I<01F00007FC001FFE003E0F0038078070038070
0380E001C0E001C0FFFFC0FFFFC0FFFFC0E000007000007001C03801C03E03C01FFF8007
FF0001FC0012147D9318>I<001F80007FC000FFE000E1E001C0C001C00001C00001C000
7FFFC0FFFFC0FFFFC001C00001C00001C00001C00001C00001C00001C00001C00001C000
01C00001C00001C00001C00001C0007FFF007FFF007FFF00131C7F9B18>I<01E1F007FF
F80FFFF81E1E301C0E003807003807003807003807003807001C0E001E1E001FFC001FF8
0039E0003800001C00001FFE001FFFC03FFFE07801F0700070E00038E00038E00038E000
387800F07E03F01FFFC00FFF8001FC00151F7F9318>I<7E0000FE00007E00000E00000E
00000E00000E00000E00000E3E000EFF800FFFC00FC1C00F80E00F00E00E00E00E00E00E
00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E07FC3FCFFE7FE7FC3FC17
1C809B18>I<03800007C00007C00007C0000380000000000000000000000000007FC000
FFC0007FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C000
01C00001C00001C00001C000FFFF00FFFF80FFFF00111D7C9C18>I<0038007C007C007C
003800000000000000000FFC1FFC0FFC001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C6038F078FFF07FE03F800E27
7E9C18>I<FE0000FE0000FE00000E00000E00000E00000E00000E00000E3FF00E7FF00E
3FF00E07800E0F000E1E000E3C000E78000EF0000FF8000FFC000F9C000F0E000E0F000E
07000E03800E03C0FFC7F8FFC7F8FFC7F8151C7F9B18>I<7FE000FFE0007FE00000E000
00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
00E00000E00000E00000E00000E00000E00000E00000E00000E0007FFFC0FFFFE07FFFC0
131C7E9B18>I<7CE0E000FFFBF8007FFFF8001F1F1C001E1E1C001E1E1C001C1C1C001C
1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C
1C1C007F1F1F00FFBFBF807F1F1F001914819318>I<7E3E00FEFF807FFFC00FC1C00F80
E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00
E07FC3FCFFE7FE7FC3FC1714809318>I<01F0000FFE001FFF003E0F803803807001C070
01C0E000E0E000E0E000E0E000E0E000E0F001E07001C07803C03C07803E0F801FFF000F
FE0001F00013147E9318>I<7E3E00FEFF807FFFC00FC1E00F80E00F00700E00700E0038
0E00380E00380E00380E00380E00380F00700F00700F80E00FC1E00FFFC00EFF800E3E00
0E00000E00000E00000E00000E00000E00000E00007FC000FFE0007FC000151E809318>
I<01E38007FB801FFF803E1F80380F80700780700780E00380E00380E00380E00380E003
80E00380700780700780380F803C1F801FFF800FFB8003E3800003800003800003800003
80000380000380000380003FF8003FF8003FF8151E7E9318>I<7F87E0FF9FF07FBFF803
F87803F03003E00003C00003C00003800003800003800003800003800003800003800003
80000380007FFE00FFFF007FFE0015147F9318>I<07F7003FFF007FFF00780F00E00700
E00700E007007C00007FE0001FFC0003FE00001F00600780E00380E00380F00380F80F00
FFFF00FFFC00E7F00011147D9318>I<0180000380000380000380000380007FFFC0FFFF
C0FFFFC00380000380000380000380000380000380000380000380000380000380400380
E00380E00380E001C1C001FFC000FF80003E0013197F9818>I<7E07E0FE0FE07E07E00E
00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E
01E00F03E007FFFC03FFFE01FCFC1714809318>I<7F8FF0FF8FF87F8FF01E03C00E0380
0E03800E0380070700070700070700038E00038E00038E00038E0001DC0001DC0001DC00
00F80000F80000700015147F9318>I<FF8FF8FF8FF8FF8FF83800E03800E03800E01C01
C01C01C01C71C01CF9C01CF9C01CD9C01CD9C00DDD800DDD800DDD800D8D800F8F800F8F
8007070015147F9318>I<7F8FF07F9FF07F8FF0070700078E00039E0001DC0001F80000
F80000700000F00000F80001DC00039E00038E000707000F07807F8FF0FF8FF87F8FF015
147F9318>I<7F8FF0FF8FF87F8FF00E01C00E03800E0380070380070700070700038700
038600038E0001CE0001CE0000CC0000CC0000DC00007800007800007800007000007000
00700000F00000E00079E0007BC0007F80003F00001E0000151E7F9318>I<3FFFF07FFF
F07FFFF07001E07003C0700780000F00001E00003C0000F80001F00003C0000780000F00
701E00703C0070780070FFFFF0FFFFF0FFFFF014147F9318>I<0007E0001FE0007FE000
780000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00001
E0007FC000FF8000FF80007FC00001E00000E00000E00000E00000E00000E00000E00000
E00000E00000E00000E00000E000007800007FE0001FE00007E013247E9F18>I<7C0000
FF0000FFC00003C00000E00000E00000E00000E00000E00000E00000E00000E00000E000
00E00000E00000F000007FC0003FE0003FE0007FC000F00000E00000E00000E00000E000
00E00000E00000E00000E00000E00000E00000E00003C000FFC000FF00007C000013247E
9F18>125 D E /Fe 42 121 df<1C007F00FF80FF80FF80FF80FF807F001C0009097B88
13>46 D<003F800001FFF00007E0FC000FC07E001F803F001F803F003F001F803F001F80
7F001FC07F001FC07F001FC07F001FC0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0
FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0FF001FE0
FF001FE07F001FC07F001FC07F001FC07F001FC03F001F803F001F801F803F001F803F00
0FC07E0007E0FC0001FFF000003F80001B277DA622>48 D<000E00001E00007E0007FE00
FFFE00FFFE00F8FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE007FFFFE7FFFFE7FFFFE17277B
A622>I<00FF800003FFF0000FFFFC003F03FF007C00FF807C007FC0FE007FC0FF003FE0
FF003FE0FF003FE0FF001FE07E001FE03C003FE000003FE000003FC000003FC000007F80
00007F800000FF000001FE000001FC000003F0000007E000000FC000001F0000003E0000
007C00E0007800E000F000E001E001C0038001C0070001C00FFFFFC01FFFFFC03FFFFFC0
7FFFFFC0FFFFFF80FFFFFF80FFFFFF801B277DA622>I<007F800003FFF00007FFFC001F
81FE001F00FF003F80FF003F807F803FC07F803F807F803F807F801F007F800000FF8000
00FF000000FF000001FE000003F8000007F00000FFC00000FFF0000001FC000000FF0000
007F8000007FC000003FC000003FE000003FE000003FE03C003FE07E003FE0FF003FE0FF
003FE0FF003FC0FF007FC0FE007F807C00FF803F01FF001FFFFC0007FFF00000FF80001B
277DA622>I<00000E0000001E0000003E0000007E000000FE000000FE000001FE000003
FE0000077E00000E7E00000E7E00001C7E0000387E0000707E0000E07E0000E07E0001C0
7E0003807E0007007E000E007E000E007E001C007E0038007E0070007E00E0007E00FFFF
FFF8FFFFFFF8FFFFFFF80000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE00007FFFF8007FFFF8007FFFF81D277EA622>I<0C0003000F803F000FFFFE
000FFFFE000FFFFC000FFFF8000FFFE0000FFFC0000FFE00000E0000000E0000000E0000
000E0000000E0000000E0000000E7FC0000FFFF8000F80FE000E007F000C003F8000003F
8000001FC000001FC000001FE000001FE018001FE07E001FE0FE001FE0FE001FE0FE001F
E0FE001FE0FE001FC078003FC078003F803C007F001F01FE000FFFFC0003FFF00000FF80
001B277DA622>I<0007F000003FFC0000FFFF0001FC0F0007F01F800FE03F800FC03F80
1FC03F803F803F803F801F007F8000007F0000007F0000007F000000FF000000FF0FC000
FF3FF800FF70FE00FFE03F00FFC03F80FF801FC0FF801FC0FF801FC0FF001FE0FF001FE0
FF001FE0FF001FE07F001FE07F001FE07F001FE07F001FE03F801FC03F801FC01F803F80
0FC03F8007E0FF0003FFFC0000FFF000003FC0001B277DA622>I<380000003E0000003F
FFFFF03FFFFFF03FFFFFF07FFFFFE07FFFFFC07FFFFFC07FFFFF8070000F0070001E0070
003C00E0003800E0007800E000F0000001E0000003C0000003C000000780000007800000
0F0000001F0000001F0000001F0000003F0000003F0000003E0000007E0000007E000000
7E0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE0000003800001C297CA822>I<003FC00001FFF00003FFFC000FC07E000F00
3F001F001F001E001F803E000F803E000F803F000F803F800F803FC01F803FF01F003FFC
3F001FFE7E001FFFF8000FFFE00007FFF80001FFFC0001FFFF0007FFFF801F8FFF803F03
FFC07E01FFC07C007FE0FC001FE0F8000FE0F80007E0F80003E0F80003E0F80003E0FC00
03C07C0007C07E0007803F000F801FC03F000FFFFC0003FFF800007FC0001B277DA622>
I<007F800001FFF00007FFF8000FE0FE001FC07E003F803F007F003F807F003F80FF001F
C0FF001FC0FF001FC0FF001FC0FF001FE0FF001FE0FF001FE0FF001FE07F003FE07F003F
E07F003FE03F807FE01F80FFE00FE1DFE003FF9FE0007E1FE000001FE000001FC000001F
C000001FC000003FC01F003F803F803F803F807F003F807F003F80FE003F01FC001E03F8
000FFFE00007FF800001FE00001B277DA622>I<000003800000000007C00000000007C0
000000000FE0000000000FE0000000000FE0000000001FF0000000001FF0000000003FF8
000000003FF8000000003FF80000000073FC0000000073FC00000000F3FE00000000E1FE
00000000E1FE00000001C0FF00000001C0FF00000003C0FF80000003807F80000007807F
C0000007003FC0000007003FC000000E003FE000000E001FE000001E001FF000001C000F
F000001FFFFFF000003FFFFFF800003FFFFFF80000780007FC0000700003FC0000700003
FC0000E00001FE0000E00001FE0001E00001FF0001C00000FF0001C00000FF00FFFE001F
FFFEFFFE001FFFFEFFFE001FFFFE2F297EA834>65 D<FFFFFFF80000FFFFFFFF8000FFFF
FFFFC00003F8001FF00003F8000FF80003F80007FC0003F80003FC0003F80003FC0003F8
0003FE0003F80001FE0003F80001FE0003F80001FE0003F80003FE0003F80003FC0003F8
0003FC0003F80007F80003F8000FF00003F8001FE00003F800FFC00003FFFFFE000003FF
FFFFE00003F80007F00003F80003FC0003F80001FE0003F80001FE0003F80000FF0003F8
0000FF0003F80000FF8003F80000FF8003F80000FF8003F80000FF8003F80000FF8003F8
0000FF8003F80000FF0003F80001FF0003F80003FE0003F80007FC0003F8001FF800FFFF
FFFFF000FFFFFFFFC000FFFFFFFE000029297DA831>I<00003FF001800003FFFE078000
0FFFFF8F80003FF007FF8000FF8001FF8001FE00007F8007FC00003F8007F800001F800F
F000000F801FE000000F803FE0000007803FC0000007807FC0000003807FC0000003807F
C000000380FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF
8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF80000000007F
C0000000007FC0000003807FC0000003803FC0000003803FE0000003801FE0000007800F
F00000070007F800000F0007FC00001E0001FE00003C0000FF8000F800003FF007F00000
0FFFFFC0000003FFFF000000003FF8000029297CA832>I<FFFFFFFFC0FFFFFFFFC0FFFF
FFFFC003FC003FC003FC000FE003FC0003E003FC0001E003FC0001E003FC0000E003FC00
00E003FC0000E003FC0000F003FC03807003FC03807003FC03807003FC03800003FC0780
0003FC07800003FC1F800003FFFF800003FFFF800003FFFF800003FC1F800003FC078000
03FC07800003FC03800003FC03800003FC03800003FC03800003FC00000003FC00000003
FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000FFFF
FC0000FFFFFC0000FFFFFC000024297DA82B>70 D<FFFFFCFFFFFCFFFFFC01FE0001FE00
01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00
01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00
01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00FFFFFCFFFFFCFFFFFC
16297EA81A>73 D<FFFFFC0000FFFFFC0000FFFFFC000003FC00000003FC00000003FC00
000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC0000
0003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000
03FC00000003FC00000003FC00000003FC00000003FC0001C003FC0001C003FC0001C003
FC0001C003FC0003C003FC00038003FC00038003FC00078003FC00078003FC000F8003FC
000F8003FC001F8003FC007F8003FC01FF00FFFFFFFF00FFFFFFFF00FFFFFFFF0022297D
A829>76 D<0000FFE000000007FFFC0000003FC07F8000007F001FC00001FC0007F00003
F80003F80007F00001FC000FF00001FE001FE00000FF001FE00000FF003FC000007F803F
C000007F807FC000007FC07F8000003FC07F8000003FC07F8000003FC0FF8000003FE0FF
8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF
8000003FE0FF8000003FE0FF8000003FE07F8000003FC07FC000007FC07FC000007FC03F
C000007F803FC000007F801FE00000FF001FE00000FF000FF00001FE0007F00001FC0003
F80003F80001FC0007F00000FF001FE000003FC07F8000000FFFFE00000000FFE000002B
297CA834>79 D<007F806003FFF0E00FFFFFE01F807FE03F001FE07E0007E07E0003E07C
0003E0FC0001E0FC0001E0FC0000E0FE0000E0FE0000E0FF000000FFC000007FFE00007F
FFE0003FFFFC003FFFFF001FFFFF8007FFFFC003FFFFE000FFFFF00007FFF000007FF000
000FF8000007F8000003F8E00003F8E00001F8E00001F8E00001F8F00001F8F00001F0F8
0003F0FC0003E0FF0007E0FFE01FC0FFFFFF00E0FFFE00C01FF0001D297CA826>83
D<7FFFFFFFFFC07FFFFFFFFFC07FFFFFFFFFC07F803FC03FC07E003FC007C078003FC003
C078003FC003C070003FC001C0F0003FC001E0F0003FC001E0E0003FC000E0E0003FC000
E0E0003FC000E0E0003FC000E0E0003FC000E000003FC0000000003FC0000000003FC000
0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000
0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000
0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000
0000003FC00000007FFFFFE000007FFFFFE000007FFFFFE0002B287EA730>I<FFFFF001
FFFCFFFFF001FFFCFFFFF001FFFC03FC0000070003FC0000070003FC0000070003FC0000
070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000
070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000
070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000
070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000
0F0001FC00000E0001FE00000E0000FE00001E0000FF00003C00007F80007800003FC000
F800001FF007E0000007FFFFC0000001FFFF000000001FF800002E297DA835>I<01FF80
0007FFF0000F81FC001FC0FE001FC07F001FC07F001FC03F800F803F8000003F8000003F
8000003F80000FFF8000FFFF8007FC3F801FE03F803F803F807F803F807F003F80FE003F
80FE003F80FE003F80FE007F80FF007F807F00FFC03F83DFFC0FFF0FFC01FC03FC1E1B7E
9A21>97 D<FFE0000000FFE0000000FFE00000000FE00000000FE00000000FE00000000F
E00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0
0000000FE00000000FE1FE00000FE7FF80000FFE07E0000FF803F8000FF001FC000FE000
FE000FE000FE000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F800FE0007F
800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE000FF00
0FE000FE000FF000FE000FF001FC000FF803F8000F9E07E0000F0FFF80000E01FC000021
2A7EA926>I<001FF80000FFFE0003F01F000FE03F801FC03F803F803F803F803F807F80
1F007F000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00
0000FF0000007F0000007F8000003F8001C03FC001C01FC003C00FE0078003F01F0000FF
FC00001FE0001A1B7E9A1F>I<00003FF80000003FF80000003FF800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000003F800000003F800000003F800001FE3F80000FFFBF80003F03FF8000FE00FF800
1FC007F8003F8003F8003F8003F8007F8003F8007F0003F800FF0003F800FF0003F800FF
0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F8007F00
03F8007F0003F8003F8003F8003F8007F8001FC00FF8000FE01FF80003F03FFF8000FFF3
FF80003FC3FF80212A7EA926>I<003FE00001FFF80003F07E000FE03F001FC01F803F80
0FC03F800FC07F000FC07F0007E0FF0007E0FF0007E0FF0007E0FFFFFFE0FFFFFFE0FF00
0000FF000000FF000000FF0000007F0000007F8000003F8000E03F8001E01FC001C00FE0
03C003F81F8000FFFE00001FF0001B1B7E9A20>I<0007F0003FFC00FE3E01FC7F03F87F
03F87F07F07F07F03E07F00007F00007F00007F00007F00007F00007F000FFFFC0FFFFC0
FFFFC007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F000
07F00007F00007F00007F00007F00007F00007F00007F00007F00007F0007FFF807FFF80
7FFF80182A7EA915>I<00FF81F003FFE7FC0FC1FE7C1F80FC7C3F80FE7C3F007E107F00
7F007F007F007F007F007F007F007F007F007F007F003F007E003F80FE001F80FC000FC1
F8001FFFE00018FF8000380000003C0000003C0000003E0000003FFFF8003FFFFF001FFF
FFC00FFFFFE007FFFFF01FFFFFF07E0007F87C0001F8F80001F8F80000F8F80000F8F800
00F8FC0001F87E0003F03F0007E00FC01F8003FFFE00007FF0001E287E9A22>I<FFE000
0000FFE0000000FFE00000000FE00000000FE00000000FE00000000FE00000000FE00000
000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000000
0FE07F00000FE1FFC0000FE787E0000FEE07F0000FFC03F8000FF803F8000FF003F8000F
F003F8000FF003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F800FFFE3FFF80FFFE3FFF80FFFE3FFF80212A7DA926>I<0700
1FC01FE03FE03FE03FE01FE01FC007000000000000000000000000000000FFE0FFE0FFE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE0FFFEFFFEFFFE0F2B7DAA14>I<FFE00000FFE00000FFE000000FE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE000000FE01FFC0FE01FFC0FE01FFC0FE007C00FE00F800FE01E000FE07C000F
E0F8000FE1F0000FE3E0000FE7C0000FEFE0000FFFF0000FFFF0000FFFF8000FF3FC000F
E1FE000FC0FE000FC0FF000FC07F800FC03F800FC03FC00FC01FE00FC00FF0FFFC3FFEFF
FC3FFEFFFC3FFE1F2A7EA924>107 D<FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7DA914>I<FF
C07F800FF000FFC1FFE03FFC00FFC783F0F07E000FCE03F9C07F000FDC01FB803F000FF8
01FF003F800FF001FE003F800FF001FE003F800FF001FE003F800FE001FC003F800FE001
FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC
003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC00
3F800FE001FC003F800FE001FC003F800FE001FC003F80FFFE1FFFC3FFF8FFFE1FFFC3FF
F8FFFE1FFFC3FFF8351B7D9A3C>I<FFC07F0000FFC1FFC000FFC787E0000FCE07F0000F
DC03F8000FF803F8000FF003F8000FF003F8000FF003F8000FE003F8000FE003F8000FE0
03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FFFE3FFF80FFFE3FFF
80FFFE3FFF80211B7D9A26>I<003FE00001FFFC0003F07E000FC01F801F800FC03F800F
E03F0007E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007F8FF0007F8FF0007
F8FF0007F8FF0007F8FF0007F87F0007F07F0007F03F800FE03F800FE01F800FC00FC01F
8007F07F0001FFFC00003FE0001D1B7E9A22>I<FFE1FE0000FFE7FF8000FFFE07E0000F
F803F8000FF001FC000FE001FE000FE000FE000FE000FF000FE000FF000FE0007F800FE0
007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE000
7F800FE000FF000FE000FF000FE000FE000FF001FE000FF003FC000FF803F8000FFE0FE0
000FEFFF80000FE1FC00000FE00000000FE00000000FE00000000FE00000000FE0000000
0FE00000000FE00000000FE00000000FE0000000FFFE000000FFFE000000FFFE00000021
277E9A26>I<001FC0380000FFF0780003F83CF8000FE01FF8001FE00FF8003FC007F800
3F8007F8007F8003F8007F8003F800FF0003F800FF0003F800FF0003F800FF0003F800FF
0003F800FF0003F800FF0003F800FF0003F800FF0003F8007F8003F8007F8003F8003F80
03F8003FC007F8001FC00FF8000FE01FF80003F07FF80000FFF3F800003FC3F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000003F80000003FFF8000003FFF8000003FFF8021277E9A24>I<FFC1F0FFC7FCFFCE
3E0FDC7F0FD87F0FF87F0FF07F0FF03E0FF0000FE0000FE0000FE0000FE0000FE0000FE0
000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF
00181B7E9A1C>I<03FE300FFFF03E03F07800F07000F0F00070F00070F80070FC0000FF
E000FFFE007FFFC03FFFE01FFFF007FFF800FFFC0003FC0000FCE0007CE0003CF0003CF0
003CF80078FC0078FF01F0F7FFC0C1FF00161B7E9A1B>I<007000007000007000007000
00F00000F00000F00001F00003F00003F00007F0001FFFF0FFFFF0FFFFF007F00007F000
07F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F038
07F03807F03807F03807F03807F03807F03803F87001F8F000FFE0001F8015267FA51B>
I<FFE03FF800FFE03FF800FFE03FF8000FE003F8000FE003F8000FE003F8000FE003F800
0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE007F8000FE0
07F8000FE00FF80007E01FF80003F03BFF8001FFF3FF80003FC3FF80211B7D9A26>I<FF
FC0FFF00FFFC0FFF00FFFC0FFF0007F003C00003F807800001FC07800000FE0F000000FF
1E0000007F3C0000003FF80000001FF00000000FF00000000FF000000007F000000007F8
0000000FFC0000001FFE0000001EFE0000003C7F000000783F800000F01FC00001E01FE0
0001C00FE00003C007F000FFF01FFF80FFF01FFF80FFF01FFF80211B7F9A24>120
D E /Ff 5 109 df<001FC000FFF801FFFC03E03C07800C0F00001E00003E00003C0000
7C0000780000780000780000F00000F00000F00000F00000F00000F00000F00000F00000
7800007800007800007C00003C00003E00001E00000F000207800E03E03E01FFFC00FFF0
001FC017227DA01D>67 D<03F00FFC1FFE3E0E3C0278007800F000F000F000F000F000F0
00780078003C013E0F1FFF0FFE03F010147E9314>99 D<03E0F00FFFF01FFFF03E3E003C
1E00780F00780F00780F00780F00780F003C1E003E3E001FFC003FF80033E00030000038
00003FFE003FFF801FFFC03FFFE07803F0F000F0F000F0F000F0F801F07E07E03FFFC00F
FF0003FC00141E7F9317>103 D<F0F0F0F00000000000000000F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F004207D9F0B>105 D<F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F004207D9F0B>108 D E /Fg
20 119 df<0003F020001E0C60003002E000E003C001C001C0038001C0070000C00E0000
801E0000801C0000803C0000803C000000780000007800000078000000F0000000F00000
00F0000000F0000000F0000400F0000400F0000400F00008007000080070001000380020
00180040000C0180000706000001F800001B1E7A9C1E>67 D<0003F020001E0C60003002
E000E003C001C001C0038001C0070000C00E0000801E0000801C0000803C0000803C0000
00780000007800000078000000F0000000F0000000F001FFC0F0001E00F0001C00F0001C
00F0001C00F0001C00700038007000380038003800180078000C0090000707100001F800
001B1E7A9C20>71 D<01FFC0003C00003800003800003800003800007000007000007000
00700000E00000E00000E00000E00001C00001C00001C00001C000038000038000038000
0380000700000700000700000700000F0000FFE000121C7E9B10>73
D<01FFE0003C0000380000380000380000380000700000700000700000700000E00000E0
0000E00000E00001C00001C00001C00001C0000380080380080380080380100700100700
300700600700E00E03C0FFFFC0151C7D9B1A>76 D<03CC063C0C3C181C38383038703870
38E070E070E070E070E0E2C0E2C0E261E462643C380F127B9115>97
D<01F007080C08181C3838300070007000E000E000E000E000E000E008E010602030C01F
000E127B9113>99 D<01E007100C1018083810701070607F80E000E000E000E000E000E0
086010602030C01F000D127B9113>101 D<00F3018F030F06070E0E0C0E1C0E1C0E381C
381C381C381C383830383038187818F00F700070007000E000E0C0C0E1C0C3007E00101A
7D9113>103 D<0FC00001C00001C0000380000380000380000380000700000700000700
000700000E78000E8C000F0E000E0E001C0E001C0E001C0E001C0E00381C00381C00381C
00383800703880703880707080707100E03200601C00111D7D9C15>I<01800380010000
000000000000000000000000001C002600470047008E008E000E001C001C001C00380038
00710071007100720072003C00091C7C9B0D>I<1F800380038007000700070007000E00
0E000E000E001C001C001C001C0038003800380038007000700070007000E400E400E400
E40068003800091D7C9C0B>108 D<3C1E0780266318C04683A0E04703C0E08E0380E08E
0380E00E0380E00E0380E01C0701C01C0701C01C0701C01C070380380E0388380E038838
0E0708380E0710701C0320300C01C01D127C9122>I<3C3C002646004687004707008E07
008E07000E07000E07001C0E001C0E001C0E001C1C00381C40381C403838403838807019
00300E0012127C9117>I<01E007180C0C180C380C300E700E700EE01CE01CE01CE018E0
38E030E06060C031801E000F127B9115>I<07870004D98008E0C008E0C011C0E011C0E0
01C0E001C0E00381C00381C00381C00381800703800703000707000706000E8C000E7000
0E00000E00001C00001C00001C00001C00003C0000FF8000131A7F9115>I<3C3C26C246
8747078E068E000E000E001C001C001C001C0038003800380038007000300010127C9112
>114 D<01F006080C080C1C18181C001F001FC00FF007F0007800386030E030C0308060
60C01F000E127D9111>I<00C001C001C001C00380038003800380FFE00700070007000E
000E000E000E001C001C001C001C00384038403840388019000E000B1A7D990E>I<1E03
00270700470700470700870E00870E000E0E000E0E001C1C001C1C001C1C001C1C003838
803838801838801839001C5900078E0011127C9116>I<1E06270E470E4706870287020E
020E021C041C041C041C0818083808181018200C4007800F127C9113>I
E /Fh 4 109 df<000FE0200070186001C00460030003E0060001E00E0000E01C000060
38000060380000207800002070000020F0000000F0000000F0000000F0000000F0000000
F0000000F0000000F0000000700000207800002038000020380000201C0000400E000040
060000800300010001C0060000701800000FE0001B1E7D9C21>67
D<00FC200782600E01E01C00E0380060780020700020F00020F00000F00000F00000F00F
F8F000E0F000E07000E07800E03800E01C00E00E00E007836000FC2015157E941B>103
D<FF801C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C00FF8009157F940D>105 D<FFC0001C00001C00001C00001C00001C00001C00
001C00001C00001C00001C00001C00001C00001C00801C00801C00801C01801C01001C03
001C0700FFFF0011157F9415>108 D E /Fi 29 122 df<60F0F06004047C830C>46
D<07E01830201C201C781E780E781E381E001C001C00180030006007E00030001C001C00
0E000F000F700FF80FF80FF80FF00E401C201C183007E0101D7E9B15>51
D<03C00C301818300C700C600EE006E006E007E007E007E007E0076007700F300F18170C
2707C700060006000E300C780C78187010203030C00F80101D7E9B15>57
D<FFF03FE00F000F000F000C000F0008000F0010000F0020000F0040000F0080000F0100
000F0200000F0400000F0E00000F1F00000F2F00000F2780000F4780000F83C0000F01E0
000F01E0000F00F0000F00F8000F0078000F003C000F003C000F001E000F001F000F001F
80FFF07FF01C1C7E9B20>75 D<7FFFFFC0700F01C0600F00C0400F0040400F0040C00F00
20800F0020800F0020800F0020000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000001F800003FFFC001B1C7F9B1E>84 D<FEFEC0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>
91 D<FEFE06060606060606060606060606060606060606060606060606060606060606
060606060606FEFE0729809E0C>93 D<1FC000307000783800781C00301C00001C00001C
0001FC000F1C00381C00701C00601C00E01C40E01C40E01C40603C40304E801F87001212
7E9115>97 D<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C7C001D86001E03001C01801C01C01C00C01C00E01C00E01C00E01C00E01C00E0
1C00E01C00C01C01C01C01801E030019060010F800131D7F9C17>I<07E00C3018783078
70306000E000E000E000E000E000E00060007004300418080C3007C00E127E9112>I<00
3F0000070000070000070000070000070000070000070000070000070000070003E7000C
1700180F00300700700700600700E00700E00700E00700E00700E00700E0070060070070
0700300700180F000C370007C7E0131D7E9C17>I<03E00C301818300C700E6006E006FF
FEE000E000E000E00060007002300218040C1803E00F127F9112>I<00F8018C071E061E
0E0C0E000E000E000E000E000E00FFE00E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E007FE00F1D809C0D>I<00038003C4C00C38C01C3880181800
381C00381C00381C00381C001818001C38000C300013C0001000003000001800001FF800
1FFF001FFF803003806001C0C000C0C000C0C000C06001803003001C0E0007F800121C7F
9215>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00
001C7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C0380FF9FF0141D7F9C17>I<18003C003C0018000000
000000000000000000000000FC001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C00FF80091D7F9C0C>I<FC001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C00FF80091D7F9C0C>108 D<FC7E07E0001C838838001D019018001E01E01C001C01
C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C0
1C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F91
24>I<FC7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C03801C03801C03801C0380FF9FF014127F9117>I<03F0000E1C001806
00300300700380600180E001C0E001C0E001C0E001C0E001C0E001C06001807003803003
001806000E1C0003F00012127F9115>I<FC7C001D86001E03001C01801C01C01C00C01C
00E01C00E01C00E01C00E01C00E01C00E01C01C01C01C01C01801E03001D06001CF8001C
00001C00001C00001C00001C00001C00001C0000FF8000131A7F9117>I<FCE01D301E78
1E781C301C001C001C001C001C001C001C001C001C001C001C001C00FFC00D127F9110>
114 D<1F9030704030C010C010E010F8007F803FE00FF000F880388018C018C018E010D0
608FC00D127F9110>I<04000400040004000C000C001C003C00FFE01C001C001C001C00
1C001C001C001C001C001C101C101C101C101C100C100E2003C00C1A7F9910>I<FC1F80
1C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C07800C07800E1B8003E3F014127F9117>I<FF07E03C03801C01001C01000E02
000E020007040007040007040003880003880003D80001D00001D00000E00000E00000E0
0000400013127F9116>I<FF3FCFE03C0F03801C0701801C0701001C0B01000E0B82000E
0B82000E1182000711C4000711C4000720C40003A0E80003A0E80003C0680001C0700001
C0700001803000008020001B127F911E>I<7F8FF00F03800F030007020003840001C800
01D80000F00000700000780000F800009C00010E00020E000607000403801E07C0FF0FF8
1512809116>I<FF07E03C03801C01001C01000E02000E02000704000704000704000388
0003880003D80001D00001D00000E00000E00000E000004000004000008000008000F080
00F10000F300006600003C0000131A7F9116>I E /Fj 4 53 df<0C001C00EC000C000C
000C000C000C000C000C000C000C000C000C000C000C000C000C00FFC00A137D9211>49
D<1F0060C06060F070F030603000700070006000C001C00180020004000810101020207F
E0FFE00C137E9211>I<0FC030707038703870380038003000E00FC0007000380018001C
601CF01CF018E03860701FC00E137F9211>I<006000E000E00160026006600C60086010
6020606060C060FFFC0060006000600060006003FC0E137F9211>I
E /Fk 9 96 df<003FC00000C0300003000C000400020008000100180001801400028022
000440410008204080102040402020802040108020401080108010800900108006001080
060010800900108010801080204010802040104040202040801020410008202200044014
00028018000180080001000400020003000C0000C03000003FC0001C207D9A23>10
D<07E01FF83FFC7FFE7FFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFE7FFE3FFC1FF807
E010127D9317>15 D<007FFFC001FFFFC0078000000E0000001C00000038000000300000
007000000060000000E0000000C0000000C0000000C0000000C0000000C0000000C00000
00C0000000E0000000600000007000000030000000380000001C0000000E000000078000
0001FFFFC0007FFFC0000000000000000000000000000000000000000000000000000000
007FFFFFC07FFFFFC01A247C9C23>18 D<C00003C00003E0000760000660000670000E30
000C30000C38001C1800181C00380FFFF00FFFF00E00700600600600600700E00300C003
00C00381C001818001818001C38000C30000E700006600006600007E00003C00003C0000
3C000018000018001821809F19>56 D<FFFFC0FFFFC00000C00000C00000C00000C00000
C00000C00000C00000C00000C00000C00000C00000C00000C07FFFC07FFFC00000C00000
C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C0FFFF
C0FFFFC012207D9F19>I<FFFFFEFFFFFE00000600000600000600000600000600000600
0006000006000006000006000006170D7D8F1E>I<00060000060003FE00061C000C0C00
180E00301F00301B00701B80601980603980603180E031C0E071C0E061C0E061C0E061C0
E0E1C0E0C1C0E0C1C0E0C1C0E1C1C0E181C0E181C0E181C0E381C0630180630180770380
7603803603003603001E06000C0C000E18000FF0001C000018000018000012277EA217>
I<003800003800003800007C00006C0000EE0000C60000C60001C7000183000383800301
800301800701C00600C00E00E00C00600C00601C00701800303800383000183000187000
1C60000CE0000EC00006C00006171C7D9A1E>94 D<C00006C00006E0000E60000C70001C
3000183000183800381800301C00700C00600C00600E00E00600C00701C0030180030180
03838001830001C70000C60000C60000EE00006C00007C00003800003800003800171C7D
9A1E>I E /Fl 4 53 df<03000700FF0007000700070007000700070007000700070007
0007000700070007000700070007007FF00C157E9412>49 D<0F8030E040708030C038E0
384038003800700070006000C00180030006000C08080810183FF07FF0FFF00D157E9412
>I<0FE030306018701C701C001C00180038006007E000300018000C000E000EE00EE00E
C00C401830300FE00F157F9412>I<00300030007000F001F00170027004700870187010
7020704070C070FFFE0070007000700070007003FE0F157F9412>I
E /Fm 44 122 df<00003FE00000E0100001803800038078000300780007003000070000
0007000000070000000E0000000E0000000E000000FFFFE0000E00E0001C01C0001C01C0
001C01C0001C01C0001C0380003803800038038000380380003807000038070000700700
0070071000700E2000700E2000700E2000E00E2000E0064000E0038000E0000000C00000
01C0000001C000003180000079800000F3000000620000003C0000001D29829F1A>12
D<0E1F3F3F1D0102020404081020C0080E779F0E>39 D<7FF0FFE07FE00C037D8A10>45
D<70F8F8F0E005057B840E>I<000200020006000E003C00DC031C001C00380038003800
38007000700070007000E000E000E000E001C001C001C001C003800380038003800780FF
F80F1E7B9D17>49 D<070F1F1F0E0000000000000000000070F8F8F0E008147B930E>58
D<00000200000006000000060000000E0000001E0000001E0000003F0000002F0000004F
0000004F0000008F0000010F0000010F0000020F0000020F0000040F00000C0F0000080F
0000100F0000100F0000200F80003FFF800040078000C007800080078001000780010007
800200078002000780060007801E000F80FF807FF81D207E9F22>65
D<01FFFFC0001E00F0001E0078001E0038001E003C003C003C003C003C003C003C003C00
3C0078007800780078007800F0007801E000F0078000FFFE0000F00F8000F003C001E001
C001E001E001E001E001E001E003C001E003C001E003C001E003C001C0078003C0078007
8007800F0007801E000F007800FFFFE0001E1F7D9E20>I<0000FE0200078186001C004C
0038003C0060003C00C0001C01C0001803800018070000180F0000181E0000101E000010
3C0000003C00000078000000780000007800000078000000F0000000F0000000F0000000
F0000000F00000807000008070000080700001003800010038000200180004000C001800
060020000381C00000FE00001F217A9F21>I<01FFFF80001E00E0001E0070001E003800
1E001C003C001C003C000E003C000E003C000E0078000E0078000E0078000E0078000E00
F0001E00F0001E00F0001E00F0001E01E0003C01E0003C01E0003C01E0007803C0007003
C0007003C000E003C001C0078001C00780038007800E0007801C000F007000FFFFC0001F
1F7D9E22>I<01FFFFFE001E001C001E000C001E0004001E0004003C0004003C0004003C
0004003C00040078080800780800007808000078180000F0300000FFF00000F0300000F0
300001E0200001E0200001E0200001E0001003C0002003C0002003C0004003C000400780
00800780018007800100078007000F001F00FFFFFE001F1F7D9E1F>I<01FFFFFC001E00
38001E0018001E0008001E0008003C0008003C0008003C0008003C000800780010007808
00007808000078080000F0100000F0300000FFF00000F0300001E0200001E0200001E020
0001E0200003C0000003C0000003C0000003C00000078000000780000007800000078000
000F800000FFF800001E1F7D9E1E>I<0000FC040007030C001C00980030007800E00078
01C000380380003003800030070000300E0000301E0000201E0000203C0000003C000000
78000000780000007800000078000000F0000000F000FFF0F0000780F0000780F0000F00
70000F0070000F0070000F0070001E0038001E0018003E001C002E000E00CC0003830400
00FC00001E217A9F23>I<01FFF0001F00001E00001E00001E00003C00003C00003C0000
3C0000780000780000780000780000F00000F00000F00000F00001E00001E00001E00001
E00003C00003C00003C00003C0000780000780000780000780000F8000FFF800141F7D9E
12>73 D<01FFF800001F0000001E0000001E0000001E0000003C0000003C0000003C0000
003C00000078000000780000007800000078000000F0000000F0000000F0000000F00000
01E0000001E0000001E0000001E0008003C0010003C0010003C0030003C0020007800600
0780060007800C0007801C000F007800FFFFF800191F7D9E1D>76
D<01FE00007FC0001E0000FC00001E0000F80000170001780000170001780000270002F0
0000270004F00000270004F00000270008F00000470009E00000470011E00000470021E0
0000470021E00000870043C00000838043C00000838083C00000838083C0000103810780
000103820780000103820780000103840780000203840F00000203880F00000203900F00
000203900F00000401E01E00000401E01E00000401C01E00000C01801E00001C01803E00
00FF8103FFC0002A1F7D9E29>I<01FFFF80001E00E0001E0070001E0038001E003C003C
003C003C003C003C003C003C003C0078007800780078007800F0007800E000F003C000F0
0F0000FFFC0000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C0
000003C00000078000000780000007800000078000000F800000FFF000001E1F7D9E1F>
80 D<01FFFF00001E03C0001E00E0001E0070001E0078003C0078003C0078003C007800
3C0078007800F0007800F0007801E0007801C000F0070000F01E0000FFF00000F0380001
E01C0001E01E0001E00E0001E00F0003C01E0003C01E0003C01E0003C01E0007803C0007
803C0807803C0807803C100F801C10FFF00C20000007C01D207D9E21>82
D<0007E040001C18C0003005800060038000C0038001C001800180010003800100038001
00038001000380000003C0000003C0000003F8000001FF800001FFE000007FF000001FF0
000001F80000007800000078000000380000003800200038002000380020003000600070
00600060006000E0007000C000E8038000C606000081F800001A217D9F1A>I<0FFFFFF0
1E0780E0180780201007802020078020200F0020600F0020400F0020400F0020801E0040
001E0000001E0000001E0000003C0000003C0000003C0000003C00000078000000780000
007800000078000000F0000000F0000000F0000000F0000001E0000001E0000001E00000
01E0000003E00000FFFF00001C1F789E21>I<7FFC1FF807C003C0078001000780010007
8001000F0002000F0002000F0002000F0002001E0004001E0004001E0004001E0004003C
0008003C0008003C0008003C00080078001000780010007800100078001000F0002000F0
002000F0002000F0004000F0004000700080007001000030020000380400000C18000007
E000001D20779E22>I<FFF007FC0F8000E00F0000C00F0000800F0001000F0001000F00
02000F0004000F0004000F80080007800800078010000780200007802000078040000780
400007808000078100000781000007C2000003C2000003C4000003C8000003C8000003D0
000003D0000003E0000003C0000003C000000380000001800000010000001E20779E22>
I<00F1800389C00707800E03801C03803C0380380700780700780700780700F00E00F00E
00F00E00F00E20F01C40F01C40703C40705C40308C800F070013147C9317>97
D<07803F8007000700070007000E000E000E000E001C001C001CF01D0C3A0E3C0E380F38
0F700F700F700F700FE01EE01EE01EE01CE03CE038607060E031C01F0010207B9F15>I<
007E0001C1000300800E07801E07801C07003C0200780000780000780000F00000F00000
F00000F00000F0000070010070020030040018380007C00011147C9315>I<0000780003
F80000700000700000700000700000E00000E00000E00000E00001C00001C000F1C00389
C00707800E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F00E
20F01C40F01C40703C40705C40308C800F070015207C9F17>I<007C01C207010E011C01
3C013802780C7BF07C00F000F000F000F0007000700170023804183807C010147C9315>
I<00007800019C00033C00033C000718000700000700000E00000E00000E00000E00000E
0001FFE0001C00001C00001C00001C000038000038000038000038000038000070000070
0000700000700000700000700000E00000E00000E00000E00000C00001C00001C0000180
003180007B0000F300006600003C00001629829F0E>I<003C6000E27001C1E00380E007
00E00F00E00E01C01E01C01E01C01E01C03C03803C03803C03803C03803C07003C07001C
0F001C17000C2E0003CE00000E00000E00001C00001C00301C00783800F0700060E0003F
8000141D7E9315>I<01E0000FE00001C00001C00001C00001C000038000038000038000
038000070000070000071E000763000E81800F01C00E01C00E01C01C03801C03801C0380
1C0380380700380700380700380E10700E20700C20701C20700C40E00CC060070014207D
9F17>I<00C001E001E001C000000000000000000000000000000E003300230043804300
470087000E000E000E001C001C001C003840388030807080310033001C000B1F7C9E0E>
I<01E0000FE00001C00001C00001C00001C0000380000380000380000380000700000700
000703C00704200E08E00E11E00E21E00E40C01C80001D00001E00001FC00038E0003870
00387000383840707080707080707080703100E03100601E0013207D9F15>107
D<03C01FC0038003800380038007000700070007000E000E000E000E001C001C001C001C
0038003800380038007000700070007100E200E200E200E200640038000A207C9F0C>I<
1C0F80F0002630C318004740640C004780680E004700700E004700700E008E00E01C000E
00E01C000E00E01C000E00E01C001C01C038001C01C038001C01C038001C01C070803803
8071003803806100380380E10038038062007007006600300300380021147C9325>I<1C
0F802630C04740604780604700704700708E00E00E00E00E00E00E00E01C01C01C01C01C
01C01C03843803883803083807083803107003303001C016147C931A>I<007C0001C300
0301800E01C01E01C01C01E03C01E07801E07801E07801E0F003C0F003C0F003C0F00780
F00700700F00700E0030180018700007C00013147C9317>I<01C1E002621804741C0478
1C04701E04701E08E01E00E01E00E01E00E01E01C03C01C03C01C03C01C0380380780380
700380E003C1C0072380071E000700000700000E00000E00000E00000E00001C00001C00
00FFC000171D809317>I<1C1E002661004783804787804707804703008E00000E00000E
00000E00001C00001C00001C00001C000038000038000038000038000070000030000011
147C9313>114 D<00FC030206010C030C070C060C000F800FF007F803FC003E000E700E
F00CF00CE008401020601F8010147D9313>I<018001C0038003800380038007000700FF
F007000E000E000E000E001C001C001C001C003800380038003820704070407080708031
001E000C1C7C9B0F>I<0E00C03300E02301C04381C04301C04701C08703800E03800E03
800E03801C07001C07001C07001C07101C0E20180E20180E201C1E200C264007C3801414
7C9318>I<0E03803307802307C04383C04301C04700C08700800E00800E00800E00801C
01001C01001C01001C02001C02001C04001C04001C08000E300003C00012147C9315>I<
0383800CC4401068E01071E02071E02070C040E00000E00000E00000E00001C00001C000
01C00001C040638080F38080F38100E5810084C60078780013147D9315>120
D<0E00C03300E02301C04381C04301C04701C08703800E03800E03800E03801C07001C07
001C07001C07001C0E00180E00180E001C1E000C3C0007DC00001C00001C00003800F038
00F07000E06000C0C0004380003E0000131D7C9316>I E /Fn 4
109 df<000007FC000800007FFF80180001FC01E0380007E0007038001F80001878003E
00000CF8007C000006F800F8000003F801F0000001F803E0000000F807E0000000F80FC0
000000780FC0000000781F80000000381F80000000383F00000000383F00000000187F00
000000187F00000000187E00000000187E0000000000FE0000000000FE0000000000FE00
00000000FE0000000000FE0000000000FE0000000000FE0000000000FE0000000000FE00
000000007E00000000007E00000000007F00000000187F00000000183F00000000183F00
000000181F80000000181F80000000300FC0000000300FC00000003007E00000006003E0
000000E001F0000000C000F800000180007C00000300003E00000600001F80000C000007
E00038000001FC01E00000007FFF8000000007FC00002D337BB138>67
D<0000FF0020000FFFC060003F80F0E0007C0038E001F0000DE003E00007E007C00003E0
0F800003E00F800001E01F000001E03F000000E03E000000E07E000000E07E000000607C
00000060FC00000060FC00000000FC00000000FC00000000FC00000000FC00000000FC00
000000FC0001FFFEFC0001FFFE7C000007F07E000003E07E000003E03E000003E03F0000
03E01F000003E00F800003E00F800003E007C00003E003E00003E001F80007E0007E000C
E0003F807860000FFFF0200000FF800027277DA52E>103 D<FFFEFFFE0FE007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C00FE0FFFEFFFE0F257DA416>105
D<FFFF0000FFFF00000FE0000007C0000007C0000007C0000007C0000007C0000007C000
0007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C000
0007C0000007C0000007C0000007C0000007C0000007C0000C07C0000C07C0000C07C000
0C07C0001C07C0001C07C0001C07C0003807C0003807C0007807C000F80FC007F8FFFFFF
F8FFFFFFF81E257DA425>108 D E /Fo 30 120 df<0001E0000003E000000FE000007F
E0001FFFE000FFFFE000FFBFE000E03FE000003FE000003FE000003FE000003FE000003F
E000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003F
E000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003F
E000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003F
E000003FE000003FE000003FE0007FFFFFF07FFFFFF07FFFFFF01C2E7AAD29>49
D<003FF00001FFFE0007FFFF801FC07FE03F003FF07C001FF87F000FFCFF8007FEFFC007
FEFFC003FFFFC003FFFFC003FFFFC003FF7F8003FF3F0003FF000003FF000003FF000007
FE000007FE000007FC00000FF800001FF800001FF000003FE000007F8000007F000000FE
000001FC000003F0000007E000000FC007001F8007003E0007007C000F00F8000E01F000
0E01E0001E03FFFFFE07FFFFFE0FFFFFFE1FFFFFFE3FFFFFFE7FFFFFFCFFFFFFFCFFFFFF
FCFFFFFFFC202E7CAD29>I<000FFC0000007FFF800001F01FE00003C00FF00007800FF8
000FE007FC001FF007FE001FF807FE001FF807FE001FF807FE001FF807FE001FF807FE00
0FF007FE0007E007FC0001800FFC0000000FF80000000FF80000001FF00000003FE00000
007F8000001FFE0000001FFC0000001FFF800000001FF00000000FF800000007FE000000
03FF00000003FF00000001FF80000001FF800E0001FFC03F8001FFC07FC001FFC0FFE001
FFC0FFE001FFC0FFE001FFC0FFE001FFC0FFE001FF80FFE003FF807FC003FF007F0007FE
003F000FFC001FE01FF80007FFFFE00001FFFF8000001FFC0000222E7DAD29>I<000000
7800000000F800000001F800000003F800000007F800000007F80000000FF80000001FF8
0000003FF80000007FF800000077F8000000F7F8000001E7F8000003C7F800000787F800
000707F800000F07F800001E07F800003C07F800007807F800007007F80000F007F80001
E007F80003C007F800078007F8000F0007F8000F0007F8001E0007F8003C0007F8007800
07F800F00007F800FFFFFFFFF0FFFFFFFFF0FFFFFFFFF000000FF80000000FF80000000F
F80000000FF80000000FF80000000FF80000000FF80000000FF80000000FF800000FFFFF
F0000FFFFFF0000FFFFFF0242E7EAD29>I<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC0
3F801F0000000000000000000000000000000000000000001F003F807FC0FFE0FFE0FFE0
FFE0FFE07FC03F801F000B207A9F17>58 D<00FFE00003FFFC000FFFFF003F007FC07C00
3FE07E001FE0FF001FF0FF801FF0FF801FF0FF801FF0FF801FF0FF801FF07F003FE01C00
3FE000007FC00000FF800001FE000003FC000003F0000007E0000007C000000F8000000F
0000000F0000001E0000001E0000001C0000001C0000001C0000001C0000001C0000001C
0000001C0000000000000000000000000000000000000000000000000000001C0000007F
000000FF800000FF800001FFC00001FFC00001FFC00000FF800000FF8000007F0000001C
00001C327BB127>63 D<000003FF80038000003FFFF007800001FFFFFC0F800007FF007F
1F80001FF8000FFF80007FE00003FF8000FFC00001FF8001FF000000FF8003FE0000007F
8007FE0000003F800FFC0000001F801FF80000001F801FF80000000F803FF80000000F80
3FF00000000F803FF000000007807FF000000007807FF000000007807FE00000000000FF
E00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE0
0000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE000
000000007FE000000000007FF000000000007FF000000003803FF000000003803FF00000
0003803FF800000003801FF800000007801FF800000007000FFC0000000F0007FE000000
0E0003FF0000001E0001FF0000003C0000FFC000007800007FE00001F000001FF80003E0
000007FF003F80000001FFFFFE000000003FFFF80000000003FF80000031317BB03C>67
D<FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF000FFC0003FF000FFC00007F800FFC00003
F800FFC00000F800FFC00000F800FFC000007800FFC000007800FFC000003800FFC00000
3800FFC000003800FFC000001C00FFC000001C00FFC007001C00FFC007001C00FFC00700
0000FFC007000000FFC007000000FFC00F000000FFC01F000000FFC03F000000FFFFFF00
0000FFFFFF000000FFFFFF000000FFC03F000000FFC01F000000FFC00F000000FFC00700
0000FFC007000000FFC007000000FFC007000000FFC007000000FFC000000000FFC00000
0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000
0000FFC000000000FFC000000000FFC000000000FFC0000000FFFFFFF00000FFFFFFF000
00FFFFFFF000002E317EB034>70 D<FFFFFFC0FFFFFFC0FFFFFFC000FFC00000FFC00000
FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000
FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000
FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000
FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000
FFC00000FFC00000FFC00000FFC00000FFC000FFFFFFC0FFFFFFC0FFFFFFC01A317EB01F
>73 D<FFFFFFFFC0000000FFFFFFFFFC000000FFFFFFFFFF80000000FFC001FFE0000000
FFC0003FF0000000FFC0000FFC000000FFC00007FC000000FFC00007FE000000FFC00003
FF000000FFC00003FF000000FFC00003FF800000FFC00003FF800000FFC00003FF800000
FFC00003FF800000FFC00003FF800000FFC00003FF800000FFC00003FF000000FFC00003
FF000000FFC00007FE000000FFC00007FC000000FFC0000FFC000000FFC0003FF0000000
FFC001FFE0000000FFFFFFFF80000000FFFFFFFC00000000FFFFFFFE00000000FFC003FF
00000000FFC000FFC0000000FFC0007FE0000000FFC0003FE0000000FFC0003FF0000000
FFC0001FF0000000FFC0001FF8000000FFC0001FF8000000FFC0001FF8000000FFC0001F
F8000000FFC0001FF8000000FFC0001FFC000000FFC0001FFC000000FFC0001FFC000000
FFC0001FFC004000FFC0001FFC00E000FFC0001FFE00E000FFC0000FFE00E000FFC0000F
FF01C000FFC00007FF83C0FFFFFFC003FFFF80FFFFFFC000FFFF00FFFFFFC0000FFC003B
317EB03E>82 D<3FFFFFFFFFFF003FFFFFFFFFFF003FFFFFFFFFFF003FE00FFC01FF007F
000FFC003F807E000FFC001F807C000FFC000F8078000FFC00078078000FFC0007807000
0FFC00038070000FFC00038070000FFC00038070000FFC000380E0000FFC0001C0E0000F
FC0001C0E0000FFC0001C0E0000FFC0001C000000FFC00000000000FFC00000000000FFC
00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00
000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC0000
0000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC000000
00000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000
000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC000000007F
FFFFFF8000007FFFFFFF8000007FFFFFFF800032307DAF39>84 D<FFFFFFC003FFFFC0FF
FFFFC003FFFFC0FFFFFFC003FFFFC000FFC0000007E00000FFC0000003C00000FFC00000
03C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000
FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC00000
03C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000
FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC00000
03C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000
FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC00000
03C00000FFC0000003C00000FFC0000003C00000FFC0000003C000007FC0000003800000
7FC00000078000007FE00000078000003FE000000F0000003FE000000F0000001FF00000
1E0000000FF800003E00000007FC00007C00000003FE0001F800000000FFC00FE0000000
003FFFFF80000000000FFFFE000000000000FFF00000003A317EB03F>I<FFFFFE07FFFF
F801FFFFFFFFFE07FFFFF801FFFFFFFFFE07FFFFF801FFFF03FF00000FFC000007E003FF
80000FFC000003C001FF80000FFE0000038001FF800007FE0000038001FFC00007FE0000
078000FFC00007FF0000070000FFE00003FF00000700007FE00003FF80000E00007FE000
03FF80000E00007FF00003FF80001E00003FF00007FFC0001C00003FF80007FFC0001C00
001FF80007FFE0003800001FF8000E7FE0003800001FFC000E7FE0007800000FFC001E7F
F0007000000FFC001C3FF00070000007FE001C3FF000E0000007FE00381FF800E0000007
FF00381FF801E0000003FF00781FFC01C0000003FF00700FFC01C0000003FF80700FFC03
C0000001FF80F00FFE0380000001FFC0E007FE0380000000FFC0E007FF0700000000FFC1
C003FF0700000000FFE1C003FF0F000000007FE3C003FF8E000000007FE38001FF8E0000
00003FF38001FF9C000000003FF70000FFDC000000003FFF0000FFFC000000001FFF0000
FFF8000000001FFE00007FF8000000000FFE00007FF0000000000FFC00003FF000000000
0FFC00003FF00000000007FC00003FE00000000007F800001FE00000000007F800001FE0
0000000003F800001FC00000000003F000000FC00000000001F000000F800000000001E0
000007800000000000E000000700000050317EB055>87 D<007FF8000003FFFF00000FFF
FFC0001FE01FF0001FF007F8001FF007FC001FF003FC001FF001FE000FE001FE0007C001
FE00010001FE00000001FE00000001FE000001FFFE00003FFFFE0001FFF1FE0007FE01FE
001FF001FE003FE001FE007FC001FE007F8001FE00FF8001FE00FF0001FE00FF0001FE00
FF0001FE00FF8003FE00FF8007FE007FC00FFE003FF03EFF001FFFF87FF807FFF03FF800
FF800FF825207E9F28>97 D<0007FF00007FFFE001FFFFF803FC03FC07F807FC0FF007FC
1FE007FC3FC007FC3FC003F87FC001F07F800040FF800000FF800000FF800000FF800000
FF800000FF800000FF800000FF800000FF800000FF8000007FC000007FC000003FC0000E
3FE0000E1FE0001E0FF0003C07F8007803FF01F001FFFFE0007FFF800007FC001F207D9F
25>99 D<00000007E0000003FFE0000003FFE0000003FFE00000003FE00000001FE00000
001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0000000
1FE00000001FE00000001FE00000001FE00000001FE0000FF81FE0007FFF1FE001FFFFDF
E003FE03FFE00FF800FFE01FF0007FE01FE0003FE03FC0001FE03FC0001FE07FC0001FE0
7F80001FE0FF80001FE0FF80001FE0FF80001FE0FF80001FE0FF80001FE0FF80001FE0FF
80001FE0FF80001FE0FF80001FE0FF80001FE07F80001FE07FC0001FE07FC0001FE03FC0
003FE01FE0007FE01FE000FFE00FF001FFE007FC07DFF001FFFF9FFF007FFE1FFF000FF0
1FFF28327DB12E>I<0007FC0000003FFF800000FFFFE00003FC07F00007F801F8000FE0
00FC001FE0007E003FC0007E003FC0003F007FC0003F007F80003F007F80003F80FF8000
3F80FF80003F80FFFFFFFF80FFFFFFFF80FFFFFFFF80FF80000000FF80000000FF800000
007F800000007F800000003FC00000003FC00003801FC00003801FE00007800FF0000F00
07F8001E0003FE00FC0000FFFFF800003FFFE0000003FF000021207E9F26>I<0000FF00
0007FFC0001FFFF0007FC7F000FF0FF801FF0FF801FE0FF803FE0FF803FC0FF803FC07F0
03FC01C003FC000003FC000003FC000003FC000003FC000003FC000003FC0000FFFFF800
FFFFF800FFFFF80003FC000003FC000003FC000003FC000003FC000003FC000003FC0000
03FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0000
03FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0000
03FC00007FFFF0007FFFF0007FFFF0001D327EB119>I<001FF007E000FFFE3FF003FFFF
FFF807F83FF1F80FE00FE1F81FE00FF1F81FC007F0603FC007F8003FC007F8003FC007F8
003FC007F8003FC007F8003FC007F8003FC007F8001FC007F0001FE00FF0000FE00FE000
07F83FC00007FFFF80000EFFFE00000E1FF000000E000000001E000000001E000000001F
000000001F800000001FFFFFC0000FFFFFF8000FFFFFFE0007FFFFFF8007FFFFFFC007FF
FFFFE01FFFFFFFE03F00007FE07E00000FF0FE000007F0FC000003F0FC000003F0FC0000
03F0FE000007F07E000007E07F00000FE03FC0003FC01FF801FF8007FFFFFE0000FFFFF0
00001FFF8000252F7E9F29>I<01F800000000FFF800000000FFF800000000FFF8000000
000FF80000000007F80000000007F80000000007F80000000007F80000000007F8000000
0007F80000000007F80000000007F80000000007F80000000007F80000000007F8000000
0007F80000000007F80000000007F807F8000007F83FFF000007F87FFF800007F9F03FC0
0007FBC01FE00007FF801FE00007FF000FF00007FE000FF00007FC000FF00007FC000FF0
0007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF0
0007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF0
0007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF0
0007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029327DB12E>I<03C0000F
F0000FF0001FF8001FF8001FFC001FF8001FF8000FF0000FF00003C00000000000000000
000000000000000000000000000000000001F800FFF800FFF800FFF8000FF80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F800FFFF80FF
FF80FFFF8011337DB217>I<01F8000000FFF8000000FFF8000000FFF80000000FF80000
0007F800000007F800000007F800000007F800000007F800000007F800000007F8000000
07F800000007F800000007F800000007F800000007F800000007F800000007F8007FFC07
F8007FFC07F8007FFC07F8001FC007F8001F0007F8003E0007F800780007F801F00007F8
03E00007F807800007F81F000007F83E000007F87C000007F9FE000007FBFF000007FFFF
800007FF7FC00007FE3FE00007F81FE00007F01FF00007F00FF80007F007FC0007F003FE
0007F001FF0007F000FF0007F000FF8007F0007FC007F0003FE007F0003FF0FFFF80FFFF
FFFF80FFFFFFFF80FFFF28327EB12C>107 D<03F007F80000FFF03FFF0000FFF07FFF80
00FFF1F03FC0000FF3C01FE00007F7801FE00007F7000FF00007FE000FF00007FC000FF0
0007FC000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF0
0007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF0
0007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF0
0007F8000FF00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029207D9F2E
>110 D<0007FE0000003FFFC00000FFFFF00003FC03FC0007F000FE000FE0007F001FC0
003F803FC0003FC03FC0003FC07F80001FE07F80001FE07F80001FE0FF80001FF0FF8000
1FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF07F80001F
E07F80001FE07F80001FE03FC0003FC03FC0003FC01FE0007F800FE0007F0007F801FE00
03FE07FC0001FFFFF800003FFFC0000007FE000024207E9F29>I<01F80FF000FFF87FFE
00FFF9FFFF80FFFFE07FE00FFF001FF007FE000FF807FC0007F807F80007FC07F80003FE
07F80003FE07F80003FE07F80001FF07F80001FF07F80001FF07F80001FF07F80001FF07
F80001FF07F80001FF07F80001FF07F80001FF07F80003FF07F80003FE07F80003FE07F8
0003FC07FC0007FC07FC000FF807FE000FF007FF801FE007FFE07FC007F9FFFF8007F87F
FE0007F81FE00007F800000007F800000007F800000007F800000007F800000007F80000
0007F800000007F800000007F800000007F800000007F8000000FFFFC00000FFFFC00000
FFFFC00000282E7E9F2E>I<03F03F00FFF0FFC0FFF1FFF0FFF3C7F00FF78FF807F70FF8
07FE0FF807FE0FF807FC07F007FC03E007FC008007FC000007F8000007F8000007F80000
07F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80000
07F8000007F8000007F8000007F8000007F80000FFFFE000FFFFE000FFFFE0001D207E9F
22>114 D<00FF870007FFEF001FFFFF003F007F007C001F007C000F00F8000F00F80007
00FC000700FC000700FF000000FFF800007FFFC0007FFFF0003FFFFC001FFFFE0007FFFF
0001FFFF80001FFF800000FFC000001FC0E0000FC0E0000FC0F00007C0F00007C0F80007
C0FC000F80FE001F80FF803F00FFFFFE00F3FFF800E07FC0001A207D9F21>I<00380000
380000380000380000380000780000780000780000F80000F80001F80003F80007F8001F
F800FFFFFEFFFFFEFFFFFE07F80007F80007F80007F80007F80007F80007F80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80707F80707F80707F80707
F80707F80707F80707FC0F03FC0E03FE1E01FFFC007FF8000FE0182E7EAD20>I<01F800
03F000FFF801FFF000FFF801FFF000FFF801FFF0000FF8001FF00007F8000FF00007F800
0FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F800
0FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F800
0FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8001FF00007F800
1FF00007F8003FF00007F8007FF00003FC00FFF00003FE03EFF80001FFFFCFFF80007FFF
0FFF80000FFC0FFF8029207D9F2E>I<FFFF0FFFF01FFEFFFF0FFFF01FFEFFFF0FFFF01F
FE0FF0007E0001F00FF8007F0001E007F8007F0001C007F8003F8003C003FC003F800380
03FC007FC0038003FE007FC0078001FE00FFC0070001FF00EFE00F0000FF00EFE00E0000
FF01C7F00E00007F81C7F01C00007F83C7F01C00007FC383F83C00003FC383F83800003F
C701FC3800001FE701FC7000001FEF01FC7000001FFE00FEF000000FFE00FEE000000FFC
007FE0000007FC007FC0000007FC007FC0000007F8003FC0000003F8003F80000003F000
1F80000001F0001F00000001E0000F00000000E0000E000037207E9F3C>119
D E /Fp 43 123 df<7038F87CFC7EFC7E743A0402040204020402080408041008100820
1040200F0F7EA218>34 D<70F8F8F87005057C840E>46 D<01F000071C000C0600180300
3803803803807001C07001C07001C07001C0F001E0F001E0F001E0F001E0F001E0F001E0
F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E07001C07001C07001C07803C0
3803803803801C07000C0600071C0001F00013227EA018>48 D<008003800F80F3800380
038003800380038003800380038003800380038003800380038003800380038003800380
0380038003800380038003800380038007C0FFFE0F217CA018>I<03F0000C1C00100700
2007804003C04003C08003E0F003E0F801E0F801E0F801E02003E00003E00003C00003C0
000780000700000E00001C0000180000300000600000C000018000010000020020040020
0800201800603000403FFFC07FFFC0FFFFC013217EA018>I<03F8000C1E001007002007
804007C07807C07803C07807C03807C0000780000780000700000F00000E0000380003F0
00001C00000F000007800007800003C00003C00003E02003E07003E0F803E0F803E0F003
C04003C0400780200780100F000C1C0003F00013227EA018>I<000200000600000E0000
0E00001E00001E00002E00004E00004E00008E00008E00010E00020E00020E00040E0004
0E00080E00100E00100E00200E00200E00400E00800E00FFFFF8000E00000E00000E0000
0E00000E00000E00000E00001F0001FFF015217FA018>I<1000801E07001FFF001FFE00
1FF80013E00010000010000010000010000010000010000010F800130E00140700180380
1003800001C00001C00001E00001E00001E00001E07001E0F001E0F001E0E001C08001C0
4003C04003802007001006000C1C0003F00013227EA018>I<007E0001C1000300800601
C00E03C01C03C0180180380000380000780000700000700000F0F800F30C00F40600F403
00F80380F801C0F001C0F001E0F001E0F001E0F001E0F001E07001E07001E07001E03801
C03801C01803801C03000C0600070C0001F00013227EA018>I<4000006000007FFFE07F
FFC07FFFC0400080C0010080010080020080020000040000080000080000100000300000
200000600000600000600000E00000C00000C00001C00001C00001C00001C00003C00003
C00003C00003C00003C00003C00003C00003C00001800013237DA118>I<01F800060E00
0803001001802001802000C06000C06000C06000C07000C07801803E01003F02001FC400
0FF80003F80003FC00067F00083F80100F803007C06001C06000E0C000E0C00060C00060
C00060C000606000406000C03000801803000E0E0003F00013227EA018>I<01F000060C
000C0600180700380380700380700380F001C0F001C0F001C0F001E0F001E0F001E0F001
E0F001E07001E07003E03803E01805E00C05E00619E003E1E00001C00001C00001C00003
80000380300300780700780600700C002018001030000FC00013227EA018>I<70F8F8F8
70000000000000000000000070F8F8F87005157C940E>I<000180000001800000018000
0003C0000003C0000003C0000005E0000005E000000DF0000008F0000008F0000010F800
001078000010780000203C0000203C0000203C0000401E0000401E0000401E0000800F00
00800F0000FFFF000100078001000780030007C0020003C0020003C0040003E0040001E0
040001E00C0000F00C0000F03E0001F8FF800FFF20237EA225>65
D<FFFFF0000F801E0007800700078003C0078001C0078000E0078000F007800078078000
780780007C0780003C0780003C0780003C0780003E0780003E0780003E0780003E078000
3E0780003E0780003E0780003E0780003E0780003C0780003C0780007C07800078078000
78078000F0078000E0078001E0078003C0078007000F801E00FFFFF8001F227EA125>68
D<FFFFFFC00F8007C0078001C0078000C007800040078000400780006007800020078000
200780002007802020078020000780200007802000078060000780E00007FFE0000780E0
000780600007802000078020000780200007802000078000000780000007800000078000
0007800000078000000780000007800000078000000FC00000FFFE00001B227EA120>70
D<FFFFE000000F803C000007800E00000780078000078007C000078003C000078003E000
078003E000078003E000078003E000078003E000078003C000078007C000078007800007
800E000007803C000007FFE000000780700000078038000007801C000007801E00000780
0E000007800F000007800F000007800F000007800F000007800F800007800F800007800F
800007800F808007800FC080078007C0800FC003C100FFFC01E2000000007C0021237EA1
24>82 D<03F0200C0C601802603001E07000E0600060E00060E00060E00020E00020E000
20F00000F000007800007F00003FF0001FFE000FFF0003FF80003FC00007E00001E00000
F00000F0000070800070800070800070800070C00060C00060E000C0F000C0C80180C607
0081FC0014247DA21B>I<7FFFFFF87807807860078018400780084007800840078008C0
07800C800780048007800480078004800780040007800000078000000780000007800000
078000000780000007800000078000000780000007800000078000000780000007800000
07800000078000000780000007800000078000000780000007800000078000000FC00003
FFFF001E227EA123>I<0804100820102010402040208040804080408040B85CFC7EFC7E
7C3E381C0F0F7AA218>92 D<0FE0001838003C0C003C0E00180700000700000700000700
00FF0007C7001E07003C0700780700700700F00708F00708F00708F00F087817083C2390
0FC1E015157E9418>97 D<0E0000FE00001E00000E00000E00000E00000E00000E00000E
00000E00000E00000E00000E00000E00000E1F000E61C00E80600F00300E00380E003C0E
001C0E001E0E001E0E001E0E001E0E001E0E001E0E001E0E001C0E003C0E00380F00700C
80600C41C0083F0017237FA21B>I<01FE000703000C07801C0780380300780000700000
F00000F00000F00000F00000F00000F00000F000007000007800403800401C00800C0100
07060001F80012157E9416>I<0000E0000FE00001E00000E00000E00000E00000E00000
E00000E00000E00000E00000E00000E00000E001F8E00704E00C02E01C01E03800E07800
E07000E0F000E0F000E0F000E0F000E0F000E0F000E0F000E07000E07800E03800E01801
E00C02E0070CF001F0FE17237EA21B>I<01FC000707000C03801C01C03801C07801E070
00E0F000E0FFFFE0F00000F00000F00000F00000F000007000007800203800201C00400E
008007030000FC0013157F9416>I<003C00C6018F038F030F0700070007000700070007
00070007000700FFF8070007000700070007000700070007000700070007000700070007
00070007000700070007807FF8102380A20F>I<00007001F198071E180E0E181C07001C
07003C07803C07803C07803C07801C07001C07000E0E000F1C0019F00010000010000018
00001800001FFE000FFFC00FFFE03800F0600030400018C00018C00018C0001860003060
00303800E00E038003FE0015217F9518>I<0E0000FE00001E00000E00000E00000E0000
0E00000E00000E00000E00000E00000E00000E00000E00000E1F800E60C00E80E00F0070
0F00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070
0E00700E00700E00700E0070FFE7FF18237FA21B>I<1C001E003E001E001C0000000000
0000000000000000000000000E00FE001E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E00FFC00A227FA10E>I<0E0000FE00001E00000E00
000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E03FC0E01
F00E01C00E01800E02000E04000E08000E10000E38000EF8000F1C000E1E000E0E000E07
000E07800E03C00E01C00E01E00E00F00E00F8FFE3FE17237FA21A>107
D<0E00FE001E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFE00B
237FA20E>I<0E1FC07F00FE60E183801E807201C00F003C00E00F003C00E00E003800E0
0E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E
003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E0FFE3
FF8FFE27157F942A>I<0E1F80FE60C01E80E00F00700F00700E00700E00700E00700E00
700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070FFE7
FF18157F941B>I<01FC000707000C01801800C03800E0700070700070F00078F00078F0
0078F00078F00078F00078F000787000707800F03800E01C01C00E038007070001FC0015
157F9418>I<0E1F00FE61C00E80600F00700E00380E003C0E001C0E001E0E001E0E001E
0E001E0E001E0E001E0E001E0E003C0E003C0E00380F00700E80E00E41C00E3F000E0000
0E00000E00000E00000E00000E00000E00000E00000E0000FFE000171F7F941B>I<0E3C
FE461E8F0F0F0F060F000E000E000E000E000E000E000E000E000E000E000E000E000E00
0F00FFF010157F9413>114 D<0F8830786018C018C008C008E008F0007F803FE00FF001
F8003C801C800C800CC00CC008E018D0308FC00E157E9413>I<02000200020002000600
060006000E001E003E00FFF80E000E000E000E000E000E000E000E000E000E000E000E04
0E040E040E040E040E040708030801F00E1F7F9E13>I<0E0070FE07F01E00F00E00700E
00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E
00F00E00F006017003827800FC7F18157F941B>I<FF8FF8FF1E01E03C1C01C0180E01C0
180E01E0100E01E01007026020070270200702702003843040038438400384384001C818
8001C81C8001C81C8000F00D0000F00F0000F00F0000600600006006000060060020157F
9423>119 D<FF83FE1F01F00E00C007008003810003830001C20000E400007800007800
003800003C00004E00008E000187000103800201C00401E00C00E03E01F0FF03FE17157F
941A>I<FFC1FE1E00780E00300E00200E002007004007004003808003808003808001C1
0001C10000E20000E20000E2000074000074000038000038000038000010000010000020
00002000002000004000F04000F08000F180004300003C0000171F7F941A>I<3FFFC038
0380300780200700600E00401C00403C0040380000700000E00001E00001C00003804007
00400F00400E00C01C0080380080780180700780FFFF8012157F9416>I
E /Fq 24 123 df<07000001C00000E00000E00000F00000700000700000780000380000
3800003C00001C00001C00001E00000E00000E00000F00000700000F0000378000638000
C38001C3C00381C00701C00E01E01C00E03800E07000F0F00070E00070C0003815207D9F
1B>21 D<70F8F8F87005057C840D>58 D<00F1800389C00707800E03801C03803C038038
0700780700780700780700F00E00F00E00F00E00F00E10F01C20F01C20703C20705C4030
8C400F078014147E9318>97 D<07803F8007000700070007000E000E000E000E001C001C
001CF01D0C3A0E3C0E380F380F700F700F700F700FE01EE01EE01EE01CE03CE038607060
E031C01F0010207E9F14>I<007C01C207010E0F1E0F1C0E3C04780078007800F000F000
F000F000F00070017002300418380FC010147E9314>I<0000780003F800007000007000
00700000700000E00000E00000E00000E00001C00001C000F1C00389C00707800E03801C
03803C0380380700780700780700780700F00E00F00E00F00E00F00E10F01C20F01C2070
3C20705C40308C400F078015207E9F18>I<007C01C207010E011C013C013802780C7BF0
7C00F000F000F000F0007000700170023004183807C010147E9315>I<00007C0000CE00
019E00039E00030C000700000700000700000700000E00000E00000E0000FFF0000E0000
0E00001C00001C00001C00001C00001C0000380000380000380000380000380000700000
700000700000700000700000E00000E00000E00000E00000C00001C000318000798000F3
00006200003C000017297E9F16>I<001E3000713800E0F001C0700380700780700700E0
0F00E00F00E00F00E01E01C01E01C01E01C01E01C01E03801E03800E07800E0B80061700
01E700000700000700000E00000E00300E00781C00F038006070003FC000151D809316>
I<01E0000FE00001C00001C00001C00001C0000380000380000380000380000700000700
00071F000761800E80C00F00C00E00E00E00E01C01C01C01C01C01C01C01C03803803803
80380380380704700708700E08700E10700610E006206003C016207E9F1A>I<00E001E0
01E000C000000000000000000000000000000E0013002380438043804380870007000700
0E000E001C001C001C20384038403840388019000E000B1F7E9E10>I<0000C00001E000
01E00001C0000000000000000000000000000000000000000000001E0000630000438000
8380010380010380020700000700000700000700000E00000E00000E00000E00001C0000
1C00001C00001C0000380000380000380000380000700000700030700078E000F1C00063
80003E00001328819E13>I<03C01FC0038003800380038007000700070007000E000E00
0E000E001C001C001C001C0038003800380038007000700070007100E200E200E200E200
640038000A207E9F0E>108 D<1E07C07C00231861860023A032030043C0340300438038
0380438038038087007007000700700700070070070007007007000E00E00E000E00E00E
000E00E00E000E00E01C101C01C01C201C01C038201C01C038401C01C018403803801880
1801800F0024147E9328>I<1E07802318C023A06043C0704380704380708700E00700E0
0700E00700E00E01C00E01C00E01C00E03821C03841C07041C07081C03083803101801E0
17147E931B>I<007C0001C3000301800E01C01E01C01C01E03C01E07801E07801E07801
E0F003C0F003C0F003C0F00780F00700700F00700E0030180018700007C00013147E9316
>I<1E1E0023210023C38043C7804387804383008700000700000700000700000E00000E
00000E00000E00001C00001C00001C00001C000038000018000011147E9315>114
D<007C018203010603060706060E00078007F803FC01FE001F00077007F006F006E00440
0820301FC010147E9315>I<00C000E001C001C001C001C003800380FFF8038007000700
070007000E000E000E000E001C001C001C001C10382038203820384018800F000D1C7F9B
10>I<0F01801183C02183E021C1E041C0E04380608380400700400700400700400E0080
0E00800E00800E01000E01000C02000E04000E040006180001E00013147E9316>118
D<0F006060118070F02180E0F821C0E07841C0E0384380E0188381C0100701C0100701C0
100701C0100E0380200E0380200E0380200E0380400E0380400E0380800E078080060781
000709860001F078001D147E9321>I<03C1C00C62201034701038F02038F02038604070
0000700000700000700000E00000E00000E00000E02061C040F1C040F1C080E2C0804463
00383C0014147E931A>I<0F00601180702180E021C0E041C0E04380E08381C00701C007
01C00701C00E03800E03800E03800E03800E07000C07000C07000E0F00061E0003EE0000
0E00000E00001C0078180078380070700060600021C0001F0000141D7E9316>I<01E020
03F04007F8C00C1F8008010000020000040000080000100000600000C000010000020000
0400800801001003003F060061FC0040F80080700013147E9315>I
E /Fr 16 119 df<000FE01000381C3000E0027003C00170078000F00F0000701E000070
1E0000303C0000303C0000107C00001078000010F8000000F8000000F8000000F8000000
F8000000F8000000F8000000F8000000F8000000780000007C0000103C0000103C000010
1E0000201E0000200F0000200780004003C0008000E0030000380C00000FF0001C217C9F
24>67 D<FFFFFFC00F8007C0078001C0078000C007800040078000600780002007800020
07800020078020200780200007802000078060000780E00007FFE0000780E00007806000
078020000780200007802000078000080780000807800008078000100780001007800010
0780003007800070078000E00F8003E0FFFFFFE01D1F7D9E22>69
D<FFFE00000FC00000078000000780000007800000078000000780000007800000078000
000780000007800000078000000780000007800000078000000780000007800000078000
000780000007800000078000800780008007800080078000800780018007800100078003
0007800300078007000F801F00FFFFFF00191F7D9E1F>76 D<7FFFFFF878078078600780
184007800840078008C007800C8007800480078004800780048007800400078000000780
000007800000078000000780000007800000078000000780000007800000078000000780
000007800000078000000780000007800000078000000780000007800000078000000FC0
0003FFFF001E1F7D9E24>84 D<001800001800001800003C00003C00004E00004E00004E
000087000087000187800103800103800201C00201C003FFC00400E00400E00800700800
701800703C0078FE01FF18177F961C>97 D<007E080381980700780C00381C0018380018
780008700008F00000F00000F00000F00000F00000F00000F00000700008780008380008
1C00100C0010070060038180007E0015177E961B>99 D<007E080381980700780C00381C
0018380018780008700008F00000F00000F00000F00000F00000F007FFF0007870003878
00383800381C00380C00380700380380D8007F0818177E961D>103
D<FF801C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C00FF8009177E960E>105 D<FF81FC1C00F01C00C01C00801C01001C
02001C04001C08001C10001C30001C78001C98001D1C001E0E001C07001C07001C03801C
01C01C01C01C00E01C00F01C00F8FF81FE17177D961D>107 D<FFC01C001C001C001C00
1C001C001C001C001C001C001C001C001C001C011C011C011C011C031C021C061C0EFFFE
10177D9617>I<FC001FC01C001E001C001E0016002E0016002E0016002E0013004E0013
004E0013004E0011808E0011808E0010C10E0010C10E0010C10E0010620E0010620E0010
620E0010340E0010340E0010340E0010180E0038180E00FE187FC01A177D9622>I<FC07
F01C01C01E008017008017008013808011808011C08010E08010E0801070801070801038
80101C80101C80100E80100E80100780100380100380100180380180FE008014177D961C
>I<00FE000383800E00E01C00703C007838003878003C70001CF0001EF0001EF0001EF0
001EF0001EF0001EF0001E70001C78003C3800383C00781C00700E00E003838000FE0017
177E961D>I<FFFC001C0E001C07801C03801C03C01C03C01C03C01C03C01C03801C0780
1C0E001FFC001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
FF800012177D9619>I<0F84306C601C400CC004C004C004E00070007F003FE01FF801FC
001C000E0006800680068006C004E008D81087E00F177E9615>115
D<FF803F3C001C1C00181E00180E00100E001007002007002007806003804003804001C0
8001C08000E10000E10000E100007200007200003C00003C00003C000018000018001817
7F961C>118 D E /Fs 77 125 df<001F83E000F06E3001C078780380F8780300F03007
007000070070000700700007007000070070000700700007007000FFFFFF800700700007
007000070070000700700007007000070070000700700007007000070070000700700007
007000070070000700700007007000070070000700700007007000070070007FE3FF001D
20809F1B>11 D<003F0000E0C001C0C00381E00701E00701E00700000700000700000700
00070000070000FFFFE00700E00700E00700E00700E00700E00700E00700E00700E00700
E00700E00700E00700E00700E00700E00700E00700E00700E00700E07FC3FE1720809F19
>I<003FE000E0E001C1E00381E00700E00700E00700E00700E00700E00700E00700E007
00E0FFFFE00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E007
00E00700E00700E00700E00700E00700E00700E00700E07FE7FE1720809F19>I<7038F8
7CFC7EFC7E743A0402040204020804080410081008201040200F0E7E9F17>34
D<70F8FCFC74040404080810102040060E7C9F0D>39 D<0020004000800100020006000C
000C00180018003000300030007000600060006000E000E000E000E000E000E000E000E0
00E000E000E000E0006000600060007000300030003000180018000C000C000600020001
000080004000200B2E7DA112>I<800040002000100008000C0006000600030003000180
0180018001C000C000C000C000E000E000E000E000E000E000E000E000E000E000E000E0
00C000C000C001C001800180018003000300060006000C00080010002000400080000B2E
7DA112>I<70F8FCFC74040404080810102040060E7C840D>44 D<FFC0FFC00A027F8A0F>
I<70F8F8F87005057C840D>I<00030003000700060006000E000C000C001C0018001800
380030003000700060006000E000C000C001C00180018001800380030003000700060006
000E000C000C001C0018001800380030003000700060006000E000C000C000102D7DA117
>I<03F0000E1C001C0E00180600380700700380700380700380700380F003C0F003C0F0
03C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C070038070
03807003807807803807001806001C0E000E1C0003F000121F7E9D17>I<018003800F80
F38003800380038003800380038003800380038003800380038003800380038003800380
038003800380038003800380038007C0FFFE0F1E7C9D17>I<03F0000C1C00100E002007
00400780800780F007C0F803C0F803C0F803C02007C00007C0000780000780000F00000E
00001C0000380000700000600000C0000180000300000600400C00401800401000803FFF
807FFF80FFFF80121E7E9D17>I<03F0000C1C00100E00200F00780F8078078078078038
0F80000F80000F00000F00000E00001C0000380003F000003C00000E00000F0000078000
07800007C02007C0F807C0F807C0F807C0F00780400780400F00200E001C3C0003F00012
1F7E9D17>I<000600000600000E00000E00001E00002E00002E00004E00008E00008E00
010E00020E00020E00040E00080E00080E00100E00200E00200E00400E00C00E00FFFFF0
000E00000E00000E00000E00000E00000E00000E0000FFE0141E7F9D17>I<1803001FFE
001FFC001FF8001FE00010000010000010000010000010000010000011F000161C00180E
001007001007800003800003800003C00003C00003C07003C0F003C0F003C0E003804003
80400700200600100E000C380003E000121F7E9D17>I<007C000182000701000E03800C
07801C0780380300380000780000700000700000F1F000F21C00F40600F80700F80380F8
0380F003C0F003C0F003C0F003C0F003C07003C07003C07003803803803807001807000C
0E00061C0001F000121F7E9D17>I<4000007FFFC07FFF807FFF80400100800200800200
80040000080000080000100000200000200000400000400000C00000C00001C000018000
038000038000038000038000078000078000078000078000078000078000078000030000
121F7D9D17>I<03F0000C0C001006003003002001806001806001806001807001807803
003E03003F06001FC8000FF00003F80007FC000C7E00103F00300F806003804001C0C001
C0C000C0C000C0C000C0C000806001802001001002000C0C0003F000121F7E9D17>I<03
F0000E18001C0C00380600380700700700700380F00380F00380F003C0F003C0F003C0F0
03C0F003C07007C07007C03807C0180BC00E13C003E3C000038000038000038000070030
0700780600780E00700C002018001070000FC000121F7E9D17>I<70F8F8F87000000000
00000000000070F8F8F87005147C930D>I<70F8F8F8700000000000000000000070F0F8
F878080808101010202040051D7C930D>I<000100000003800000038000000380000007
C0000007C0000007C0000009E0000009E0000009E0000010F0000010F0000010F0000020
7800002078000020780000403C0000403C0000403C0000801E0000801E0000FFFE000100
0F0001000F0001000F00020007800200078002000780040003C00E0003C01F0007E0FFC0
3FFE1F207F9F22>65 D<FFFFE0000F80380007801E0007801F0007800F0007800F800780
0F8007800F8007800F8007800F8007800F0007801F0007801E0007803C0007FFF0000780
3C0007801E0007800F0007800F8007800780078007C0078007C0078007C0078007C00780
07C00780078007800F8007800F0007801F000F803C00FFFFF0001A1F7E9E20>I<000FC0
40007030C001C009C0038005C0070003C00E0001C01E0000C01C0000C03C0000C07C0000
407C00004078000040F8000000F8000000F8000000F8000000F8000000F8000000F80000
00F8000000F8000000780000007C0000407C0000403C0000401C0000401E0000800E0000
80070001000380020001C0040000703800000FC0001A217D9F21>I<FFFFE0000F803C00
07801E000780070007800380078003C0078001E0078001E0078001F0078000F0078000F0
078000F8078000F8078000F8078000F8078000F8078000F8078000F8078000F8078000F8
078000F0078000F0078000F0078001E0078001E0078003C0078003800780070007800E00
0F803C00FFFFE0001D1F7E9E23>I<FFFFFF000F800F0007800300078003000780010007
800180078000800780008007800080078080800780800007808000078080000781800007
FF8000078180000780800007808000078080000780800007800020078000200780002007
8000400780004007800040078000C0078000C0078001800F800F80FFFFFF801B1F7E9E1F
>I<FFFFFF000F800F000780030007800300078001000780018007800080078000800780
008007800080078080000780800007808000078080000781800007FF8000078180000780
800007808000078080000780800007800000078000000780000007800000078000000780
000007800000078000000FC00000FFFE0000191F7E9E1E>I<000FE0200078186000E004
E0038002E0070001E00F0000E01E0000601E0000603C0000603C0000207C000020780000
20F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8007FFCF80003
E0780001E07C0001E03C0001E03C0001E01E0001E01E0001E00F0001E0070001E0038002
E000E0046000781820000FE0001E217D9F24>I<FFF8FFF80F800F8007800F0007800F00
07800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F00
07800F0007FFFF0007800F0007800F0007800F0007800F0007800F0007800F0007800F00
07800F0007800F0007800F0007800F0007800F0007800F0007800F000F800F80FFF8FFF8
1D1F7E9E22>I<FFFC0FC007800780078007800780078007800780078007800780078007
80078007800780078007800780078007800780078007800780078007800FC0FFFC0E1F7F
9E10>I<0FFFC0007C00003C00003C00003C00003C00003C00003C00003C00003C00003C
00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C
00203C00F83C00F83C00F83C00F0380040780040700030E0000F800012207E9E17>I<FF
FC0FFC0FC003E00780018007800100078002000780040007800800078010000780200007
80400007808000078100000783000007878000078F80000793C0000791E00007A1E00007
C0F0000780F0000780780007803C0007803C0007801E0007801E0007800F000780078007
800780078007C00FC007E0FFFC3FFC1E1F7E9E23>I<FFFE000FC0000780000780000780
000780000780000780000780000780000780000780000780000780000780000780000780
0007800007800007800007800207800207800207800207800607800407800407800C0780
1C0F807CFFFFFC171F7E9E1C>I<FF80001FF80F80001F800780001F0005C0002F0005C0
002F0005C0002F0004E0004F0004E0004F000470008F000470008F000470008F00043801
0F000438010F000438010F00041C020F00041C020F00041C020F00040E040F00040E040F
00040E040F000407080F000407080F000407080F000403900F000403900F000401E00F00
0401E00F000401E00F000E00C00F001F00C01F80FFE0C1FFF8251F7E9E2A>I<FF803FF8
07C007C007C0038005E0010005E0010004F001000478010004780100043C0100043C0100
041E0100040F0100040F010004078100040781000403C1000401E1000401E1000400F100
0400F1000400790004003D0004003D0004001F0004001F0004000F000400070004000700
0E0003001F000300FFE001001D1F7E9E22>I<001F800000F0F00001C0380007801E000F
000F000E0007001E0007803C0003C03C0003C07C0003E0780001E0780001E0F80001F0F8
0001F0F80001F0F80001F0F80001F0F80001F0F80001F0F80001F0F80001F0780001E07C
0003E07C0003E03C0003C03C0003C01E0007800E0007000F000F0007801E0001C0380000
F0F000001F80001C217D9F23>I<FFFFE0000F80780007801C0007801E0007800F000780
0F8007800F8007800F8007800F8007800F8007800F8007800F0007801E0007801C000780
780007FFE000078000000780000007800000078000000780000007800000078000000780
000007800000078000000780000007800000078000000FC00000FFFC0000191F7E9E1F>
I<FFFF80000F80F0000780780007803C0007801E0007801E0007801F0007801F0007801F
0007801F0007801E0007801E0007803C00078078000780F00007FF80000781C0000780E0
000780F0000780700007807800078078000780780007807C0007807C0007807C0007807C
0407807E0407803E040FC01E08FFFC0F10000003E01E207E9E21>82
D<07E0800C1980100780300380600180600180E00180E00080E00080E00080F00000F000
007800007F00003FF0001FFC000FFE0003FF00001F800007800003C00003C00001C08001
C08001C08001C08001C0C00180C00380E00300F00600CE0C0081F80012217D9F19>I<7F
FFFFE0780F01E0600F0060400F0020400F0020C00F0030800F0010800F0010800F001080
0F0010000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000
0F0000000F0000001F800007FFFE001C1F7E9E21>I<FFFC3FF80FC007C0078003800780
010007800100078001000780010007800100078001000780010007800100078001000780
010007800100078001000780010007800100078001000780010007800100078001000780
01000780010007800100038002000380020001C0020001C0040000E00800007018000038
2000000FC0001D207E9E22>I<FFF003FE1F8000F80F0000600F80006007800040078000
4003C0008003C0008003C0008001E0010001E0010001F0010000F0020000F0020000F806
000078040000780400003C0800003C0800003C0800001E1000001E1000001F3000000F20
00000F20000007C0000007C0000007C000000380000003800000038000000100001F207F
9E22>I<FFF07FF81FF01F800FC007C00F00078003800F00078001000F0007C001000780
07C00200078007C00200078007C0020003C009E0040003C009E0040003C009E0040003E0
10F00C0001E010F0080001E010F0080001F02078080000F02078100000F02078100000F0
403C10000078403C20000078403C20000078C03E2000003C801E4000003C801E4000003C
801E4000001F000F8000001F000F8000001F000F8000001E00078000000E00070000000E
00070000000C000300000004000200002C207F9E2F>I<7FF83FF80FE00FC007C0070003
C0020001E0040001F00C0000F0080000781000007C1000003C2000003E4000001E400000
0F8000000F8000000780000003C0000007E0000005E0000009F0000018F8000010780000
207C0000603C0000401E0000801F0001800F0001000780020007C0070003C01F8007E0FF
E01FFE1F1F7F9E22>I<FFF003FF1F8000F80F8000600780004007C0004003E0008001E0
008001F0010000F0030000F80200007C0400003C0400003E0800001E0800001F1000000F
B0000007A0000007C0000003C0000003C0000003C0000003C0000003C0000003C0000003
C0000003C0000003C0000003C0000003C0000007C000007FFE00201F7F9E22>I<FEFEC0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0FEFE072D7CA10D>91 D<080410082010201040204020804080408040B85CFC7E
FC7E7C3E381C0F0E7B9F17>I<FEFE060606060606060606060606060606060606060606
0606060606060606060606060606060606060606FEFE072D7FA10D>I<1FE00030300078
1800781C00300E00000E00000E00000E0000FE00078E001E0E00380E00780E00F00E10F0
0E10F00E10F01E10781E103867200F83C014147E9317>97 D<0E0000FE00000E00000E00
000E00000E00000E00000E00000E00000E00000E00000E00000E3E000EC3800F01C00F00
E00E00E00E00700E00700E00780E00780E00780E00780E00780E00780E00700E00700E00
E00F00E00D01C00CC300083E0015207F9F19>I<03F80E0C1C1E381E380C70007000F000
F000F000F000F000F00070007000380138011C020E0C03F010147E9314>I<000380003F
8000038000038000038000038000038000038000038000038000038000038003E380061B
801C0780380380380380700380700380F00380F00380F00380F00380F00380F003807003
807003803803803807801C07800E1B8003E3F815207E9F19>I<03F0000E1C001C0E0038
0700380700700700700380F00380F00380FFFF80F00000F00000F0000070000070000038
00801800800C010007060001F80011147F9314>I<007C00C6018F038F07060700070007
000700070007000700FFF007000700070007000700070007000700070007000700070007
00070007000700070007007FF01020809F0E>I<0000E003E3300E3C301C1C30380E0078
0F00780F00780F00780F00780F00380E001C1C001E380033E00020000020000030000030
00003FFE001FFF800FFFC03001E0600070C00030C00030C00030C000306000603000C01C
038003FC00141F7F9417>I<0E0000FE00000E00000E00000E00000E00000E00000E0000
0E00000E00000E00000E00000E3E000E43000E81800F01C00F01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFE7FC
16207F9F19>I<1C001E003E001E001C000000000000000000000000000E007E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFC00A1F80
9E0C>I<00E001F001F001F000E0000000000000000000000000007007F000F000700070
007000700070007000700070007000700070007000700070007000700070007000700070
00706070F060F0C061803F000C28829E0E>I<0E0000FE00000E00000E00000E00000E00
000E00000E00000E00000E00000E00000E00000E0FF00E03C00E03000E02000E04000E08
000E10000E30000E70000EF8000F38000E1C000E1E000E0E000E07000E07800E03800E03
C00E03E0FFCFF815207F9F18>I<0E00FE000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
0E000E00FFE00B20809F0C>I<0E1F01F000FE618618000E81C81C000F00F00E000F00F0
0E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E
000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E00
FFE7FE7FE023147F9326>I<0E3E00FE43000E81800F01C00F01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFE7FC
16147F9319>I<01F800070E001C03803801C03801C07000E07000E0F000F0F000F0F000
F0F000F0F000F0F000F07000E07000E03801C03801C01C0380070E0001F80014147F9317
>I<0E3E00FEC3800F01C00F00E00E00E00E00F00E00700E00780E00780E00780E00780E
00780E00780E00700E00F00E00E00F01E00F01C00EC3000E3E000E00000E00000E00000E
00000E00000E00000E00000E0000FFE000151D7F9319>I<03E0800619801C05803C0780
380380780380700380F00380F00380F00380F00380F00380F00380700380780380380380
3807801C0B800E138003E380000380000380000380000380000380000380000380000380
003FF8151D7E9318>I<0E78FE8C0F1E0F1E0F0C0E000E000E000E000E000E000E000E00
0E000E000E000E000E000E00FFE00F147F9312>I<1F9030704030C010C010C010E00078
007F803FE00FF00070803880188018C018C018E030D0608F800D147E9312>I<02000200
0200060006000E000E003E00FFF80E000E000E000E000E000E000E000E000E000E000E00
0E080E080E080E080E080610031001E00D1C7F9B12>I<0E01C0FE1FC00E01C00E01C00E
01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E
03C00603C0030DC001F1FC16147F9319>I<FF83F81E01E01C00C00E00800E00800E0080
07010007010003820003820003820001C40001C40001EC0000E80000E800007000007000
00700000200015147F9318>I<FF9FE1FC3C0780701C0300601C0380200E0380400E0380
400E03C0400707C0800704C0800704E080038861000388710003C8730001D0320001D03A
0000F03C0000E01C0000E01C0000601800004008001E147F9321>I<7FC3FC0F01E00701
C007018003810001C20000E40000EC00007800003800003C00007C00004E000087000107
000303800201C00601E01E01E0FF07FE1714809318>I<FF83F81E01E01C00C00E00800E
00800E008007010007010003820003820003820001C40001C40001EC0000E80000E80000
7000007000007000002000002000004000004000004000F08000F08000F100006200003C
0000151D7F9318>I<3FFF380E200E201C40384078407000E001E001C00380078007010E
011E011C0338027006700EFFFE10147F9314>I<FFFFFFFFFFF02C01808C2D>124
D E /Ft 45 123 df<387CFEFEFE7C3807077C860F>46 D<00E00001E0000FE000FFE000
F3E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000
03E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000FFFF80
FFFF80111D7C9C1A>49 D<07F0001FFE00383F007C1F80FE0FC0FE0FC0FE0FE0FE07E07C
07E03807E0000FE0000FC0000FC0001F80001F00003E0000780000F00000E00001C00003
80600700600E00601C00E01FFFC03FFFC07FFFC0FFFFC0FFFFC0131D7D9C1A>I<01FC00
07FF000E0F801E0FC03F07E03F07E03F07E03F07E01E0FC0000FC0000F80001F0001FC00
01FC00000F800007C00003E00003F00003F83803F87C03F8FE03F8FE03F8FE03F0FC03F0
7807E03C0FC01FFF8003FC00151D7E9C1A>I<0001C00003C00007C00007C0000FC0001F
C0003BC00073C00063C000C3C00183C00383C00703C00E03C00C03C01803C03803C07003
C0E003C0FFFFFEFFFFFE0007C00007C00007C00007C00007C00007C000FFFE00FFFE171D
7F9C1A>I<003F0001FFC007E0E00F81E01F03F01E03F03E03F07C03F07C01E07C0000FC
1000FCFF00FDFFC0FD03E0FE01F0FE01F0FC01F8FC01F8FC01F8FC01F87C01F87C01F87C
01F83C01F03E01F01E03E00F07C007FF8001FE00151D7E9C1A>54
D<387CFEFEFE7C38000000000000387CFEFEFE7C3807147C930F>58
D<07F8001FFE00381F80780F80FC0FC0FC0FC0FC0FC0780FC0301F80001F00003E00007C
0000700000E00000E00000C00000C00000C00000C00000C00000C0000000000000000000
0000000001C00007F00007F00007F00007F00007F00001C00012207D9F19>63
D<0000E000000000E000000001F000000001F000000001F000000003F800000003F80000
0006FC00000006FC0000000EFE0000000C7E0000000C7E000000183F000000183F000000
303F800000301F800000701FC00000600FC00000600FC00000C007E00000FFFFE00001FF
FFF000018003F000018003F000030001F800030001F800060001FC00060000FC000E0000
FE00FFE00FFFE0FFE00FFFE0231F7E9E28>65 D<0007FC02003FFF0E00FE03DE03F000FE
07E0003E0FC0001E1F80001E3F00000E3F00000E7F0000067E0000067E000006FE000000
FE000000FE000000FE000000FE000000FE000000FE0000007E0000007E0000067F000006
3F0000063F00000C1F80000C0FC0001807E0003803F0007000FE01C0003FFF800007FC00
1F1F7D9E26>67 D<FFFFFFE0FFFFFFE007E007E007E001E007E000E007E0006007E00070
07E0003007E0003007E0603007E0603007E0600007E0E00007E1E00007FFE00007FFE000
07E1E00007E0E00007E0600007E0600C07E0600C07E0000C07E0001807E0001807E00018
07E0003807E0007807E000F807E003F0FFFFFFF0FFFFFFF01E1F7E9E22>69
D<FFFFFFE0FFFFFFE007E007E007E001E007E000E007E0006007E0007007E0003007E000
3007E0603007E0603007E0600007E0E00007E1E00007FFE00007FFE00007E1E00007E0E0
0007E0600007E0600007E0600007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E00000FFFF8000FFFF80001C1F7E9E21>I<FFFF0FFFF0FFFF0FFFF007E0
007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E000
7E0007E0007E0007E0007E0007E0007E0007E0007E0007FFFFFE0007FFFFFE0007E0007E
0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E00
07E0007E0007E0007E0007E0007E0007E0007E0007E0007E00FFFF0FFFF0FFFF0FFFF024
1F7E9E29>72 D<FFFFFFFF07E007E007E007E007E007E007E007E007E007E007E007E007
E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101F7E
9E14>I<FFFF8000FFFF800007E0000007E0000007E0000007E0000007E0000007E00000
07E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00000
07E0000007E0000007E000C007E000C007E000C007E001C007E001C007E001C007E00380
07E0038007E00F8007E01F80FFFFFF80FFFFFF801A1F7E9E1F>76
D<FFE000FFF0FFF000FFF007F800060007FC00060007FE00060006FE000600067F000600
063F800600061FC00600060FE00600060FE006000607F006000603F806000601FC060006
00FE060006007F060006007F060006003F860006001FC60006000FE600060007F6000600
03FE00060003FE00060001FE00060000FE000600007E000600003E000600001E00060000
1E00FFF0000E00FFF0000600241F7E9E29>78 D<FFFFFE00FFFFFF8007E00FE007E003F0
07E001F807E001F807E001FC07E001FC07E001FC07E001FC07E001FC07E001F807E001F8
07E003F007E00FE007FFFF8007FFFE0007E0000007E0000007E0000007E0000007E00000
07E0000007E0000007E0000007E0000007E0000007E0000007E00000FFFF0000FFFF0000
1E1F7E9E24>80 D<FFFFF80000FFFFFF000007E01FC00007E007E00007E003F00007E003
F00007E003F80007E003F80007E003F80007E003F80007E003F00007E003F00007E007E0
0007E01FC00007FFFF000007FFFC000007E03E000007E01F000007E01F800007E00FC000
07E00FC00007E00FC00007E00FE00007E00FE00007E00FE00007E00FE03007E00FF03007
E00FF07007E007F860FFFF01FFE0FFFF007F80241F7E9E27>82 D<03FC080FFF381E03F8
3800F8700078700038F00038F00018F00018F80000FC00007FC0007FFE003FFF801FFFE0
0FFFF007FFF000FFF80007F80000FC00007C00003CC0003CC0003CC0003CE00038E00078
F80070FE01E0E7FFC081FF00161F7D9E1D>I<7FFFFFFC7FFFFFFC7C07E07C7007E01C60
07E00C6007E00CE007E00EC007E006C007E006C007E006C007E0060007E0000007E00000
07E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00000
07E0000007E0000007E0000007E0000007E0000007E00003FFFFC003FFFFC01F1E7E9D24
>I<FFFF01FFE0FFFF01FFE007E0000C0007E0000C0007E0000C0007E0000C0007E0000C
0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C00
07E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007
E0000C0007E0000C0007E0001C0003F000180003F000380001F800300000FC00F000007E
03C000001FFF80000003FC0000231F7E9E28>I<FFFE003FF8FFFE003FF807E000038007
E000030007F000070003F000060003F8000E0001F8000C0001FC000C0000FC00180000FC
001800007E003000007E003000003F006000003F006000003F80E000001F80C000001FC1
C000000FC18000000FE180000007E300000007E300000003F600000003F600000003FE00
000001FC00000001FC00000000F800000000F8000000007000000000700000251F7F9E28
>I<FFFE0FFFC0FFE0FFFE0FFFC0FFE00FC000FC000E000FE000FC000E0007E000FE000C
0007E000FE000C0003F000FE00180003F001FF00180003F001BF00180001F801BF003000
01F8031F80300001FC031F80700000FC031F80600000FC060FC06000007E060FC0C00000
7E0E0FE0C000007E0C07E0C000003F0C07E18000003F1803F18000003F9803F38000001F
9803F30000001FB001FB0000000FF001FE0000000FF001FE0000000FE000FE00000007E0
00FC00000007C0007C00000007C0007C00000003C0007800000003800038000000018000
300000331F7F9E36>I<07FC001FFF003F0F803F07C03F03E03F03E00C03E00003E0007F
E007FBE01F03E03C03E07C03E0F803E0F803E0F803E0FC05E07E0DE03FF9FE0FE07E1714
7F9319>97 D<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F0000
1F00001F00001F1FC01F7FF01FE0F81F807C1F007E1F003E1F003E1F003F1F003F1F003F
1F003F1F003F1F003F1F003E1F003E1F007C1F807C1EC1F81C7FE0181F8018207E9F1D>
I<01FE0007FF801F0FC03E0FC03E0FC07C0FC07C0300FC0000FC0000FC0000FC0000FC00
00FC00007C00007E00003E00603F00C01F81C007FF0001FC0013147E9317>I<0007F800
07F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F801F8F80F
FEF81F83F83E01F87E00F87C00F87C00F8FC00F8FC00F8FC00F8FC00F8FC00F8FC00F87C
00F87C00F87E00F83E01F81F07F80FFEFF03F8FF18207E9F1D>I<01FE0007FF801F83E0
3F01F07E00F07E00F8FC00F8FC00F8FFFFF8FFFFF8FC0000FC0000FC00007C00007E0000
3E00183F00380F807007FFE000FF8015147F9318>I<01FC3C07FFFE0F079E1E03DE3E03
E03E03E03E03E03E03E03E03E01E03C00F07800FFF0009FC001800001800001C00001FFF
800FFFF007FFF81FFFFC3C007C70003EF0001EF0001EF0001E78003C78003C3F01F80FFF
E001FF00171E7F931A>103 D<FF0000FF00001F00001F00001F00001F00001F00001F00
001F00001F00001F00001F00001F0FC01F3FE01F61F01FC0F81F80F81F00F81F00F81F00
F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8FFE3FFFFE3
FF18207D9F1D>I<1C003F007F007F007F003F001C00000000000000000000000000FF00
FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0
FFE00B217EA00E>I<FF0000FF00001F00001F00001F00001F00001F00001F00001F0000
1F00001F00001F00001F01FE1F01FE1F00F01F01C01F03801F07001F1E001F38001F7C00
1FFE001FFF001F1F001E0F801E07C01E07E01E03F01E01F01E00F8FFC3FFFFC3FF18207E
9F1C>107 D<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B20
7E9F0E>I<FE0FC0FE3FE01E61F01EC0F81E80F81F00F81F00F81F00F81F00F81F00F81F
00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8FFE3FFFFE3FF18147D931D>
110 D<01FF0007FFC01F83F03E00F83E00F87C007C7C007CFC007EFC007EFC007EFC007E
FC007EFC007E7C007C7C007C3E00F83E00F81F83F007FFC001FF0017147F931A>I<FF1F
C0FF7FF01FE1F81F80FC1F007E1F007E1F003E1F003F1F003F1F003F1F003F1F003F1F00
3F1F003E1F007E1F007C1F80FC1FC1F81F7FE01F1F801F00001F00001F00001F00001F00
001F00001F0000FFE000FFE000181D7E931D>I<FE3E00FE7F801ECFC01E8FC01E8FC01F
8FC01F03001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F
0000FFF000FFF00012147E9316>114 D<0FE63FFE701E600EE006E006F800FFC07FF83F
FC1FFE03FE001FC007C007E007F006F81EFFFCC7F010147E9315>I<0180018001800380
0380038007800F803F80FFFCFFFC0F800F800F800F800F800F800F800F800F800F800F86
0F860F860F860F8607CC03F801F00F1D7F9C14>I<FF07F8FF07F81F00F81F00F81F00F8
1F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F01F81F01F8
0F06F807FCFF03F8FF18147D931D>I<FFE07F80FFE07F801F001C000F8018000F801800
07C0300007C0300003E0600003E0600001F0C00001F0C00001F9C00000F9800000FF8000
007F0000007F0000003E0000003E0000001C0000001C000019147F931C>I<FFE7FE1FE0
FFE7FE1FE01F00F007001F00F803000F80F806000F80F8060007C1BC0C0007C1BC0C0007
C1BE0C0003E31E180003E31E180001F60F300001F60F300001F60FB00000FC07E00000FC
07E000007803C000007803C000007803C000003001800023147F9326>I<FFE1FF00FFE1
FF000F80700007C0E00007E0C00003E1800001F3800000FF0000007E0000003E0000003F
0000007F8000006F800000C7C0000183E0000381F0000701F8000E00FC00FF81FF80FF81
FF8019147F931C>I<FFE07F80FFE07F801F001C000F8018000F80180007C0300007C030
0003E0600003E0600001F0C00001F0C00001F9C00000F9800000FF8000007F0000007F00
00003E0000003E0000001C0000001C0000001800000018000078300000FC300000FC6000
00C0E00000E1C000007F8000001E000000191D7F931C>I<3FFFE03FFFE03C0FC0381FC0
701F80603F00607E0060FE0000FC0001F80003F00007E0600FE0600FC0601F80E03F00C0
7F01C07E03C0FFFFC0FFFFC013147F9317>I E /Fu 27 119 df<78FCFCFEFE7A020202
02040404081010204007127B8511>44 D<FFFEFFFEFFFE0F037F8E14>I<78FCFCFCFC78
06067B8511>I<007F000001C1C0000780F0000F0078000E0038001C001C003C001E003C
001E003C001E0078000F0078000F0078000F0078000F00F8000F80F8000F80F8000F80F8
000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8
000F80F8000F80F8000F8078000F0078000F0078000F0078000F003C001E003C001E003C
001E001C001C000E0038000F0078000780F00001C1C000007F000019297EA71E>48
D<00100000700001F0000FF000FEF000F0F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00001F8007FFFE07FFFE013287BA71E>I<007F000003FFC0000701F0000C00F800
10007C001C007C003E007E003E003E003E003E001E003E000C007E0000007C0000007C00
000078000000F0000000E0000001C0000007000000FF00000001E0000000F00000007800
00003C0000003E0000001F0000001F0000001F8000001F8030001F8078001F80FC001F80
FC001F80FC001F00F8001F0040003F0040003E0030007C001800F8000F01F00003FFC000
007F000019297EA71E>51 D<1800181F00F01FFFE01FFFC01FFF801FFF0011F800100000
100000100000100000100000100000100000100000107E001183801600C01800E0100070
00007800003C00003C00003C00003E00003E00003E70003EF8003EF8003EF8003EF8003C
80003C40007C4000782000783000F01801E00E07C007FF0001FC0017297DA71E>53
D<007F000001FFC00007C1E0000F0070001E0038001C003C003C001C0078001E0078001E
00F8000F00F8000F00F8000F00F8000F00F8000F80F8000F80F8000F80F8000F8078000F
8078001F803C001F803C001F801C002F800E004F800700CF8003810F80007E0F8000000F
0000000F0000000F0000001E0000001E0000001E0000003C001C003C003E0078003E0070
003C00E0001801C0001C0780000FFE000003F8000019297EA71E>57
D<0001FF0000000E00E00000300018000040000400008000020001000001000200000080
04000000400800FC002010038300101007008010200E004008201C002008403C001E0440
38001E044078001E048078001E0280F0001E0280F0001E0280F0001E0280F0001E0280F0
001E0280F0001E0280F0001E0280F0001E028078001E024078001E024038001E02403C00
1E04201C003E04200E005E041007008E0810038307180800FC03E0040000000002000000
000100000000008000001E004000007800300003E0000E003E000001FFC000272A7DA92E
>64 D<FFFF800FFF00FFFF800FFF0007F00003F00003E00001C00003E00001000003E000
02000003E00004000003E00008000003E00010000003E00020000003E00040000003E000
80000003E00100000003E00200000003E00400000003E00800000003E01800000003E03C
00000003E07E00000003E0BE00000003E11F00000003E20F80000003E40F80000003E807
C0000003F007E0000003E003E0000003E001F0000003E001F8000003E000F8000003E000
7C000003E0007E000003E0003E000003E0001F000003E0001F000003E0000F800003E000
07C00003E00007C00003E00007E00007F00007F800FFFF803FFF80FFFF803FFF8029297E
A82E>75 D<FFE0001FFFFFF0001FFF03F80001F002F80000E0027C000040027E00004002
3E000040021F000040021F800040020F8000400207C000400207E000400203E000400201
F000400201F800400200F8004002007C004002007E004002003E004002001F004002001F
804002000F8040020007C040020003E040020003E040020001F040020000F840020000F8
400200007C400200003E400200003E400200001F400200000FC00200000FC002000007C0
02000003C002000003C007000001C00F800000C0FFF80000C0FFF800004028297EA82D>
78 D<01FC00000E0780001001C0003C00E0003E00F0003E0078001C0078000800780000
0078000000780000007800007FF80003E078000F8078001F0078003E0078007C00780078
007820F8007820F8007820F8007820F800F8207C00F8203C013C401F063FC007F80F001B
1A7E991E>97 D<07800000FF800000FF8000000F80000007800000078000000780000007
800000078000000780000007800000078000000780000007800000078000000780000007
83F000078C1C0007B0070007A0038007C003C0078001E0078001E0078000F0078000F007
8000F8078000F8078000F8078000F8078000F8078000F8078000F8078000F0078000F007
8001F0078001E0078001C007C003C00740078007200E0006181C000407E0001D2A7FA921
>I<007F8001C0700780080F003C1E007C3C007C3C00387C0010780000F80000F80000F8
0000F80000F80000F80000F80000F800007800007C00003C00043C00041E00080F001007
802001C0C0007F00161A7E991B>I<00000F000001FF000001FF0000001F0000000F0000
000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000
000F0000000F00003F0F0001C0CF0003802F000F001F001E001F001C000F003C000F007C
000F0078000F0078000F00F8000F00F8000F00F8000F00F8000F00F8000F00F8000F00F8
000F0078000F0078000F003C000F003C000F001E001F000E002F0007004F8001C18FF800
7E0FF81D2A7EA921>I<007E0003C3800700E00E00F01C00703C00783C003878003C7800
3CF8003CF8003CFFFFFCF80000F80000F80000F80000F800007800007C00003C00043C00
041E00080E001007002001C0C0007F00161A7E991B>I<07000F801F801F800F80070000
000000000000000000000000000000000007807F807F800F800780078007800780078007
8007800780078007800780078007800780078007800780078007800780FFF8FFF80D297F
A811>105 D<07800000FF800000FF8000000F8000000780000007800000078000000780
000007800000078000000780000007800000078000000780000007800000078000000780
7FF007807FF007801F8007801C0007801800078020000780400007808000078100000782
000007870000079F800007A7800007C7C0000783E0000781E0000781F0000780F8000780
780007807C0007803E0007801E0007801F0007801F80FFFC7FF8FFFC7FF81D2A7FA920>
107 D<0780FF80FF800F8007800780078007800780078007800780078007800780078007
800780078007800780078007800780078007800780078007800780078007800780078007
8007800780078007800780FFFCFFFC0E2A7FA911>I<0781F800FC00FF860E030700FF98
070C03800FA0079003C007A003D001E007C003E001E007C003E001E0078003C001E00780
03C001E0078003C001E0078003C001E0078003C001E0078003C001E0078003C001E00780
03C001E0078003C001E0078003C001E0078003C001E0078003C001E0078003C001E00780
03C001E0078003C001E0078003C001E0078003C001E0FFFC7FFE3FFFFFFC7FFE3FFF301A
7F9933>I<0783F800FF8C1C00FF900E000FA0070007A0078007C0078007C00780078007
800780078007800780078007800780078007800780078007800780078007800780078007
8007800780078007800780078007800780078007800780078007800780FFFCFFFCFFFCFF
FC1E1A7F9921>I<007F000001C1C000070070000E0038001C001C003C001E003C001E00
78000F0078000F00F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80
F8000F8078000F0078000F003C001E003C001E001E003C000E0038000700700001C1C000
007F0000191A7E991E>I<0787C0FF98E0FF91F00FA1F007C1F007C0E007C00007800007
800007800007800007800007800007800007800007800007800007800007800007800007
800007800007800007C000FFFE00FFFE00141A7F9917>114 D<07F8401C06C03001C060
00C06000C0E00040E00040F00040F800007E00007FF0003FFE000FFF0003FF80003FC000
07C08001E08001E0C000E0C000E0C000E0E000C0F001C0F80180C4070083F800131A7E99
18>I<0080000080000080000080000180000180000180000380000380000780000F8000
1FFF80FFFF80078000078000078000078000078000078000078000078000078000078000
07800007800007800007804007804007804007804007804007804007804003C08001C080
00E100003E0012257FA417>I<07800780FF80FF80FF80FF800F800F8007800780078007
800780078007800780078007800780078007800780078007800780078007800780078007
80078007800780078007800780078007800780078007800F8007800F800380178001C027
C000E047FC003F87FC1E1A7F9921>I<FFF00FF8FFF00FF80F8003C00780038007800100
03C0020003C0020003E0020001E0040001E0040000F0080000F0080000F8180000781000
00781000003C2000003C2000003E6000001E4000001E4000000F8000000F800000070000
0007000000070000000200001D1A7F9920>I E /Fv 4 109 622
518 dfs[<000007FC000800007FFF80180001FC01E0380007E0007038001F8000187800
3E00000CF8007C000006F800F8000003F801F0000001F803E0000000F807E0000000F80F
C0000000780FC0000000781F80000000381F80000000383F00000000383F00000000187F
00000000187F00000000187E00000000187E0000000000FE0000000000FE0000000000FE
0000000000FE0000000000FE0000000000FE0000000000FE0000000000FE0000000000FE
00000000007E00000000007E00000000007F00000000187F00000000183F00000000183F
00000000181F80000000181F80000000300FC0000000300FC00000003007E00000006003
E0000000E001F0000000C000F800000180007C00000300003E00000600001F80000C0000
07E00038000001FC01E00000007FFF8000000007FC0000>45 51
123 177 67 67 D[<0000FF0020000FFFC060003F80F0E0007C0038E001F0000DE003E0
0007E007C00003E00F800003E00F800001E01F000001E03F000000E03E000000E07E0000
00E07E000000607C00000060FC00000060FC00000000FC00000000FC00000000FC000000
00FC00000000FC00000000FC0001FFFEFC0001FFFE7C000007F07E000003E07E000003E0
3E000003E03F000003E01F000003E00F800003E00F800003E007C00003E003E00003E001
F80007E0007E000CE0003F807860000FFFF0200000FF8000>39 39
125 165 55 103 D[<FFFEFFFE0FE007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C00FE0FFFEFFFE>15 37 125 164 26 105 D[<FFFF0000FFFF00000FE00000
07C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C00000
07C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C00000
07C0000007C0000007C0000C07C0000C07C0000C07C0000C07C0001C07C0001C07C0001C
07C0003807C0003807C0007807C000F80FC007F8FFFFFFF8FFFFFFF8>30
37 125 164 44 108 D E /Fw 19 118 df<FFFFFFFFF8000000FFFFFFFFFF000000FFFF
FFFFFFC0000000FFC0003FF00000007F800007FC0000007F800001FE0000007F8000007F
0000007F8000003F8000007F8000001FC000007F8000000FE000007F80000007F000007F
80000007F800007F80000003F800007F80000003FC00007F80000001FC00007F80000001
FE00007F80000000FE00007F80000000FF00007F80000000FF00007F80000000FF00007F
800000007F80007F800000007F80007F800000007F80007F800000007F80007F80000000
7FC0007F800000007FC0007F800000007FC0007F800000007FC0007F800000007FC0007F
800000007FC0007F800000007FC0007F800000007FC0007F800000007FC0007F80000000
7FC0007F800000007FC0007F800000007FC0007F800000007F80007F800000007F80007F
800000007F80007F800000007F80007F80000000FF00007F80000000FF00007F80000000
FF00007F80000001FE00007F80000001FE00007F80000001FC00007F80000003F800007F
80000003F800007F80000007F000007F8000000FE000007F8000001FC000007F8000003F
C000007F8000007F0000007F800001FE0000007F800007FC000000FFC0003FF00000FFFF
FFFFFFE00000FFFFFFFFFF000000FFFFFFFFF80000003A3B7EBA42>68
D<000000FFC0006000000007FFF800E00000003FFFFE00E0000000FFC01F01E0000003FE
0007C3E0000007F80001E7E000001FE00000F7E000003FC000003FE000007F8000001FE0
0000FF0000001FE00001FE0000000FE00003FC00000007E00003F800000003E00007F800
000003E0000FF000000001E0000FF000000001E0001FE000000001E0001FE000000000E0
003FE000000000E0003FC000000000E0003FC00000000060007FC00000000060007FC000
00000060007FC0000000006000FF80000000000000FF80000000000000FF800000000000
00FF80000000000000FF80000000000000FF80000000000000FF80000000000000FF8000
0000000000FF80000000000000FF80000000000000FF80000000000000FF800000000000
00FF800000FFFFFF807FC00000FFFFFF807FC00000FFFFFF807FC00000007FF0003FC000
00001FE0003FC00000001FE0003FE00000001FE0001FE00000001FE0001FE00000001FE0
000FF00000001FE0000FF00000001FE00007F80000001FE00003FC0000001FE00003FC00
00001FE00001FE0000001FE00000FF0000001FE000007F8000003FE000003FC000003FE0
00001FE000007FE0000007F80000E7E0000003FE0003C3E0000000FFC01F81E00000003F
FFFE00E000000007FFF8006000000000FFC0000000393D7BBB44>71
D<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFE0000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000006007F80000006007F80000006007F80000006007F80000006007F800000
0E007F8000000C007F8000000C007F8000000C007F8000000C007F8000001C007F800000
1C007F8000001C007F8000003C007F8000007C007F8000007C007F800001FC007F800003
F8007F80000FF800FFC0007FF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF82F3B7EBA36
>76 D<000FF80060003FFF00E000FFFFC0E003F807E1E007E000FBE00FC0003FE01F8000
1FE03F00000FE03E000007E07E000003E07E000003E07C000001E0FC000001E0FC000000
E0FC000000E0FC000000E0FE00000060FE00000060FE00000060FF00000060FF80000000
7FC00000007FE00000007FF80000003FFF8000001FFFF800001FFFFF80000FFFFFF00007
FFFFF80003FFFFFE0000FFFFFF00003FFFFF800007FFFFC000007FFFC0000007FFE00000
007FE00000003FF00000001FF00000000FF000000007F800000003F8C0000003F8C00000
03F8C0000001F8C0000001F8C0000001F8E0000001F8E0000001F8E0000001F0F0000001
F0F0000003F0F8000003E0FC000007E0FE000007C0FF00000FC0FFC0001F80FBF0003F00
F0FE00FE00E03FFFF800E00FFFE000C001FF8000253D7BBB30>83
D<3FFFFFFFFFFFF83FFFFFFFFFFFF83FFFFFFFFFFFF83FE001FF8007F83F0000FF0001F8
7C0000FF00007C780000FF00003C780000FF00003C700000FF00001C700000FF00001C60
0000FF00000C600000FF00000C600000FF00000C600000FF00000C600000FF00000CE000
00FF00000EC00000FF000006C00000FF000006C00000FF000006C00000FF000006000000
FF000000000000FF000000000000FF000000000000FF000000000000FF000000000000FF
000000000000FF000000000000FF000000000000FF000000000000FF000000000000FF00
0000000000FF000000000000FF000000000000FF000000000000FF000000000000FF0000
00000000FF000000000000FF000000000000FF000000000000FF000000000000FF000000
000000FF000000000000FF000000000000FF000000000000FF000000000000FF00000000
0000FF000000000000FF000000000000FF000000000000FF000000000000FF0000000000
00FF000000000000FF000000000000FF000000000000FF000000000003FFC00000001FFF
FFFFF800001FFFFFFFF800001FFFFFFFF800373B7DBA3E>I<003FC0000001FFF8000007
C07E00000E001F80001E000FC0003F8007E0003FC007E0003FC003F0003FC003F0003FC0
01F8001F8001F8000F0001F800000001F800000001F800000001F800000001F80000001F
F8000007FFF800003FF9F80000FF01F80003F801F80007F001F8001FE001F8001FC001F8
003F8001F8007F0001F8007F0001F800FF0001F80CFE0001F80CFE0001F80CFE0001F80C
FE0003F80CFE0003F80CFF0007F80C7F000EF80C3F800C7C181FC03C7E380FE0703FF003
FFE01FE0007F800F8026287CA62B>97 D<0003FE00001FFFC0007E01F000F8003801F000
3C03E000FE07E001FE0FC001FE1F8001FE1F8001FE3F8000FC3F0000787F0000007F0000
007E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE0000007E0000007F0000007F0000007F0000033F0000033F8000071F8000
060FC0000E0FC0000C07E0001C03F0003800F800F0007E03C0001FFF000003FC0020287D
A626>99 D<0003FC0000001FFF0000007E07C00000F803F00003F001F80007E000FC0007
C0007C000FC0007E001F80003E003F80003F003F00001F003F00001F007F00001F807F00
001F807E00001F80FE00001F80FE00001F80FFFFFFFF80FFFFFFFF80FE00000000FE0000
0000FE00000000FE00000000FE00000000FE000000007E000000007F000000007F000000
003F000001803F000001801F800003801F800003000FC000070007E0000E0003E0000C00
01F0003C0000FC007000003F01E000000FFF80000001FE000021287EA626>101
D<00003F000001FFC00003E0F0000FC3F0001F87F8003F07F8003F07F8007E07F8007E07
F800FE03F000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC0000FFFFFC00FFFFFC00FFFFFC
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000001FE00007FFFFC007FFFFC007FFFFC001D3D7FBC1A>I<
0007F001F8003FFE0FFC00FC1FBE3E01F007F03E03E003E03E07E003F01C07C001F0000F
C001F8000F8000F8001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F80
00FC001F8000FC000F8000F8000FC001F80007C001F00007E003F00003E003E00003F007
C00003FC1F8000073FFE00000607F000000E000000000E000000000E000000000F000000
000F000000000F8000000007C000000007FFFFC00003FFFFFC0003FFFFFF0000FFFFFFC0
03FFFFFFE00F80003FF01F000007F03E000003F87C000001F87C000000FCFC000000FCF8
0000007CF80000007CF80000007CF80000007CFC000000FC7C000000F87E000001F83E00
0001F01F000003E00FC0000FC003E0001F0001FC00FE00003FFFF0000007FF800027397E
A52B>I<01F800000000FFF800000000FFF800000000FFF80000000007F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F807F8000001F8
1FFE000001F8781F800001F8E00FC00001F9C007E00001FB8007E00001FF0007E00001FE
0003F00001FE0003F00001FC0003F00001FC0003F00001FC0003F00001F80003F00001F8
0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80003F00001F80003F00003FC0007F800FFFFF1FFFFE0FFFFF1FFFFE0FFFF
F1FFFFE02B3C7EBB30>I<01C00007F0000FF8000FF8000FF8000FF8000FF80007F00001
C00000000000000000000000000000000000000000000000000000000000000000000001
F8007FF8007FF8007FF80007F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80003FC00FFFFE0FF
FFE0FFFFE0133A7FB917>I<01F807F80000FFF81FFE0000FFF8781F8000FFF8E00FC000
07F9C007E00001FB8007E00001FF0007E00001FE0003F00001FE0003F00001FC0003F000
01FC0003F00001FC0003F00001F80003F00001F80003F00001F80003F00001F80003F000
01F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F000
01F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F000
01F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F000
03FC0007F800FFFFF1FFFFE0FFFFF1FFFFE0FFFFF1FFFFE02B267EA530>110
D<0001FE0000000FFFC000003F03F00000F8007C0001F0003E0003E0001F0007C0000F80
0F800007C00F800007C01F000003E03F000003F03F000003F03F000003F07E000001F87E
000001F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE00
0001FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87F000003F83F0000
03F03F000003F01F000003E01F800007E00F800007C007C0000F8003E0001F0001F0003E
0000F8007C00003F03F000000FFFC0000001FE000026287EA62B>I<01F80FF00000FFF8
3FFE0000FFF8F01F8000FFF9C00FC00003FB8007F00001FF0003F80001FE0001FC0001FC
0000FC0001F80000FE0001F800007F0001F800007F0001F800003F8001F800003F8001F8
00003F8001F800003F8001F800001FC001F800001FC001F800001FC001F800001FC001F8
00001FC001F800001FC001F800001FC001F800001FC001F800001FC001F800003F8001F8
00003F8001F800003F8001F800003F0001F800007F0001F800007E0001FC0000FE0001FC
0000FC0001FE0001F80001FF0003F00001FB8007E00001F9C00FC00001F8F03F000001F8
7FFC000001F80FE0000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000003FC00000000FFFFF0000000FFFFF0000000FFFFF00000002A37
7EA530>I<03F00F80FFF03FE0FFF0F1F0FFF1C3F807F383F801F303F801F703F801F601
F001FE004001FC000001FC000001FC000001FC000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000003FC00
00FFFFF800FFFFF800FFFFF8001D267EA522>114 D<007F818003FFE3800F807F801E00
1F803C000F807800078070000380F0000380F0000380F0000180F8000180F8000180FC00
0180FE0000007F8000007FFC00003FFFC0001FFFF0000FFFFC0007FFFE0001FFFF00001F
FF800000FFC000001FC0C0000FE0C00007E0C00003E0E00003E0E00001E0E00001E0F000
01E0F00001E0F80001C0F80003C0FC000380FE000780FF000F00F3C03E00E0FFF800C03F
C0001B287DA622>I<001800000018000000180000001800000018000000380000003800
000038000000380000007800000078000000F8000000F8000001F8000003F8000007F800
001FFFFF00FFFFFF00FFFFFF0001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8018001F8018001F8018001F8018001F8018001F801
8001F8018001F8018001F8018001F8018000FC038000FC0300007C0300007E0700003F0E
00000FFC000003F00019367EB421>I<01F80003F000FFF801FFF000FFF801FFF000FFF8
01FFF00007F8000FF00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8
0003F00001F80007F00001F80007F00001F80007F00001F8000FF00000F8000FF00000FC
001FF000007C003BFC00007E0073FFE0001F81E3FFE0000FFF83FFE00001FE03F0002B27
7EA530>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 20 405 a Fw(The)29 b Fv(Clig)h Fw(Grapher)e(for)g(Linguistic)k
(Data)d(Structures)443 585 y Fu(Karsten)20 b(Konrad,)h(k)n
(onrad@coli.uni-sb.de)707 734 y(No)n(v)n(em)n(b)r(er)e(30,)g(1995)856
930 y Ft(Abstract)190 1043 y Fs(This)d(pap)q(er)g(describ)q(es)h
Fr(Clig)p Fs(,)e(an)g(in)o(teractiv)o(e,)h(extendible)h(grapher)e(for)g
(visualizing)j(lin-)122 1099 y(guistic)d(data)e(structures)h(curren)o
(tly)g(under)h(dev)o(elopmen)o(t)g(in)g(the)f(F)l(raCaS)f(pro)s(ject.)g
(The)h(gra-)122 1156 y(pher)22 b(has)f(b)q(een)h(designed)h(b)q(oth)e
(to)f(b)q(e)i(stand-alone)g(and)f(to)g(b)q(e)h(used)g(as)e(an)i(add-on)
f(for)122 1212 y(linguistic)e(applications)g(whic)o(h)f(displa)o(y)g
(their)f(output)g(in)h(a)f(graphical)g(manner.)g(The)g(fo)q(cus)122
1268 y(of)g(this)g(pap)q(er)h(is)g(to)e(in)o(tro)q(duce)j(the)e(reader)
g(with)h Fr(Clig)p Fs('s)e(graphical)j(description)f(language)122
1325 y(and)g(its)g(use)g(as)g(a)f(general)h(to)q(ol)g(to)f(displa)o(y)i
(trees,)e(feature)h(structures,)f Fq(\025)p Fs(-expressions)h(and)122
1381 y(seman)o(tic)d(structures)g(suc)o(h)h(as)f(DRSs.)944
2877 y Fp(1)p eop
%%Page: 2 2
2 1 bop 122 203 a Fo(Con)n(ten)n(ts)122 305 y Ft(1)42
b(In)o(tro)q(duction:)18 b(What)g(is)g Fr(Clig)p Ft(?)928
b(3)122 407 y(2)42 b(Using)18 b Fr(Clig)1324 b Ft(4)190
464 y Fs(2.1)46 b(A)15 b(quic)o(k)h(installation)g(guide)34
b Fq(:)23 b(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f
(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)66 b Fs(4)190 520
y(2.2)46 b(The)15 b(men)o(u)h(bar)g Fq(:)22 b(:)h(:)f(:)g(:)h(:)f(:)g
(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)
h(:)f(:)g(:)h(:)f(:)g(:)h(:)66 b Fs(5)122 622 y Ft(3)42
b(The)18 b(description)g(string)1066 b(6)190 678 y Fs(3.1)46
b(Simple)17 b(text)34 b Fq(:)22 b(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f
(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)
g(:)h(:)f(:)g(:)h(:)66 b Fs(7)190 735 y(3.2)46 b(Bo)o(xes)15
b(and)g(frames)k Fq(:)j(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)66
b Fs(8)190 791 y(3.3)46 b(Brac)o(k)o(ets)21 b Fq(:)h(:)h(:)f(:)g(:)h(:)
f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f
(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)66 b Fs(8)190
848 y(3.4)46 b(Lists)27 b Fq(:)22 b(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h
(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)
f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)66 b Fs(8)190 904
y(3.5)46 b(Sequences)16 b(and)g(stac)o(ks)h Fq(:)23 b(:)f(:)g(:)h(:)f
(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)
g(:)h(:)f(:)g(:)h(:)66 b Fs(9)190 961 y(3.6)46 b(Arranging)15
b(space)47 b Fq(:)22 b(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)66
b Fs(9)190 1017 y(3.7)46 b(Using)15 b(colors)22 b Fq(:)g(:)g(:)h(:)f(:)
g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g
(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)43 b Fs(10)190
1074 y(3.8)j(T)l(rees)16 b Fq(:)22 b(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)
h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h
(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)43 b Fs(10)190
1130 y(3.9)j(F)l(eature)15 b(structures)41 b Fq(:)22
b(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g
(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)43 b Fs(10)190
1187 y(3.10)23 b(Complex)15 b(Bo)o(xes)27 b Fq(:)c(:)f(:)g(:)h(:)f(:)g
(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)
h(:)f(:)g(:)h(:)f(:)g(:)h(:)43 b Fs(11)190 1243 y(3.11)23
b(In)o(teraction)46 b Fq(:)22 b(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)
h(:)f(:)g(:)h(:)43 b Fs(12)190 1300 y(3.12)23 b(Other)15
b(commands)28 b Fq(:)22 b(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)
43 b Fs(12)190 1356 y(3.13)23 b(T)l(able)16 b(of)e(commands)k
Fq(:)k(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)g(:)h(:)f
(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)f(:)g(:)h(:)43 b Fs(12)122
1458 y Ft(4)f(What)18 b(is)g(not)g(in)g(this)g(pap)q(er:)f(F)l(uture)g
(w)o(orks)627 b(13)944 2877 y Fp(2)p eop
%%Page: 3 3
3 2 bop 122 203 a Fo(1)83 b(In)n(tro)r(duction:)27 b(What)h(is)f
Fn(Clig)p Fo(?)122 305 y Fs(A)16 b Fm(gr)n(apher)22 b
Fs(is)17 b(a)f(program)f(for)h(displa)o(ying)i(graphical)f
(information.)f(In)h(syn)o(tax)e(theory)l(,)h(gra-)122
361 y(phical)24 b(information)f(often)f(means)h(trees,)e(on)i(whic)o(h)
g(almost)f(all)i(syn)o(tactical)f(analysis)g(is)122 418
y(based.)13 b(On)h(the)g(other)f(hand,)g(uni\014cation-based)i(grammar)
d(formalisms)i(suc)o(h)f(as)g(HPSG)h(\(see)122 474 y([P)o(ollard)h
(87]\))c(rely)h(on)g Fm(typ)n(e)n(d)i(fe)n(atur)n(e)f(structur)n(es)j
Fs(as)11 b(their)i(main)f(data)f(structure)h(to)g(represen)o(t)122
531 y(linguistic)21 b(information)f(while)g(computational)f(seman)o
(tics)g(ma)o(y)g(use)g(graphical)h(structures)122 587
y(kno)o(wn)i(as)g Fm(Disc)n(ourse)g(R)n(epr)n(esentation)g(Structur)n
(es)1068 571 y Fl(1)1109 587 y Fs(or)g(v)m(arious)h(forms)e(of)h(form)o
(ulas)f(and)122 644 y Fq(\025)p Fs(-expressions.)16 b(Mo)q(dules)h(and)
f(application)h(in)g(computational)f(linguistics)j(often)c(need)i(gra-)
122 700 y(phers)g(to)e(displa)o(y)j(at)e(least)g(one)h(of)f(these)g
(basic)h(data)f(structures)g(to)g(sho)o(w)g(their)h(results.)f(In)122
757 y(some)f(cases,)f(these)h(data)f(structures)h(migh)o(t)g(ev)o(en)g
(b)q(e)g(nested|a)h(tree)f(of)f(feature)h(structures)122
813 y(or)g(a)f(DRS)i(con)o(taining)g(trees)f(are)g(not)g(unheard)h(of.)
190 869 y(Ho)o(w)o(ev)o(er,)e(displa)o(ying)j(the)e(output)g(of)g(a)g
(mo)q(dule)i(lik)o(e)f(e.g.)e(a)h(parser)g(often)g(isn't)h(enough.)122
926 y(It)i(migh)o(t)g(b)q(e)h(desirable)g(to)e(ha)o(v)o(e)h(at)f(least)
i(some)e(basic)i Fm(inter)n(action)i Fs(b)q(et)o(w)o(een)d(the)g
(grapher,)122 982 y(the)d(user)g(and)g(the)g(underlying)i(application)g
(to)d(ha)o(v)o(e)g(the)h(capabilit)o(y)i(to)d(edit)i(and)f(select)g
(the)122 1039 y(information)21 b(displa)o(y)o(ed)h(on)f(the)g(screen.)g
(E.g.)e(a)i(user)g(migh)o(t)g(w)o(an)o(t)e(to)i(c)o(hange)g(the)g
(input)122 1095 y(syn)o(tax)f(tree)h(to)f(seman)o(tics)h(to)g(see)g(ho)
o(w)f(c)o(hanges)h(in\015uence)j(the)d(seman)o(tical)g(analysis.)g(A)
122 1152 y Fm(gr)n(aphic)n(al)c(e)n(ditor)k Fs(or)15
b(at)g(least)h(a)g(grapher)f(with)i(some)e(in)o(teraction)i
(capabilities)h(can)e(pro)o(vide)122 1208 y(the)f(user)h(with)f(more)g
(con)o(trol)g(on)g(what)g(is)g(happ)q(ening,)i(but)e(in)o(teractiv)o(e)
h(graphers)f(often)g(are)122 1265 y(v)o(ery)d(application)h(sp)q
(eci\014c)h(and)f(therefore)e(mostly)h(are)g(unique)h(and)g(complex)g
(mo)q(dules)g(whic)o(h)122 1321 y(ha)o(v)o(e)i(to)f(b)q(e)i(enco)q(ded)
h(with)e(m)o(uc)o(h)g(e\013ort)f(on)i(the)f(side)h(of)f(the)g
(programmer.)190 1378 y(The)k Fr(Clig)389 1361 y Fl(2)428
1378 y Fs(grapher)g(is)g(a)g(to)q(ol)g(whic)o(h)h(has)e(b)q(een)j
(designed)f(to)e(pro)o(vide)i(dev)o(elop)q(ers)g(of)122
1434 y(applications)c(in)f(computational)g(linguistics)h(with)f(a)f(w)o
(a)o(y)f(to)h(displa)o(y)i(ma)s(jor)c(linguistic)17 b(data)122
1490 y(structures)c Ft(and)g Fs(a)g(w)o(a)o(y)f(to)h(sp)q(ecify)h(the)g
(in)o(teraction)f(allo)o(w)o(ed)h(on)f(the)g(screen.)h(It)f(is)g
(written)h(in)122 1547 y(Tcl/Tk,)e(the)h(widespread)g(programming)f
(system)g(for)g(dev)o(eloping)i(graphical)g(user)e(in)o(terfaces)122
1603 y(\(GUIs\).)k(One)h(of)g(the)f(ma)s(jor)g(prop)q(erties)h
Fr(Clig)g Fs(has,)f(thanks)g(to)g(the)h(Tcl/Tk-en)o(vironmen)o(t,)122
1660 y(is)g(its)g(extendibili)q(t)o(y)l(.)i(The)e(source)f(co)q(de)i
(of)e Fr(Clig)h Fs(can)g(b)q(e)g(seen)h(as)e(a)g(basic)i(set)f(of)f
(ready-to-)122 1716 y(use)g(to)q(ols)h(whic)o(h)g(can)f(b)q(e)h
(extended)g(with)f(additional,)i(more)e(application)h(sp)q(eci\014c)h
(mo)q(dules)122 1773 y(if)h(needed.)g(A)g(dev)o(elop)q(er)g(ma)o(y)f
(freely)h(add)g(his)g(or)f(her)h(o)o(wn)f(graphical)h(data)f
(structures)g(to)122 1829 y(the)k(grapher)g(\(whic)o(h)h(is)g(not)f(v)o
(ery)g(hard)g(if)h(y)o(ou)f(follo)o(w)h(some)f(simple)h(con)o(v)o(en)o
(tions\))f(and)122 1886 y(pro)o(vide)15 b(these)g(with)f(their)h(o)o
(wn)f(in)o(teraction)h(capabilities)i(suc)o(h)e(as)f(clic)o(k)m(able)j
(regions)e(or)f(edit)122 1942 y(windo)o(ws.)j(Comm)o(unication)g(b)q
(et)o(w)o(een)g(the)g Fr(Clig)g Fs(grapher)g(and)g(an)g(application)h
(is)g(p)q(ossible)122 1999 y(when)g(the)g(application's)h(host)e
(system)h(\(e.g.)e Fr(Common)j(Lisp)p Fs(\))f(pro)o(vides)g(a)g(w)o(a)o
(y)e(to)h(send)i(a)122 2055 y(simple)d(command)f(string)f(to)g(Tcl/Tk.)
h Fr(Clig)p Fs('s)f(in)o(teractiv)o(e)h(p)q(ossibilities)j(can)c(b)q(e)
i(used)f(when)122 2111 y(the)21 b(host)g(system)f(can)h(giv)o(e)h(con)o
(trol)e(to)h(Tcl/Tk)g(and)g(read)g(its)g(v)m(ariables.)h(Most)e(mo)q
(dern)122 2168 y(programming)c(en)o(vironmen)o(ts)h(pro)o(vide)h(these)
f(comm)o(unication)g(c)o(hannels)h(or)f(will)h(so)f(in)g(the)122
2224 y(near)e(future,)g(since)h(Tcl/Tk)g(is)f(b)q(ecoming)i(the)e(most)
f(p)q(opular)i(extension)g(language)g(so)f(far.)190 2281
y(In)h(conclusion,)h(the)e Fr(Clig)g Fs(grapher)g(so)g(far)f(has)h(the)
h(follo)o(wing)f(prop)q(erties:)182 2370 y Fk(\017)24
b Fs(It)16 b(can)f(displa)o(y)i(graphical)f(data)e(from)h(simple)i
(text)e(to)f(nested)i(DRS,)g(trees)f(and)g(t)o(yp)q(ed)229
2427 y(feature)g(structures)182 2504 y Fk(\017)24 b Fs(Missing)14
b(graphical)g(elemen)o(ts)g(can)f(b)q(e)g(added)h(b)o(y)f(the)g(user)g
(follo)o(wing)h(a)f(simple)h(con)o(v)o(en-)229 2561 y(tion)p
0 2595 765 2 v 56 2625 a Fj(1)75 2640 y Fi(see)h([Kamp)d(93)o(])56
2675 y Fj(2)75 2690 y Fh(Clig)h Fi(stands)h(for)g Fg(Computational)h
(Linguistics)g(Inter)n(active)f(Gr)n(apher)944 2877 y
Fp(3)p eop
%%Page: 4 4
4 3 bop 182 203 a Fk(\017)24 b Fs(Description)d(strings)e(are)g(used)h
(to)f(describ)q(e)i(the)f(graphics)g(and)g(can)f(b)q(e)h(sen)o(t)g(to)e
(the)229 260 y(grapher)d(b)o(y)g(an)o(y)g(application)182
337 y Fk(\017)24 b Fs(Graphical)f(elemen)o(ts,)g(suc)o(h)g(as)f(a)g
(text)g(or)f(a)h(whole)h(DRS)g(can)g(b)q(e)g(sp)q(eci\014ed)h(to)e(b)q
(e)229 394 y(clic)o(k)m(able)c(and)d(can)h(b)q(e)g(asso)q(ciated)f
(with)h(executable)g(Tcl-co)q(de)182 471 y Fk(\017)24
b Fs(This)16 b(co)q(de)g(can)g(sp)q(ecify)g(an)o(y)g(kind)g(of)f(in)o
(teractiv)o(e)h(b)q(eha)o(vior)g(via)f(the)h(underlying)h(app-)229
527 y(lication)182 604 y Fk(\017)24 b Fr(Clig)15 b Fs(pro)o(vides)h
(standard)f(facilities)i(lik)o(e)g(sa)o(ving)e(and)g(loading)i
(graphical)f(ob)s(jects)e(and)229 661 y(prin)o(ting)i(to)f(P)o
(ostscript)190 751 y(The)20 b(fo)q(cus)g(of)f(this)h(in)o(tro)q
(ductory)g(pap)q(er)g(is)g(the)g(use)g(of)f Fr(Clig)h
Fs(as)f(a)g(pure)h(bro)o(wser)f(for)122 807 y(graphical)k(information.)
f Fr(Clig)h Fs(uses)f(a)g(h)o(uman-readable)i(ASCI)q(I-represen)o
(tation)g(for)d(the)122 863 y(graphs)h(it)g(displa)o(ys)h(whic)o(h)g
(can)f(b)q(e)g(created)g(and)h(mo)q(di\014ed)g(with)f(common)g(text)f
(editors)122 920 y(lik)o(e)f Fr(vi)e Fs(or)g Fr(Ema)o(cs)p
Fs(.)f(Once)j(y)o(ou)e(understand)h(this)g(description)h(language,)e(y)
o(ou)h(can)f(simply)122 976 y(en)o(ter)c(graphs)h(in)g(y)o(our)f(text)g
(editor)h(and)g(displa)o(y)h(them)e(b)o(y)h(loading)g(them)g(in)o(to)f
(the)h(grapher.)122 1033 y(Although)21 b(I)g(b)q(eliev)o(e)h(that)e(v)o
(ery)g(few)g(p)q(eople)i(will)g(use)f Fr(Clig)f Fs(in)h(this)g(w)o(a)o
(y)e(\()p Fr(Clig)h Fs(usually)122 1089 y(gets)14 b(its)h(input)g(from)
f(programs,)f(not)h(h)o(uman)h(users\),)f(it)h(is)g(a)f(go)q(o)q(d)h(w)
o(a)o(y)e(to)h(b)q(ecome)i(familiar)122 1146 y(with)g(the)f(grapher)g
(and)g(its)h(p)q(ossibilities.)i(More)c(adv)m(anced)j(users,)e(who)g(w)
o(an)o(t)f(to)g(use)i Ff(Clig)f Fs(in)122 1202 y(in)o(teractiv)o(e)h
(applications)g(will)h(\014nd)f(more)f(detailed)i(information)e(in)h
(...)122 1362 y Fo(2)83 b(Using)27 b Fn(Clig)122 1463
y Fs(T)l(o)18 b(get)g(a)g(quic)o(k)h(o)o(v)o(erview)f(o)o(v)o(er)f
Fr(Clig)p Fs('s)h(capabilities,)i(the)e(program)f(comes)h(with)h(a)f
(set)g(of)122 1520 y(examples)g(whic)o(h)f(can)g(b)q(e)h(loaded)f(and)g
(displa)o(y)o(ed)h(using)g(the)f(men)o(u)g(bar.)f(The)h(next)g(section)
122 1576 y(describ)q(es)g(ho)o(w)d(y)o(ou)h(can)h(install)g(the)g
(grapher)e(on)i(y)o(our)e(mac)o(hine.)122 1715 y Fe(2.1)70
b(A)22 b(quic)n(k)h(installation)d(guide)122 1800 y Fs(In)c(order)f(to)
f(install)j Fr(Clig)p Fs(,)e(y)o(ou)f(need:)182 1890
y Fk(\017)24 b Fs(a)15 b(terminal)h(with)g(Tcl)f(7.4)g(and)g(Tk)g(4.0)f
(\(or)h(higher\))g(running)i(on)e(it)182 1967 y Fk(\017)24
b Fs(the)16 b(curren)o(t)f(release)g(of)g(the)g(grapher)g(\()p
Fd(clig-release.tar.gz)p Fs(\))190 2057 y(If)g(y)o(ou)f(cannot)g(run)g
Fd(wish)p Fs(,)f(the)i(Tcl/Tk-in)o(terpreter)f(on)h(y)o(our)e(mac)o
(hine,)i(please)g(ask)f(y)o(our)122 2113 y(system)f(op)q(erator)g(for)h
(help)h(or)e(install)j(the)e(curren)o(t)g(v)o(ersion)g(of)f(Tcl/Tk)h
(in)h(y)o(our)e(home)h(direc-)122 2170 y(tory)g(\(the)g(curren)o(t)h(v)
o(ersion)f(can)h(b)q(e)g(ftp'ed)g(via)g Fd(<URL:ftp://ftp.smli.com/)o
(pub/tcl/)o(>)p Fs(\).)190 2226 y(Y)l(ou)h(then)f(can)g(do)h(the)f
(follo)o(wing)h(step)f(b)o(y)g(step:)170 2316 y(1.)23
b(Put)15 b Fd(clig-release.tar.gz)e Fs(in)j(a)f(directory)g(of)g(its)g
(o)o(wn)170 2393 y(2.)23 b Fd(gunzip)g(clig-release.tar.gz)170
2470 y Fs(3.)g Fd(tar)h(-xvf)f(clig-release.tar)170 2548
y Fs(4.)g(start)14 b Fd(clig)190 2637 y Fs(I)j(ev)o(erything)f(w)o(en)o
(t)g(w)o(ell,)h(y)o(ou)f(no)o(w)g(should)h(b)q(e)g(able)g(to)e(load)i
(some)f(examples)h(form)e(the)122 2694 y Fd(examples)d
Fs(directory)l(.)h(Please)h(do)g(also)f(load)g(them)h(in)o(to)f(y)o
(our)g(text)f(editor)i(to)f(see)g(ho)o(w)g Fr(Clig)p
Fs('s)122 2750 y(description)k(\014les)f(generally)g(lo)q(ok)g(lik)o
(e.)944 2877 y Fp(4)p eop
%%Page: 5 5
5 4 bop 122 203 a Fe(2.2)70 b(The)22 b(men)n(u)e(bar)122
289 y Fs(The)j(men)o(u)g(bars)f(pro)o(vides)i(the)e(user)h(with)g(the)g
(standard)g(facilities)h(of)f(the)g(grapher)f(for)122
346 y(loading)17 b(and)g(sa)o(ving)g(graphics,)f(prin)o(ting)i(and)e
(setting)h(some)f(preferences.)h(It)g(also)f(con)o(tains)122
402 y(some)11 b(simple)h(help-mec)o(hanism)i(where)d(y)o(ou)g(can)g
(get)g(information)g(ab)q(out)g(the)g(basic)h(functions)122
459 y(hidden)17 b(in)f(the)f(men)o(u)h(bar)f(and)g(the)g(program)f
(itself.)190 515 y(The)i(File-men)o(u)g(con)o(tains)g(the)f(follo)o
(wing)h(men)o(u)f(p)q(oin)o(ts:)122 605 y Ft(New)i(Windo)o(w)24
b Fs(op)q(ens)16 b(a)f(new)h Fr(Clig)f Fs(pro)q(cess)g(with)h(a)f(main)
g(windo)o(w)h(of)e(its)i(o)o(wn.)122 682 y Ft(Load)25
b Fs(op)q(ens)16 b(a)f(\014le-selector)i(b)q(o)o(x)e(whic)o(h)h(lets)g
(y)o(ou)e(load)i(a)f(graph)g(from)f(disc.)122 759 y Ft(Sa)o(v)o(e)23
b Fs(op)q(ens)16 b(a)f(\014le-selector)i(b)q(o)o(x)e(whic)o(h)h(lets)g
(y)o(ou)e(sa)o(v)o(e)h(a)g(graph)g(to)f(disc.)122 836
y Ft(Prin)o(t)24 b Fs(\(preliminary\))16 b(P)o(ostscript)f(prin)o(ting)
h(to)f(\014le)31 b(/tmp/graph.ps)122 914 y Ft(Exit)25
b Fs(closes)16 b(main)g(windo)o(w)f(and)g(quits)h(program.)190
1003 y(The)g(View-men)o(u)g(lets)g(y)o(ou)e(c)o(hange)i(what)e(and)i
(ho)o(w)e(some)h(things)h(are)f(displa)o(y)o(ed.)122
1093 y Ft(Redispla)o(y)25 b Fs(redispla)o(ys)20 b(the)f(curren)o(t)g
(graph.)f(This)h(graph)g(ma)o(y)f(not)h(b)q(e)h(visible)h(after)d(y)o
(ou)229 1149 y(ha)o(v)o(e)i(selected)h(some)e(of)h(the)g(information)g
(in)h(the)f(Help-men)o(u.)h(This)f(option)g(also)g(is)229
1206 y(useful)d(to)e(see)i(ho)o(w)e(fast)g(a)g(graph)h(gets)f(dra)o(wn)
h(and)g(to)f(redispla)o(y)i(after)e(c)o(hanging)h(fon)o(t)229
1262 y(sizes,)g(switc)o(hing)g(o\013)e(colors)h(etc.)122
1339 y Ft(Fit)j(Windo)o(w)25 b Fs(expands)20 b(the)g(main)g(windo)o(w)g
(to)f(the)h(exact)g(size)h(of)e(curren)o(t)h(graph.)f(Note)229
1396 y(that)12 b(y)o(ou)h(can)f(set)h(the)g(size)g(of)g(the)f(main)i
(windo)o(w)f(with)g(y)o(our)f(windo)o(w)h(managers)f(resize)229
1452 y(button.)j(It)g(will)i(sta)o(y)d(the)h(same)g(size)h(un)o(til)h
(y)o(ou)e(use)g(Fit)g(Windo)o(w)h(again.)122 1530 y Ft(View)h(T)l(op)25
b Fs(displa)o(y)17 b(the)g(topmost)e(graph)h(in)i(the)e(graph)g(stac)o
(k,)g(whic)o(h)h(is)g(usually)h(the)f(last)229 1586 y(graph)e(y)o(ou)g
(loaded.)122 1663 y Ft(Clear)j(Stac)o(k)24 b Fs(remo)o(v)o(es)14
b(all)j(graphs)d(from)h(memory)f(and)i(displa)o(ys)g(a)f(cop)o(yrigh)o
(t)g(message.)122 1740 y Ft(T)l(ree)i(Hspace)24 b Fs(lets)19
b(y)o(ou)e(c)o(ho)q(ose)h(ho)o(w)f(m)o(uc)o(h)h(distance)h(a)f(no)q(de)
g(in)h(a)f(tree)f(at)h(least)g(should)229 1797 y(ha)o(v)o(e)d(from)f
(its)i(neigh)o(b)q(or)g(sibling.)122 1874 y Ft(T)l(ree)h(Vspace)24
b Fs(lets)14 b(y)o(ou)g(c)o(ho)q(ose)g(ho)o(w)g(m)o(uc)o(h)g(distance)h
(a)f(no)q(de)h(in)g(a)e(tree)h(should)i(ha)o(v)o(e)d(from)229
1931 y(its)j(elder)g(no)q(de.)122 2008 y Ft(F)l(on)o(t)h(Size)25
b Fs(lets)14 b(y)o(ou)f(c)o(ho)q(ose)g(the)g(size)i(of)d(the)i(fon)o(t)
e(used)i(for)f(displa)o(ying)i(text)e(in)h(the)f(graphs.)229
2064 y Fr(Clig)g Fs(uses)g(the)g(standard)f(fon)o(t)g(Helv)o(etica)i
(and)f(sym)o(b)q(ol)g(whic)o(h)h(should)g(b)q(e)f(installed)i(for)229
2121 y(y)o(our)g(terminal.)68 2210 y(No)g(Colors)24 b(switc)o(hes)16
b(color)g(graphics)g(on)f(and)h(o\013.)e(This)j(option)e(should)i(b)q
(e)f(used)g(if)h(y)o(ou)e(either)122 2267 y(ha)o(v)o(e)h(no)g(w)o(a)o
(y)g(of)g(displa)o(ying)i(colors)f(on)f(y)o(our)g(screen)h(or)f(if)h(y)
o(ou)f(w)o(an)o(t)g(to)f(mak)o(e)h(a)h(hardcop)o(y)122
2323 y(whic)o(h)f(should)g(b)q(e)g(prin)o(ted)g(on)f(a)g(mono)q(c)o
(hrome)g(prin)o(ting)h(device.)190 2380 y(The)j(Help-men)o(u)i(con)o
(tains)d(general)i(information)f(and)g(some)f(basic)i(tips)f(for)f
(using)h(the)122 2436 y(program.)190 2493 y(The)c(men)o(u)h(bar)f(also)
g(con)o(tains)g(t)o(w)o(o)f(buttons)h(with)g(arro)o(ws)f(in)i(them.)e
(These)i(are)e(used)i(to)122 2549 y(w)o(alk)g(through)h(the)f(graph)h
(stac)o(k.)e Fr(Clig)i Fs(stores)f(all)h(distinct)h(graphs)e(it)h(has)g
(to)f(displa)o(y)h(in)h(a)122 2606 y(stac)o(k,)c(with)i(the)g(topmost)e
(b)q(eing)j(the)e(new)o(est)h(ob)s(ject.)e(Th)o(us,)h(if)h(y)o(ou)f
(load)h(three)g(graphs,)f(all)122 2662 y(three)g(can)g(b)q(e)h(review)o
(ed)g(b)o(y)e(using)i(the)f(arro)o(w)f(k)o(eys.)g Fr(Clig)h
Fs(do)q(es)g(not)g(store)f(ob)s(jects)g(t)o(wice)i(in)122
2718 y(the)f(stac)o(k.)944 2877 y Fp(5)p eop
%%Page: 6 6
6 5 bop 122 203 a Fo(3)83 b(The)27 b(description)f(string)122
305 y Fs(This)16 b(section)f(explains)i(the)e Fm(description)h(string)j
Fs(of)c(the)g(grapher)g(whic)o(h)h(is)g(used)f(to)g(describ)q(e)122
361 y(the)f(graphical)g(information)g(to)f(b)q(e)h(displa)o(y)o(ed.)h
(Basically)l(,)g(the)e(description)i(string)f(is)g(a)f(list)i(in)122
418 y(Tcl-syn)o(tax)j(con)o(taining)h(a)e(hierarc)o(hical)j
(description)f(of)f(the)g(ob)s(ject)f(to)g(b)q(e)i(dra)o(wn)f(without)
122 474 y(an)o(y)c(exact)h(p)q(ositioning)h(information.)f(The)g(main)g
(function)h Fd(clig)e Fs(tak)o(es)g(this)i(description)g(as)122
531 y(an)11 b(argumen)o(t)e(and)i(p)q(erforms)g(a)f(top-do)o(wn)g(dra)o
(wing)h(algorithm)g(on)f(the)h(string.)f(The)h(k)o(eyw)o(ords)122
587 y(\(commands\))k(con)o(tained)i(in)g(the)f(string)g(actually)h(are)
f(Tcl-functions)i(for)d(graphical)i(ob)s(jects)122 644
y(whic)o(h)22 b(tak)o(e)e(care)i(of)e(the)i(p)q(ositioning)h(of)d
(their)i(c)o(hildren.)h(The)e(follo)o(wing)h(examples)1688
627 y Fl(3)1730 644 y Fs(are)122 700 y(description)17
b(strings:)182 787 y Fk(\017)24 b Fd({plain-text)f("NP"})182
862 y Fk(\017)h Fd({sign)f(lambda})182 938 y Fk(\017)h
Fd({drs)g({plain-text)e("x"})h({plain-text)g("John\(x\)"}})190
1025 y Fs(The)c(\014rst)f(example)h(describ)q(es)h(the)e(plain)i(text)d
Fd(NP)h Fs(\(a)g(text)g(with)g(no)h(further)f(graphical)122
1081 y(information)d(whic)o(h)g(also)g(is)g(not)f(clic)o(k)m(able)k(in)
d(an)o(y)f(w)o(a)o(y\).)f(The)i(k)o(eyw)o(ord)f(for)g(the)h
(description)122 1138 y(alw)o(a)o(ys)i(is)h(the)g(\014rst)f(w)o(ord,)f
(in)j(this)f(case)f Fd(plain-text)p Fs(.)f(The)i(second)g(describ)q(es)
h(the)f Fq(\025)p Fs(-sign.)122 1194 y(The)i(third)h(describ)q(es)h(a)d
(graphical)i(structure)f(with)h(t)o(w)o(o)d(c)o(hildren,)k(the)e(plain)
i(text)d Fd(x)h Fs(and)122 1250 y(the)c(plain)h(text)f
Fd(John\(x\))p Fs(.)e(These)i(t)o(w)o(o)f(c)o(hildren)i(are)f(to)f(b)q
(e)i(placed)g(in)f(a)g(rectangle)g(with)g(the)122 1307
y(\014rst)d(c)o(hild)j(b)q(eing)f(b)q(o)o(xed)f(on)g(top)f(of)h(the)f
(remaining)i(second;)f(the)g(c)o(hildren)i(also)e(are)f(cen)o(tered)122
1363 y(within)j(the)g(whole)f(structure.)g(The)g(result)h(is)g(a)f
(simple)h(DRS)g(as)f(sho)o(wn)g(in)h(\014g.)e(1.)190
1420 y(In)h(an)e(loadable)i(\014le,)g Ff(Clig)e Fs(requires)h(all)h
(descriptions)g(to)e(b)q(e)i(preceeded)g(b)o(y)f(the)g(command)122
1476 y Ff(clig)p Fs(.)f(Y)l(ou)h(therefore)f(can)h(try)g(all)g
(examples)h(in)f(this)h(pap)q(er)f(b)o(y)g(y)o(ourself)f(just)h(b)o(y)g
(t)o(yping)g(them)122 1533 y(in)o(to)k(a)f(text)h(\014le,)h(add)f(the)g
(w)o(ord)f Fd(clig)g Fs(in)i(fron)o(t)e(of)h(the)g(example)g(and)g
(loading)h(them)f(with)122 1589 y(the)d Ft(Load...)g
Fs(option)g(in)h(the)g(main)f(men)o(u)h(of)f Fr(Clig)p
Fs(.)856 1898 y @beginspecial 282 @llx 373 @lly 330 @urx
420 @ury 480 @rwi @setspecial
%%BeginDocument: drs1.ps


50 dict begin


/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/maxwidth 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def
/encoding {ISOLatin1Encoding} def


systemdict /encodefont known {
    /realsetfont /setfont load def
    /setfont {
	encoding encodefont realsetfont
    } def
} if


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % Turn the path into a clip region that we can then cover with
    % lots of images corresponding to the stipple pattern.  Warning:
    % some Postscript interpreters get errors during strokepath for
    % dashed lines.  If this happens, turn off dashes and try again.

    1 index /tmpstip exch def %% Works around NeWSprint bug

    gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
    grestore
    newpath
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipimage exch def
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /maxwidth 0 def
    strings {
	stringwidth pop
	dup maxwidth gt {/maxwidth exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    maxwidth xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify maxwidth mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	show
	0 spacing neg translate
    } forall
} bind def

/CL 2 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-25 -23 translate
0 47 moveto 50 47 lineto 50 0 lineto 0 0 lineto closepath clip newpath
gsave
0 47 moveto 49 0 rlineto 0 -46 rlineto -49 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
0 47 moveto 49 0 rlineto 0 -46 rlineto -49 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 29 moveto
49 29 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
21 44 [
    (x)
] 12 0 0 0 () false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
6 21 [
    (John\050x\051)
] 12 0 0 0 () false DrawText
grestore
restore showpage

end
%%EndDocument
 @endspecial 508 2000 a Fp(Figure)h(1:)g(A)g(simple)e(DRS)i(realized)f
(with)h Fc(drs)190 2161 y Fs(W)l(e)c(already)g(men)o(tioned)h(the)f
(fact)f(that)g(the)h(description)h(string)f(is)g(b)q(oth)g(a)g
(description)h(for)122 2218 y(a)j(graphical)h(ob)s(ject)f(and)g(a)g
(command)h(sequence)g(that)f(realizes)h(this)g(ob)s(ject)f(on)g(the)g
(screen.)122 2274 y(A)g(description)i(string)f(actually)g(is)g(a)f
(piece)i(of)e(Tcl-co)q(de)i(with)f(commands)f(to)g(dra)o(w)g(certain)
122 2331 y(ob)s(jects;)f(only)i(the)g(exact)f(p)q(ositioning)i
(information)e(is)h(missing.)g(Eac)o(h)f(k)o(eyw)o(ord)g(stands)g(for)
122 2387 y(one)f(command)g(that)f(has)h(additional)h(parameters)e(whic)
o(h)i(tell)g(it)g(where)f(to)f(dra)o(w)g(its)h(ob)s(ject,)122
2444 y(e.g.)d(the)h(k)o(eyw)o(ord)f Fd(drs)h Fs(corresp)q(onds)g(to)f
(the)h(Tcl-command)h Fd(drs)f Fs(whic)o(h)g(has)g(the)g(parameters)122
2500 y Fq(x)p Fs(,)j Fq(y)r Fs(,)g Fq(w)q(her)q(e)p Fs(,)g
Fq(mtag)r(s)h Fs(and)f Fq(obj)s(s)p Fs(.)g(The)g Fq(x)h
Fs(and)g Fq(y)h Fs(parameters)e(are)g(used)h(to)f(place)h(the)g(ob)s
(ject)122 2557 y(when)c(it)h(is)f(\014nally)i(dra)o(wn.)d(The)h
Fq(w)q(her)q(e)h Fs(parameter)e(allo)o(ws)h(to)f(c)o(hoice)i(of)f(the)g
(can)o(v)m(as)g(windo)o(w)122 2613 y(where)h(the)f(ob)s(ject)g(is)i
(dra)o(wn)e(\()p Fr(Clig)g Fs(supp)q(orts)h(m)o(ultiple)h(windo)o(ws)f
(op)q(en)g(at)f(the)h(same)f(time\).)p 0 2657 765 2 v
56 2687 a Fj(3)75 2702 y Fi(The)20 b(syn)o(tax)f(and)h(features)h(of)e
(the)h(language)e(describ)q(ed)k(here)f(are)f(preliminary)d(and)j(ma)o
(y)d(c)o(hange)j(in)f(later)0 2752 y(v)o(ersions)14 b(of)g(the)g
(grapher.)944 2877 y Fp(6)p eop
%%Page: 7 7
7 6 bop 122 203 a Fs(The)14 b Fq(mtag)r(s)f Fs(parameter)g(is)i(used)f
(to)f(inherit)i(ob)s(ject)e(indexes)i(for)e(clic)o(k)m(able)j(regions)e
(while)h(the)122 260 y(\014nal)g Fq(obj)s(s)f Fs(parameter)f(consists)i
(of)f(a)g(list)h(con)o(taining)g(ob)s(ject)f(descriptions.)h(The)g
(\014rst)e(one)i(of)122 316 y(these)c(ob)s(jects)f(will)i(b)q(e)f(dra)o
(wn)f(in)i(the)e(case)h(of)f Fd(drs)g Fs(in)i(the)f(head)f(with)h(a)g
(b)q(o)o(x)f(around)h(it,)f(the)h(rest)122 373 y(b)q(elo)o(w)k(the)f
(top)f(b)q(o)o(x.)h(All)i(parameters)d(except)h Fq(obj)s(s)g
Fs(are)f(in)o(visible)k(in)e(the)f(description)i(string;)122
429 y(they)f(will)i(b)q(e)f(\014lled)h(in)f(when)g(the)f(grapher)g(p)q
(erforms)g(the)g(description)i(as)e(a)g(Tcl-program.)190
486 y(The)20 b(commands)g(are)f(designed)j(to)d(use)h(as)f(few)h(brac)o
(k)o(ets)f(as)h(p)q(ossible)h(\(Tcl)f(isn't)g(Lisp)122
542 y(an)o(yw)o(a)o(y\);)11 b(if)i(a)f(command)h(only)g(tak)o(es)f(one)
h(argumen)o(t,)f(the)h(argumen)o(t)f(will)i(not)e(b)q(e)i(written)f(in)
122 599 y(brac)o(k)o(ets,)i(but)h(simply)i(follo)o(w)e(the)g(command.)g
(As)g(an)g(example,)h(the)f(follo)o(wing)h(description)122
655 y(string)e(describ)q(es)i(the)e(expression)h Fk(:)p
Fq(x)p Fs(:)229 745 y Fd({neg)24 b(plain-text)e("x"})190
834 y Fs(The)13 b(follo)o(wing)h(sections)f(explain)i(the)e(graphical)g
(commands)g(allo)o(w)o(ed)g(in)h(the)f(description)122
891 y(string)i(along)g(with)h(their)g(parameters)e(and)h(some)g(simple)
i(examples.)122 1029 y Fe(3.1)70 b(Sim)o(pl)o(e)20 b(text)122
1115 y Fs(P)o(erhaps)12 b(the)f(mostly)h(used)g(command)g(in)h
Fr(Clig)p Fs('s)e(description)i(strings)f(is)g Fd(plain-text)f
Fs(whic)o(h)122 1171 y(displa)o(ys)h(a)e(string)h(in)g
Fr(Clig)p Fs('s)f(standard)g(fon)o(t.)g(The)h(text)f(is)h(not)f
(mouse-sensitiv)o(e.)i Fd(Plain-text)122 1228 y Fs(do)q(es)j(tak)o(e)g
(a)g(simple)h(string)g(as)e(parameter.)229 1318 y Fd({plain-text)23
b("This)g(is)g(a)h(plain)f(text."})190 1407 y Fs(T)l(o)16
b(emphasize)g(certain)h(information,)e(y)o(ou)g(can)h(use)g
Fd(bold-text)p Fs(,)e(whic)o(h)j(do)q(es)f(the)g(same)122
1464 y(as)f Fd(plain-text)f Fs(but)h(with)g(a)g(b)q(older)i(fon)o(t.)
229 1553 y Fd({bold-text)23 b("This)g(is)h(a)f(bold)h(text."})190
1643 y Fs(The)13 b(curren)o(t)g(v)o(ersion)g(of)f Fr(Clig)h
Fs(uses)g(the)g(standard)f(Helv)o(etica)i(fon)o(ts)e(for)g(its)h
(displa)o(y)g(area.)122 1699 y(These)j(fon)o(ts)e(should)i(b)q(e)g
(installed)h(for)e(y)o(our)f(terminal.)190 1756 y(Some)g(sp)q(ecial)h
(c)o(haracters)e(are)h(v)o(ery)f(common)g(in)i(computational)f
(linguistics.)i(The)e(follo-)122 1812 y(wing)i(commands)f(pro)q(duce)h
(the)f(analogous)g(signs)g(in)h(the)g Fm(symb)n(ol)j
Fs(fon)o(t)1390 1796 y Fl(4)1409 1812 y Fs(.)229 1902
y Fd(sign)24 b(neg)g Fs(displa)o(ys)16 b Fk(:)229 1969
y Fd(sign)24 b(disj)f Fs(displa)o(ys)17 b Fk(_)229 2036
y Fd(sign)24 b(conj)f Fs(displa)o(ys)17 b Fk(^)229 2103
y Fd(sign)24 b(lambda)f Fs(displa)o(ys)16 b Fq(\025)229
2169 y Fd(sign)24 b(merge)f Fs(displa)o(ys)16 b Fk(\012)229
2236 y Fd(sign)24 b(forall)f Fs(displa)o(ys)16 b Fk(8)229
2303 y Fd(sign)24 b(exists)f Fs(displa)o(ys)16 b Fk(9)229
2370 y Fd(sign)24 b(subseteq)f Fs(displa)o(ys)16 b Fk(\022)229
2437 y Fd(sign)24 b(emptyset)f Fs(displa)o(ys)16 b Fk(;)p
0 2481 765 2 v 56 2511 a Fj(4)75 2526 y Fi(whic)o(h)d(should)h(b)q(e)h
(installed)e(for)g(y)o(our)h(terminal.)944 2877 y Fp(7)p
eop
%%Page: 8 8
8 7 bop 122 203 a Fe(3.2)70 b(Bo)n(xes)23 b(and)g(frames)122
289 y Fs(Y)l(ou)17 b(can)g(dra)o(w)f(b)q(o)o(xes)h(around)g(arbitrary)f
(ob)s(jects)h(with)g(the)g Fd(smallbox)f Fs(and)h Fd(bigbox)f
Fs(com-)122 346 y(mands.)c Fd(Smallbox)f Fs(uses)h(a)g(b)q(order)h(of)e
(2)h(p)q(oin)o(ts,)h(while)g Fd(bigbox)f Fs(will)i(lea)o(v)o(e)e(6)g(p)
q(oin)o(ts)g(of)g(b)q(order)122 402 y(space.)j(The)g(thic)o(kness)h(of)
f(the)g(b)q(order)h(sta)o(ys)e(the)h(same.)229 492 y
Fd({smallbox)23 b(plain-text)f("This)i(is)f(a)h(text)f(in)h(a)g(small)f
(box."})229 581 y({bigbox)g(plain-text)g("This)g(is)g(a)h(text)f(in)h
(a)g(big)f(box."})190 671 y Fs(Y)l(ou)16 b(can)f(design)h(b)q(o)o(xes)f
(with)h(arbitrary)e(b)q(order-width)j(with)e Fd(boxed)p
Fs(:)229 761 y Fd({boxed)23 b(3)h({plain-text)e("This)i(box)f(has)g(a)h
(3)g(point)f(border."}})190 850 y Fs(Note)13 b(that)g(since)i
Fd(boxed)e Fs(has)g(more)h(than)f(one)h(parameter,)e(the)i
Fd(plain-text)e Fs(description)122 907 y(string)j(has)g(to)f(b)q(e)i
(written)f(in)h(brac)o(k)o(ets.)e(The)h(command)g Fd(framed)f
Fs(do)q(es)i(the)f(same)g(as)g(b)q(o)o(xed,)122 963 y(but)h(without)h
(actually)g(dra)o(wing)f(the)g(b)q(order.)g Fd(framed)g
Fs(gets)f(used)i(when)g(ob)s(jects)f(should)h(b)q(e)122
1020 y(dra)o(wn)e(with)g(additional)i(space)e(around)h(them.)190
1076 y(A)h(sp)q(ecial)h(case)f(of)g(a)f(b)q(o)o(x)h(is)g(the)g
(diamond.)g(The)g(command)g Fd(diamond)e Fs(tak)o(es)h(an)h(ob)s(ject)
122 1133 y(and)e(puts)h(it)f(in)h(a)f(square)g(diamond)h(\(see)f
(\014g.)g(2\):)229 1222 y Fd({diamond)23 b(plain-text)g("diamond"})831
1624 y @beginspecial 276 @llx 366 @lly 336 @urx 426 @ury
600 @rwi @setspecial
%%BeginDocument: diamond.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-28 -31 translate
-3 62 moveto 59 62 lineto 59 0 lineto -3 0 lineto closepath clip newpath
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 38 [
    (diamond)
] 0 12 0 0 0 false DrawText
grestore
gsave
0 32 moveto
27 59 lineto
55 32 lineto
27 4.00000000000001 lineto
0 32 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EndDocument
 @endspecial 663 1725 a Fp(Figure)16 b(2:)g(The)g(diamond)g(b)q(o)o(x)
122 1971 y Fe(3.3)70 b(Brac)n(k)n(ets)122 2057 y Fs(Round)22
b(and)f(square)g(brac)o(k)o(ets)f(are)h(dra)o(wn)g(b)o(y)g(the)g
Fd(bracket)f Fs(and)h Fd(squarebracket)f Fs(com-)122
2113 y(mands.)15 b(The)g(syn)o(tax)g(is)g(similar)i(to)d(the)i(b)q(o)o
(xes.)e(E.g.)229 2203 y Fd({squarebracket)22 b(plain-text)h("Text)g(in)
g(square)h(brackets."})190 2293 y Fs(dra)o(ws)15 b(the)g(text)g(in)h
(square)f(brac)o(k)o(ets.)122 2431 y Fe(3.4)70 b(Lists)122
2517 y Fs(Lists)14 b(in)h(angle)g(brac)o(k)o(ets)e(can)h(b)q(e)h(dra)o
(wn)f(with)g(the)g Fd(anglelist)f Fs(command.)g(The)i(ob)s(jects)e(get)
122 2573 y(separated)i(b)o(y)g(commas.)229 2663 y Fd({anglelist)23
b({plain-text)f("first"})h({plain-text)f("second"}})944
2877 y Fp(8)p eop
%%Page: 9 9
9 8 bop 122 203 a Fe(3.5)70 b(Sequences)21 b(and)j(stac)n(ks)122
289 y Fs(So)16 b(far,)f(y)o(ou)g(can)h(only)h(displa)o(y)g(one)f(\(p)q
(ossibly)h(nested\))f(ob)s(ject.)f(Sometimes)i(it)f(is)g(necessary)122
346 y(to)e(displa)o(y)i(sev)o(eral)f(ob)s(jects)g(adjacen)o(t)f(to)h
(eac)o(h)g(other)f(\(sequences\))i(or)e(on)h(top)f(of)h(eac)o(h)g
(other)122 402 y(\(stac)o(ks\).)9 b(A)i(go)q(o)q(d)g(example)h(of)e(a)h
(sequence)h(w)o(ould)g(b)q(e)f(a)g(complex)h(logical)g(form)o(ula)f
(con)o(taining)122 459 y(v)m(ariables)16 b(\(whic)o(h)g(w)o(e)f(w)o
(ould)g(displa)o(y)i(as)d(plain)j(text\))d(and)i(logical)g(connectiv)o
(es)g(pro)o(vided)g(as)122 515 y(sp)q(ecial)j(commands.)e(The)g(follo)o
(wing)h(description)h(string)f(displa)o(ys)g(the)f(form)o(ula)g
Fk(9)p Fq(x)p Fs(\()p Fq(f)5 b Fs(\()p Fq(x)p Fs(\))11
b Fk(_)122 571 y Fq(v)r Fs(\()p Fq(x)p Fs(\)\):)229 661
y Fd({seq)24 b({sign)f(exists})g({plain-text)f("x\(f\(x\)"})349
718 y({sign)h(disj})g({plain-text)f("v\(x\)\)"}})190
807 y(seq)16 b Fs(orders)g(ob)s(jects)g(horizon)o(tally)h(with)g(minim)
o(um)g(space)g(b)q(et)o(w)o(een)f(the)h(ob)s(jects.)e(If)h(ob-)122
864 y(jects)i(ha)o(v)o(e)g(di\013eren)o(t)g(heigh)o(ts,)g(they)g(will)i
(b)q(e)f(cen)o(tered)g(v)o(ertically)l(.)g(The)f(almost)g(equiv)m(alen)
o(t)122 920 y(command)d Fd(Seq)g Fs(do)q(es)g(lea)o(v)o(e)h(more)e
(space)i(b)q(et)o(w)o(een)f(the)h(ob)s(jects.)190 977
y Fm(Stacks)k Fs(are)d(the)g(same)f(as)h(sequences,)h(but)f(ordered)g
(v)o(ertically)l(.)h(The)f(description)i(string)122 1033
y(b)q(elo)o(w)d(describ)q(es)h(three)e(b)q(o)o(xes)g(stac)o(k)o(ed)g
(on)g(eac)o(h)g(other)g(\(see)g(\014g.)g(3\):)229 1123
y Fd({stack)23 b({smallbox)g(plain-text)f("tiny"})396
1179 y({smallbox)h(plain-text)f("bigger"})396 1236 y({smallbox)h
(plain-text)f("very)i(large"}})190 1325 y Fs(Again,)15
b Fd(Stack)g Fs(w)o(ould)g(do)g(the)h(same)f(with)g(a)g(bit)h(more)f
(space)g(b)q(et)o(w)o(een)h(the)f(b)q(o)o(xes.)831 1655
y @beginspecial 276 @llx 371 @lly 336 @urx 422 @ury 600
@rwi @setspecial
%%BeginDocument: threebox.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-31 -26 translate
0 53 moveto 62 53 lineto 62 0 lineto 0 0 lineto closepath clip newpath
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
22 49 [
    (tiny)
] 0 12 0 0 0 false DrawText
grestore
gsave
20 51 moveto 21 0 rlineto 0 -16 rlineto -21 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
16 33 [
    (bigger)
] 0 12 0 0 0 false DrawText
grestore
gsave
14 35 moveto 33 0 rlineto 0 -16 rlineto -33 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 17 [
    (rather large)
] 0 12 0 0 0 false DrawText
grestore
gsave
2 19 moveto 57 0 rlineto 0 -16 rlineto -57 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EndDocument
 @endspecial 453 1756 a Fp(Figure)h(3:)g(Three)g(b)q(o)o(xes)g(\\stac)o
(k)o(ed")g(on)h(eac)o(h)f(other.)122 2003 y Fe(3.6)70
b(Arranging)24 b(space)122 2089 y Fs(Stac)o(ks)15 b(and)h(sequences)g
(can)g(b)q(e)g(used)g(to)f(order)g(ob)s(jects)g(in)i(almost)e(an)o(y)g
(w)o(a)o(y)f(in)j(the)e(displa)o(y)122 2146 y(area.)d(Ho)o(w)o(ev)o
(er,)g(they)h(do)h(not)e(allo)o(w)i(y)o(ou)f(to)f(arrange)h(for)f
(additional)j(\(or)d(less\))i(space)g(around)122 2202
y(or)h(b)q(et)o(w)o(een)h(ob)s(jects.)e(With)i Fd(vspace)p
Fs(,)e Fd(hspace)h Fs(and)h Fd(space)f Fs(y)o(ou)g(can)g(add)h(or)f
(subtract)g(ro)q(om)122 2259 y(b)q(et)o(w)o(een)d(ob)s(jects.)f(These)h
(commands)f(basically)i(dra)o(w)e(\\in)o(visible")j(ob)s(jects)d(whic)o
(h)i(tak)o(e)e(some)122 2315 y(space)g(in)g Fr(Clig)p
Fs('s)f(dra)o(wing)g(area.)f(Both)i Fd(hspace)e Fs(and)i
Fd(vspace)e Fs(consume)i(one)g(parameter,)e(while)122
2371 y Fd(space)18 b Fs(needs)i(t)o(w)o(o)d(in)o(tegers)i(as)g
(parameters.)e(The)j(follo)o(wing)f(description)i(string)d(puts)h(the)
122 2428 y(tin)o(y)c(b)q(o)o(x)g(\015oating)h(6)f(p)q(oin)o(ts)g(o)o(v)
o(er)f(the)i(other)f(t)o(w)o(o.)229 2518 y Fd({stack)23
b({smallbox)g(plain-text)f("tiny"})396 2574 y({vspace)h(6})396
2631 y({smallbox)g(plain-text)f("bigger"})396 2687 y({smallbox)h
(plain-text)f("very)i(large"}})944 2877 y Fp(9)p eop
%%Page: 10 10
10 9 bop 122 203 a Fe(3.7)70 b(Using)22 b(colors)122
289 y Fs(Generally)l(,)c Fr(Clig)f Fs(uses)h(blac)o(k)g(as)f(the)g
(main)h(color)f(for)g(dra)o(wing)g(ob)s(jects.)f(The)i
Fd(color)f Fs(com-)122 346 y(mand)h(encapsulates)h(an)e(ob)s(ject)h
(and)g(forces)f(it)h(to)f(b)q(e)i(dra)o(wn)e(in)i(an)f(arbitrary)f
(other)g(color)122 402 y(y)o(ou)f(c)o(ho)q(ose.)h(If)g(y)o(ou)f(ha)o(v)
o(e)g(a)h(color)f(displa)o(y)l(,)i(y)o(ou)e(could)i(pro)q(duce)g(a)e
(red)h(text)f(within)i(a)e(blue)122 459 y(b)q(o)o(x)f(with)h(the)f
(follo)o(wing)h(example:)229 546 y Fd({color)23 b(blue)h({bigbox)f
(color)g(red)47 b(plain-text)23 b("colors"}})190 689
y Fs(The)16 b(color)f(name)h(used)g(can)g(b)q(e)g(an)o(y)f(arbitrary)g
(color)g(whic)o(h)i(is)f(de\014ned)h(in)f(the)g Fd(rgb.txt)122
746 y Fs(in)g(y)o(our)f(X)g(library)h(directory)l(.)190
802 y(If)g(y)o(ou)e(w)o(an)o(t)g(to)h(c)o(hange)g(the)g(bac)o(kground)g
(of)g(an)g(ob)s(ject,)f(y)o(ou)h(can)g(use)h(the)f Fd(color-area)122
859 y Fs(command)g(whic)o(h)h(dra)o(ws)e(the)i(ob)s(ject)e(on)i(to)e
(of)h(a)g(colored)g(rectangular)h(region:)229 946 y Fd({color-area)23
b(blue)g({bigbox)g(color)g(red)47 b(plain-text)23 b("colors"}})122
1140 y Fe(3.8)70 b(T)-6 b(rees)122 1225 y Fr(Clig)p Fs('s)12
b(trees)g(are)g(built)i(with)f(the)g Fd(tree)e Fs(command.)h(The)h
(command)g(tak)o(es)e(one)i(parameter|)122 1282 y(the)i(elder)g(no)q
(de|and)h(an)f(arbitrary)f(n)o(um)o(b)q(er)h(of)f(c)o(hildren.)i(Eac)o
(h)f(c)o(hild)h(ma)o(y)e(either)h(b)q(e)h(ano-)122 1338
y(ther)11 b(tree)h(or)f(a)g(leaf)h(consisting)h(of)e(an)o(y)g(ob)s
(ject)g(dra)o(w)o(able)h(b)o(y)f(the)h(grapher.)f(The)h(next)g(example)
122 1395 y(ma)o(y)i(represen)o(t)i(some)f(syn)o(tactical)g(analysis)h
(expressed)g(as)f(a)g(tree)g(\(see)g(\014g.)g(4\):)277
1482 y Fd({tree)23 b({plain-text)g(S})420 1538 y({tree)g({plain-text)g
(NP})563 1595 y({tree)h({plain-text)e(DET})707 1651 y({plain-text)g
(The}})563 1708 y({tree)i({plain-text)e(N})707 1764 y({plain-text)g
(postman}}})420 1821 y({tree)h({plain-text)g(VP})563
1877 y({tree)h({plain-text)e(V})707 1934 y({plain-text)g(bites}})563
1990 y({tree)i({plain-text)e(NP})707 2046 y({tree)h({plain-text)f(DET})
850 2103 y({plain-text)g(the}})850 2159 y({tree)h({plain-text)f(N})850
2216 y({plain-text)g(dog}}}}})190 2303 y Fs(If)13 b(y)o(ou)g(w)o(an)o
(t)f(horizon)o(tally)i(orien)o(ted)g(trees,)e(just)h(use)g
Fd(htree)g Fs(instead)g(of)g Fd(tree)f Fs(to)h(describ)q(e)122
2359 y(the)i(tree.)122 2497 y Fe(3.9)70 b(F)-6 b(eature)23
b(structures)122 2583 y Fm(F)m(e)n(atur)n(e)c(Structur)n(es)k
Fs(or)c(A)o(ttribute)g(V)l(alue)h(Matrices)g(as)e(they)i(are)f
(sometimes)g(called)i(ha)o(v)o(e)122 2639 y(their)c(home)h(in)f
(uni\014cation)i(based)e(grammar)f(formalisms)h(suc)o(h)g(as)g(HPSG.)g
(Graphically)l(,)h(a)122 2696 y(feature)i(structure)g(consists)g(of)g
(a)g(square)g(brac)o(k)o(et)f(around)i(a)e(set)h(of)g(lab)q(el-v)m
(alue-p)q(airs.)i(A)122 2752 y(t)o(yp)q(ed)15 b(feature)f(structure)g
(ma)o(y)g(also)g(ha)o(v)o(e)g(a)g(t)o(yp)q(e)h(name)f(in)i(its)e(brac)o
(k)o(ets)g(or|dep)q(ending)j(on)932 2877 y Fp(10)p eop
%%Page: 11 11
11 10 bop 122 203 a Fs(the)16 b(notation|in)g(fron)o(t)f(of)g(it.)h(T)l
(o)f(realize)i(feature)f(structures,)f Fr(Clig)g Fs(pro)o(vides)h(the)g
Fd(fs)f Fs(and)122 260 y Fd(feature)c Fs(commands.)h(Figure)h(5)f
(illustrates)i(the)e(follo)o(wing)h(nested)g(t)o(yp)q(ed)g(feature)f
(structure:)229 348 y Fd({fs)24 b({plain-text)e("word"})444
405 y({feature)h("PHON")g({plain-text)f(<she>}})444 461
y({feature)h("SYNSEM")492 518 y({fs)g({plain-text)g(synsem})587
574 y({feature)g("LOCAL")611 631 y({fs)h({plain-text)e(local})659
687 y({feature)h("CATEGORY")707 744 y({fs)g({plain-text)f(head})802
800 y({feature)h("HEAD")850 856 y({fs)g({feature)g("CASE")1160
913 y({plain-text)f(nom}}}})802 969 y({feature)47 b("SUBCAT")22
b({plain-text)h(<>}}}})659 1026 y({feature)g("CONTENT")707
1082 y({fs)g({plain-text)f("ppro"}}}}}}}})122 1252 y
Fe(3.10)70 b(Compl)o(ex)20 b(Bo)n(xes)122 1338 y Fm(Complex)14
b(Boxes)j Fs(are)c(those)g(graphical)i(ob)s(jects)e(whic)o(h)h(are)f
(used)h(in)g(the)g(DR)l(T)f(and)h(Situation)122 1395
y(Theory:)122 1483 y Fd(drs)p Ft(:)23 b Fs(dra)o(ws)15
b(an)g(ob)s(ject)f Fq(a)h Fs(ab)q(o)o(v)o(e)g(a)f(set)h(of)g(ob)s
(jects)f Fq(c)1066 1490 y Fl(1)1085 1483 y Fq(:::c)1144
1490 y Fb(n)1181 1483 y Fs(and)i(dra)o(ws)e(a)g(b)q(o)o(x)h(around)g
Fq(a)g Fs(and)229 1540 y(a)g(b)q(o)o(x)g(around)g Fq(c)528
1547 y Fl(1)548 1540 y Fq(:::c)607 1547 y Fb(n)629 1540
y Fs(.)g(\(see)g(\014gure)g(6\))320 1620 y Fd({drs)24
b({SEQ)f({plain-text)f("a"})i({plain-text)e("x"}})440
1676 y({plain-text)g("dog\(a\)"})440 1733 y({plain-text)g
("Jones\(x\)"})440 1789 y({plain-text)g("owns\(x,a\)"}})122
1879 y(cornerbox)p Ft(:)h Fs(is)18 b(almost)f(lik)o(e)i
Fd(drs)p Fs(,)d(but)i(ob)s(ject)f Fq(a)h Fs(gets)f(dra)o(wn)g(in)h(the)
g(north)o(w)o(est)e(corner)i(of)229 1936 y(the)e(main)f(b)q(o)o(x)g
(\(\014gure)g(7\).)320 2016 y Fd({cornerbox)23 b({plain-text)f("This)h
(is)h(in)g(the)f(corner..."})583 2072 y({plain-text)f("...and)h(this)h
(is)f(below"}})122 2163 y(followboxes)p Ft(:)f Fs(dra)o(ws)12
b(an)h(ob)s(ject)f Fq(a)h Fs(follo)o(w)o(ed)g(b)o(y)g(a)f(sequence)i
(of)e(ob)s(jects)g Fq(c)1461 2170 y Fl(1)1481 2163 y
Fq(:::c)1540 2170 y Fb(n)1574 2163 y Fs(where)h(eac)o(h)229
2219 y Fq(c)249 2226 y Fb(x)286 2219 y Fs(is)j(dra)o(wn)e(in)i(a)f(b)q
(o)o(x)g(aligned)i(to)e(the)g(size)h(of)f Fq(a)g Fs(\(see)g(\014gure)h
(8\).)320 2299 y Fd({followboxes)23 b({drs)g({plain-text)f("x"})i
({plain-text)e("dog\(x\)"}})750 2356 y({plain-text)g("this)i(follows)e
(the)i(drs"}})122 2446 y(stackboxes)p Ft(:)e Fs(puts)16
b(a)f(set)h(of)f(ob)s(jects)g Fq(o)841 2453 y Fl(1)861
2446 y Fq(:::o)922 2453 y Fb(n)960 2446 y Fs(in)h(b)q(o)o(xes)g(and)g
(dra)o(ws)f(them)g(ab)q(o)o(v)o(e)h(an)f(ob)s(ject)229
2502 y Fq(z)j Fs(\(\014gure)d(9\).)320 2583 y Fd({stackboxes)23
b({plain-text)f("highest"})607 2639 y({plain-text)g("higher"})607
2696 y({cornerbox)g({plain-text)h("cornerbox"})869 2752
y({plain-text)g("lowest"}}})932 2877 y Fp(11)p eop
%%Page: 12 12
12 11 bop 122 203 a Fd(stairboxes)p Ft(:)22 b Fs(dra)o(ws)c(b)q(o)o
(xes)f(lik)o(e)i Fd(stackboxes)p Fs(,)d(but)i(also)g(inden)o(ts)h(the)f
(b)q(o)o(xes)f(on)h(the)g(left-)229 260 y(hand)e(side)g(\(\014gure)f
(10\).)320 341 y Fd({stairboxes)23 b({plain-text)f("highest"})607
398 y({plain-text)g("higher"})607 454 y({cornerbox)g({plain-text)h
("cornerbox"})869 511 y({plain-text)g("lowest"}}})122
663 y Fe(3.11)70 b(In)n(teraction)122 749 y Fs(Eac)o(h)21
b(ob)s(ject)h(in)g(the)g(dra)o(wing)g(area)f(can)h(b)q(e)g(link)o(ed)h
(to)e(a)h(piece)h(of)e Fr(Tcl)h Fs(co)q(de)g(b)o(y)g(using)122
806 y(the)15 b(commands)g Fd(clickable)f Fs(and)h Fd(active)p
Fs(.)f(While)i Fd(clickable)e Fs(simply)j(p)q(erforms)d(one)i(com-)122
862 y(mand)22 b(whic)o(h)h(gets)f(executed)h(when)f(the)h(user)f
(double-clic)o(ks)j(on)d(the)g(asso)q(ciated)g(ob)s(ject,)122
919 y Fd(active)17 b Fs(can)g(de\014ne)i(m)o(ultiple)h(p)q
(ossibilities)g(for)d(the)h(same)f(ob)s(ject)g(or)h(de\014ne)g(sp)q
(ecial)i(b)q(eha-)122 975 y(viors.)15 b([Konrad)g(95b])g
(\(forthcoming\))f(will)j(explain)g(in)f(a)g(detailed)g(w)o(a)o(y)f(ho)
o(w)g(y)o(ou)g(can)g(de\014ne)122 1032 y(in)o(teractiv)o(e)g(b)q(eha)o
(vior)h(within)g(graphs.)f(The)g(follo)o(wing)h(example)g(creates)f(a)f
(mouse)h(sensitiv)o(e)122 1088 y(text-b)q(o)o(x)g(whic)o(h)h(pro)q
(duces)g(a)f(short)f(message)h(when)h(clic)o(k)o(ed)g(on:)229
1178 y Fd({clickable)23 b({bigbox)g(plain-text)f("click)h(me!"})492
1234 y({puts)g("YOU)g(CLICKED)g(ME!"}})190 1324 y(active)16
b Fs(allo)o(ws)h(the)g(use)g(of)g(sev)o(eral)g(ev)o(en)o(t-command)f
(pairs)i(for)e(the)h(same)f(ob)s(ject.)g(The)122 1380
y(general)g(syn)o(tax)e(for)h Fd(active)f Fs(is)229 1470
y Fd({active)23 b(<object>)g({<event>)g(<command>})f(...)i({<event>)e
(<command>}})190 1560 y Fs(An)17 b(ev)o(en)o(t)e(is)i(an)f(ev)o(en)o(t)
g(description)i Fr(Tk)d Fs(uses,)h(e.g.)g Fd(<Double-2>)e
Fs(for)i(a)g(double)h(clic)o(k)h(on)122 1616 y(the)12
b(middle)i(mouse)f(button.)e(If)i(y)o(ou)f(w)o(an)o(ted)f(the)i
(message)f(from)f(the)h(last)h(example)g(to)e(app)q(ear)122
1672 y(when)16 b(the)f(middle)i(mouse)e(button)g(gets)g(clic)o(k)o(ed)h
(once,)g(y)o(ou)e(w)o(ould)i(express)f(it)h(lik)o(e)g(this:)229
1762 y Fd({active)23 b({bigbox)g(plain-text)g("click)g(me!"})420
1819 y({<2>)g({puts)h("YOU)f(CLICKED)g(ME!"}}})122 1957
y Fe(3.12)70 b(Other)22 b(comm)n(ands)122 2043 y Fr(Clig)16
b Fs(pro)o(vides)g(additional)h(graphical)g(ob)s(jects)e(for)g(some)g
(sp)q(ecial)j(applications,)f(e.g.)e(In)o(ten-)122 2099
y(tional)h(Logic.)f(The)h(table)f(of)g(commands)g(in)h(section)g(3.13)e
(summarize)h(all)i(commands.)122 2237 y Fe(3.13)70 b(T)-6
b(able)22 b(of)h(comm)n(ands)122 2323 y Fs(The)c(follo)o(wing)h(list)g
(summarizes)g(the)f(prede\014ned)i(graphical)f(ob)s(jects)e(y)o(ou)h
(can)g(use)g(in)h(the)122 2380 y(description)j(string)f(along)g(with)h
(their)f(parameters)f(\()p Fq(s)h Fs(stands)g(for)g(strings,)f
Fq(d)h Fs(for)f(ob)s(ject)122 2436 y(descriptions,)16
b Fq(c)f Fs(for)g(Tcl-scripts)h(and)f Fq(e)h Fs(for)e(a)h(ev)o(en)o
(t-command)g(pair\):)932 2877 y Fp(12)p eop
%%Page: 13 13
13 12 bop 147 247 a Fs(Name)p 481 264 2 57 v 245 w(Description)p
1549 264 V 841 w(P)o(arameters)p 122 266 1965 2 v 147
305 a Fd(active)p 481 322 2 57 v 216 w Fs(links)16 b(ob)s(ject)f(to)g
(ev)o(en)o(ts)p 1549 322 V 643 w Fq(d)g(e)1634 312 y
Fl(1)1669 305 y Fs(...)f Fq(e)1743 312 y Fb(n)147 362
y Fd(anglelist)p 481 379 V 144 w Fs(dra)o(ws)g(ob)s(jects)h(as)g(a)g
(list)p 1549 379 V 627 w Fq(d)1598 369 y Fl(1)1633 362
y Fs(...)f Fq(d)1710 369 y Fb(n)147 418 y Fd(bigbox)p
481 435 V 216 w Fs(dra)o(ws)g(b)q(o)o(x)h(with)h(large)f(frame)g(\(6)f
(pts\))h(around)g(ob)s(ject)p 1549 435 V 81 w Fq(d)147
475 y Fd(bold-text)p 481 491 V 144 w Fs(dra)o(ws)f(text)h(in)h(b)q(old)
g(fon)o(t)p 1549 491 V 608 w Fq(s)147 531 y Fd(boxed)p
481 548 V 240 w Fs(dra)o(ws)e(b)q(o)o(x)h(with)h(frame)f(size)h
Fq(x)f Fs(around)g(ob)s(ject)p 1549 548 V 214 w Fq(x)h(d)147
587 y Fd(bracket)p 481 604 V 192 w Fs(dra)o(ws)e(round)i(brac)o(k)o
(ets)e(around)h(ob)s(ject)p 1549 604 V 350 w Fq(d)147
644 y Fd(clickable)p 481 661 V 144 w Fs(links)h(ob)s(ject)f(to)g
(command)p 1549 661 V 574 w Fq(d)g(c)147 700 y Fd(color)p
481 717 V 240 w Fs(c)o(hanges)g(foreground)g(color)g(for)g
Fq(d)p 1549 717 V 465 w(col)q(or)h(d)147 757 y Fd(color-area)p
481 774 V 120 w Fs(c)o(hanges)f(bac)o(kground)g(color)g(for)g
Fq(d)p 1549 774 V 449 w(col)q(or)h(d)147 813 y Fd(cornerbox)p
481 830 V 144 w Fs(lik)o(e)g Fd(drs)f Fs(with)g Fq(d)804
820 y Fb(top)869 813 y Fs(in)h(the)f(top)g(left)h(corner)p
1549 830 V 289 w Fq(d)1598 820 y Fb(top)1663 813 y Fq(d)1687
820 y Fl(1)1721 813 y Fs(...)e Fq(d)1798 820 y Fb(n)147
870 y Fd(diamond)p 481 887 V 192 w Fs(dra)o(ws)g(square)h(diamond)h
(around)f(ob)s(ject)p 1549 887 V 330 w Fq(d)147 926 y
Fd(drs)p 481 943 V 288 w Fs(DRS-lik)o(e)i(structure)p
1549 943 V 695 w Fq(d)1598 933 y Fb(top)1663 926 y Fq(d)1687
933 y Fl(1)1721 926 y Fs(...)d Fq(d)1798 933 y Fb(n)147
983 y Fd(feature)p 481 1000 V 192 w Fs(dra)o(ws)g(single)j(feature-v)m
(alue)f(pair)p 1549 1000 V 462 w Fq(str)q(ing)h(d)147
1039 y Fd(followboxes)p 481 1056 V 96 w Fs(dra)o(ws)d(follo)o(wb)q(o)o
(xes)p 1549 1056 V 711 w Fq(d)1598 1046 y Fb(main)1699
1039 y Fq(d)1723 1046 y Fl(1)1757 1039 y Fs(...)g Fq(d)1834
1046 y Fb(n)147 1096 y Fd(framed)p 481 1112 V 216 w Fs(lea)o(v)o(es)h
(extra)g(space)g Fq(x)g Fs(around)g(ob)s(ject)p 1549
1112 V 380 w Fq(x)h(d)147 1152 y Fd(fs)p 481 1169 V 312
w Fs(feature)f(structure)p 1549 1169 V 734 w Fq(d)1598
1159 y Fl(1)1633 1152 y Fs(...)f Fq(d)1710 1159 y Fb(n)147
1208 y Fd(htree)p 481 1225 V 240 w Fs(lik)o(e)i(tree,)f(but)g(from)g
(left)g(to)g(righ)o(t)p 1549 1225 V 459 w Fq(d)1598 1215
y Fb(elder)1694 1208 y Fq(d)1718 1215 y Fb(child)p Fa(\000)p
Fl(1)1857 1208 y Fs(...)f Fq(d)1934 1215 y Fb(child)p
Fa(\000)p Fb(n)147 1265 y Fd(imp)p 481 1282 V 288 w Fs(implication)p
1549 1282 V 847 w Fq(d)1598 1272 y Fl(1)1633 1265 y Fq(d)1657
1272 y Fl(2)147 1321 y Fd(leftstack)p 481 1338 V 144
w Fs(same)h(as)g(stac)o(k,)f(but)h(without)g(cen)o(tering)p
1549 1338 V 336 w Fq(d)1598 1328 y Fl(1)1633 1321 y Fs(...)f
Fq(d)1710 1328 y Fb(n)147 1378 y Fd(leftStack)p 481 1395
V 144 w Fs(same)h(as)g(leftstac)o(k,)f(with)i(more)e(space)i(b)q(et)o
(w)o(een)f(ob)s(jects)p 1549 1395 V 49 w Fq(d)1598 1385
y Fl(1)1633 1378 y Fs(...)f Fq(d)1710 1385 y Fb(n)147
1434 y Fd(neg)p 481 1451 V 288 w Fs(negates)h(ob)s(ject)p
1549 1451 V 782 w Fq(d)147 1491 y Fd(plain-text)p 481
1508 V 120 w Fs(dra)o(ws)f(text)p 1549 1508 V 857 w Fq(s)147
1547 y Fd(Seq)p 481 1564 V 288 w Fs(dra)o(ws)g(horizon)o(tal)i
(sequence)g(of)f(ob)s(jects)p 1549 1564 V 342 w Fq(d)1598
1554 y Fl(1)1633 1547 y Fs(...)f Fq(d)1710 1554 y Fb(n)147
1604 y Fd(seq)p 481 1621 V 288 w Fs(same)h(as)g(Seq,)g(but)g(with)h
(minim)o(um)g(space)p 1549 1621 V 304 w Fq(d)1598 1611
y Fl(1)1633 1604 y Fs(...)e Fq(d)1710 1611 y Fb(n)147
1660 y Fd(SEQ)p 481 1677 V 288 w Fs(same)h(as)g(Seq,)g(with)g(more)g
(space)h(\(see)f Fd(imp)p Fs(\))p 1549 1677 V 280 w Fq(d)1598
1667 y Fl(1)1633 1660 y Fs(...)f Fq(d)1710 1667 y Fb(n)147
1717 y Fd(sign)p 481 1733 V 264 w Fs(displa)o(ys)i(some)f(sp)q(ecial)i
(signs)p 1549 1733 V 537 w Fq(name)147 1773 y Fd(smallbox)p
481 1790 V 168 w Fs(dra)o(ws)d(b)q(o)o(x)h(with)h(small)g(frame)f(\(2)f
(pts\))h(around)g(ob)s(ject)p 1549 1790 V 73 w Fq(d)147
1829 y Fd(Stack)p 481 1846 V 240 w Fs(stac)o(ks)f(ob)s(jects)h(on)g
(top)g(of)f(eac)o(h)i(other)p 1549 1846 V 375 w Fq(d)1598
1836 y Fl(1)1633 1829 y Fs(...)e Fq(d)1710 1836 y Fb(n)147
1886 y Fd(stack)p 481 1903 V 240 w Fs(same)h(as)g(Stac)o(k,)f(but)h
(with)h(minim)o(um)g(space)p 1549 1903 V 265 w Fq(d)1598
1893 y Fl(1)1633 1886 y Fs(...)e Fq(d)1710 1893 y Fb(n)147
1942 y Fd(stackboxes)p 481 1959 V 120 w Fs(dra)o(ws)g(stac)o(kb)q(o)o
(xes)p 1549 1959 V 725 w Fq(d)1598 1949 y Fl(1)1633 1942
y Fs(...)g Fq(d)1710 1949 y Fb(n)1748 1942 y Fq(d)1772
1949 y Fb(low)q(est)147 1999 y Fd(squarebracket)p 481
2016 V 48 w Fs(dra)o(ws)g(square)h(brac)o(k)o(ets)g(around)g(ob)s(ject)
p 1549 2016 V 338 w Fq(d)147 2055 y Fd(tree)p 481 2072
V 264 w Fs(dra)o(ws)f(tree)p 1549 2072 V 861 w Fq(d)1598
2062 y Fb(elder)1694 2055 y Fq(d)1718 2062 y Fb(child)p
Fa(\000)p Fl(1)1857 2055 y Fs(...)g Fq(d)1934 2062 y
Fb(child)p Fa(\000)p Fb(n)147 2112 y Fd(underline)p 481
2129 V 144 w Fs(dra)o(ws)g(a)h(line)i(under)f(the)f(ob)s(ject)p
1549 2129 V 483 w Fq(d)p 122 2130 1965 2 v 122 2253 a
Fo(4)83 b(What)27 b(is)g(not)h(in)f(this)g(pap)r(er:)g(F)-7
b(uture)27 b(w)n(orks)122 2354 y Fs(The)17 b(purp)q(ose)h(of)f(this)g
(pap)q(er)h(w)o(as)e(to)h(in)o(tro)q(duce)h Ff(Clig)f
Fs(as)f(as)h(a)g(pure)h(bro)o(wser)e(for)h(graphical)122
2411 y(information)h(and)f(to)g(sho)o(w)g(its)h(graphical)g
(capabilities.)h(It)f(therefore)f(do)q(es)h(not)f(tell)i(y)o(ou)e(in)
122 2467 y(detail)182 2557 y Fk(\017)24 b Fs(ho)o(w)15
b(y)o(ou)g(can)g(extend)h Fr(Clig)f Fs(with)g(y)o(our)g(o)o(wn)g
(graphical)h(ob)s(jects)182 2634 y Fk(\017)24 b Fs(ho)o(w)15
b(y)o(ou)g(can)g(mak)o(e)g(graphs)g(in)o(teractiv)o(e)182
2711 y Fk(\017)24 b Fs(ho)o(w)15 b(applications)i(can)e(use)h
Fr(Clig)932 2877 y Fp(13)p eop
%%Page: 14 14
14 13 bop 190 203 a Fs(One)18 b(reason)e(wh)o(y)g(this)h(pap)q(er)h(do)
q(es)f(not)f(tell)i(y)o(ou)e(all)i(these)f(things)g(is)g(b)q(ecause)h
(some)e(of)122 260 y(them)j(are)h(still)h(in)f(w)o(ork|e.g.)e(the)i
(application)h(in)o(terfaces)f(to)f(Prolog)g(and)h(Lisp)h(are)e(still)
122 316 y(exp)q(erimen)o(tal)g(or)f(nonexisten)o(t.)g
Fr(Clig)g Fs(curren)o(tly)g(runs)h(in)f(an)g(application)i(with)e
(Sicstus)h(3,)122 373 y(but)14 b(w)o(e)g(hop)q(e)g(to)f(extend)i(in)o
(terfaces)f(to)f(include)j(Common)e(Lisp)h(and)f(other)f(Prolog)h
(dialects.)190 429 y(The)h(topics)h(of)e(in)o(teraction)i(and)f
(extendibilit)o(y)j(are)c(dealt)i(with)f(in)h(the)f(up)q(coming)h(pap)q
(er)122 486 y([Konrad)f(95b])h(whic)o(h)j(will)g(also)e(giv)o(e)h(some)
f(detailed)i(information)e(ab)q(out)g(the)h(state)e(of)h(the)122
542 y(in)o(terfaces.)932 2877 y Fp(14)p eop
%%Page: 15 15
15 14 bop 122 203 a Fo(References)122 305 y Fs([F)l(racas)14
b(95])23 b(Robin)18 b(Co)q(op)q(er,)e(Dic)o(k)g(Crouc)o(h,)g(Jan)h(v)m
(an)f(Eijc)o(k,)h(Chris)f(F)l(o)o(x,)g(Josef)g(v)m(an)h(Gena-)261
361 y(bith,)k(Jan)g(Jaspars,)e(Hans)i(Kamp,)f(Manfed)g(Pink)m(al,)i
(Massimo)d(P)o(o)q(esio)i(and)g(Stev)o(e)261 418 y(Pulman.)15
b Fm(Evaluating)h(the)g(State)f(of)h(the)g(A)o(rt)p Fs(.)e(F)l(raCaS)g
(Deliv)o(erable)i(D10.)e(Univ)o(ersit)o(y)261 474 y(of)h(Edingburgh,)h
(Cen)o(tre)f(for)f(Cognitiv)o(e)i(Sciences.)122 551 y([Kamp)f(93])23
b(Hans)15 b(Kamp)g(and)g(Uw)o(e)f(Reyle.)i Fm(F)m(r)n(om)f(Disc)n
(ourse)h(to)g(L)n(o)n(gic)p Fs(.)d(Klu)o(w)o(er)i(Academic)261
608 y(Press,)g(Dordrec)o(h)o(t)f(-)h(Boston)g(-)g(London,)h(1993)122
685 y([Konrad)f(95b])24 b(Karsten)15 b(Konrad.)g Fm(Extending)h
Fr(Clig)p Fm(:)g(Inter)n(action)g(and)g(User)g(De\014ne)n(d)g(Gr)n(a-)
261 742 y(phics)p Fs(.)f(unpublished)j(draft,)c(1995.)122
819 y([Ousterhout)h(94])23 b(John)c(K.)g(Ousterhout.)f
Fm(Tcl)g(and)h(the)g(Tk)g(T)m(o)n(olkit)t Fs(.)e(Reading,)i(Massac)o(h)
o(u-)261 875 y(setts)12 b(-)h(Menlo)g(P)o(ark,)e(California)j(-)f(New)f
(Y)l(ork,)g(Addison-W)l(esley)j(Professional)e(Com-)261
932 y(puting)j(Series,)g(1994.)122 1009 y([P)o(ollard)f(87])24
b(Carl)11 b(P)o(ollard)h(and)g(Iv)m(an)g(A.)f(Sag.)g
Fm(Information-Base)n(d)h(Syntax)h(and)g(Semantics.)261
1065 y(V)m(olume)k(1:)f(F)m(undamentals)p Fs(.)e(CSLI)j(Lecture)f
(Notes,)f(Menlo)h(P)o(ark)f(-)h(Stanford)f(-)h(P)o(alo)261
1122 y(Alto,)f(Cen)o(ter)g(for)g(the)g(Study)g(of)g(Language)g(and)h
(Information)f(\(CSLI\),)g(1987)122 1199 y([Sicstus)h(95])23
b(Programming)13 b(Systems)h(Group)f(of)h(the)g(Sw)o(edish)h(Institute)
f(of)g(Computer)f(Sci-)261 1255 y(ence.)f Fm(SICStus)e(Pr)n(olo)n(g)i
(User's)f(Manual)p Fs(.)f(Release)j(3.)d(Sw)o(edish)i(Institute)f(of)g
(Computer)261 1312 y(Science,)17 b(1995.)932 2877 y Fp(15)p
eop
%%Page: 16 16
16 15 bop 671 891 a @beginspecial 238 @llx 317 @lly 375
@urx 476 @ury 1370 @rwi @setspecial
%%BeginDocument: postman.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-70 -82 translate
0 165 moveto 141 165 lineto 141 0 lineto 0 0 lineto closepath clip newpath
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
66 163 [
    (S)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 129.4 [
    (NP)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
2 95.8 [
    (DET)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 62.2 [
    (The)
] 0 12 0 0 0 false DrawText
grestore
gsave
11 62.2 moveto
11.25 82.8 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
11 95.8 moveto
33.25 116.4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42 95.8 [
    (N)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
26 62.2 [
    (postman)
] 0 12 0 0 0 false DrawText
grestore
gsave
45 62.2 moveto
45.25 82.8 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
45 95.8 moveto
33.25 116.4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
33 129.4 moveto
69.25 150 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
97 129.4 [
    (VP)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
77 95.8 [
    (V)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
70 62.2 [
    (bites)
] 0 12 0 0 0 false DrawText
grestore
gsave
80 62.2 moveto
80.25 82.8 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
80 95.8 moveto
103.25 116.4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
109 95.8 [
    (NP)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
96 62.2 [
    (DET)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
98 28.6 [
    (the)
] 0 12 0 0 0 false DrawText
grestore
gsave
105 28.6 moveto
105.25 49.2 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
105 62.2 moveto
116.25 82.8 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
125 62.2 [
    (N)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
120 28.6 [
    (dog)
] 0 12 0 0 0 false DrawText
grestore
gsave
128 28.6 moveto
128.25 49.2 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
128 62.2 moveto
116.25 82.8 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
116 95.8 moveto
103.25 116.4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
103 129.4 moveto
69.25 150 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EndDocument
 @endspecial 575 993 a Fp(Figure)16 b(4:)g(A)g(sample)f(syn)o(tactical)
g(tree.)388 1916 y @beginspecial 170 @llx 310 @lly 443
@urx 483 @ury 2730 @rwi @setspecial
%%BeginDocument: fs1.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-138 -89 translate
-3 179 moveto 280 179 lineto 280 0 lineto -3 0 lineto closepath clip newpath
gsave
6 176 moveto
0 176 lineto
0 4 lineto
6 4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 172 [
    (word)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 156 [
    (PHON)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
39 156 [
    (<she>)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 140 [
    (SYNSEM)
] 0 12 0 0 0 false DrawText
grestore
gsave
59 140 moveto
53 140 lineto
53 7.99999999999997 lineto
59 7.99999999999997 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
57 136 [
    (synsem)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
57 120 [
    (LOCAL)
] 0 12 0 0 0 false DrawText
grestore
gsave
102 120 moveto
96 120 lineto
96 12 lineto
102 12 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
100 116 [
    (local)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
100 100 [
    (CATEGORY)
] 0 12 0 0 0 false DrawText
grestore
gsave
167 100 moveto
161 100 lineto
161 40 lineto
167 40 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
165 96 [
    (head)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
165 80 [
    (HEAD)
] 0 12 0 0 0 false DrawText
grestore
gsave
202 80 moveto
199 80 lineto
199 60 lineto
202 60 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
203 76 [
    (CASE)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
236 76 [
    (nom)
] 0 12 0 0 0 false DrawText
grestore
gsave
257 80 moveto
260 80 lineto
260 60 lineto
257 60 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
165 56 [
    (SUBCAT)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
211 56 [
    (<>)
] 0 12 0 0 0 false DrawText
grestore
gsave
258 100 moveto
264 100 lineto
264 40 lineto
258 40 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
100 36 [
    (CONTENT)
] 0 12 0 0 0 false DrawText
grestore
gsave
156 36 moveto
153 36 lineto
153 16 lineto
156 16 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
157 32 [
    (ppro)
] 0 12 0 0 0 false DrawText
grestore
gsave
180 36 moveto
183 36 lineto
183 16 lineto
180 16 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
262 120 moveto
268 120 lineto
268 12 lineto
262 12 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
266 140 moveto
272 140 lineto
272 7.99999999999997 lineto
266 7.99999999999997 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
270 176 moveto
276 176 lineto
276 4 lineto
270 4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EndDocument
 @endspecial 641 2017 a(Figure)h(5:)g(A)g(feature)g(structure.)823
2582 y @beginspecial 274 @llx 351 @lly 338 @urx 442 @ury
640 @rwi @setspecial
%%BeginDocument: drs_cb.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-30 -46 translate
-3 93 moveto 63 93 lineto 63 0 lineto -3 0 lineto closepath clip newpath
gsave
0 90 moveto 59 0 rlineto 0 -86 rlineto -59 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 72 moveto
59 72 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
20 87 [
    (a)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
33 87 [
    (x)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
14 64 [
    (dog\050a\051)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
9 44 [
    (Jones\050x\051)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
6 24 [
    (owns\050x,a\051)
] 0 12 0 0 0 false DrawText
grestore
restore showpage

end
%%EndDocument
 @endspecial 653 2684 a(Figure)f(6:)i(The)f Fc(drs)f
Fp(command)932 2877 y(16)p eop
%%Page: 17 17
17 16 bop 738 476 a @beginspecial 254 @llx 371 @lly 359
@urx 422 @ury 1050 @rwi @setspecial
%%BeginDocument: corner_cb.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-51 -26 translate
-3 53 moveto 106 53 lineto 106 0 lineto -3 0 lineto closepath clip newpath
gsave
0 50 moveto 102 0 rlineto 0 -46 rlineto -102 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 50 moveto 98 0 rlineto 0 -18 rlineto -98 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 47 [
    (This is in the corner)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
8 24 [
    (...and this is below)
] 0 12 0 0 0 false DrawText
grestore
restore showpage

end
%%EndDocument
 @endspecial 721 578 a Fp(Figure)16 b(7:)g(A)g(cornerb)q(o)o(x)646
1061 y @beginspecial 232 @llx 371 @lly 381 @urx 422 @ury
1490 @rwi @setspecial
%%BeginDocument: follow_cb.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-74 -26 translate
-3 53 moveto 152 53 lineto 152 0 lineto -3 0 lineto closepath clip newpath
gsave
0 50 moveto 44 0 rlineto 0 -46 rlineto -44 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 32 moveto
44 32 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 47 [
    (x)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
6 24 [
    (dog\050x\051)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
53 33 [
    (this follows the drs)
] 0 12 0 0 0 false DrawText
grestore
gsave
47 50 moveto 101 0 rlineto 0 -46 rlineto -101 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
47 50 moveto
44 50 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
47 4 moveto
44 4 lineto
1 setlinewidth
0 setlinecap
1 setlinejoin
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

end
%%EndDocument
 @endspecial 724 1163 a(Figure)g(8:)g(F)l(ollo)o(wb)q(o)o(xes)821
1796 y @beginspecial 274 @llx 353 @lly 339 @urx 440 @ury
650 @rwi @setspecial
%%BeginDocument: stack_cb.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-30 -44 translate
-3 89 moveto 64 89 lineto 64 0 lineto -3 0 lineto closepath clip newpath
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
13 83 [
    (highest)
] 0 12 0 0 0 false DrawText
grestore
gsave
0 86 moveto 60 0 rlineto 0 -18 rlineto -60 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
15 65 [
    (higher)
] 0 12 0 0 0 false DrawText
grestore
gsave
0 68 moveto 60 0 rlineto 0 -18 rlineto -60 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 50 moveto 60 0 rlineto 0 -46 rlineto -60 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 50 moveto 56 0 rlineto 0 -18 rlineto -56 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 47 [
    (cornerbox)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
15 24 [
    (lowest)
] 0 12 0 0 0 false DrawText
grestore
restore showpage

end
%%EndDocument
 @endspecial 563 1898 a(Figure)g(9:)g(The)g Fc(stackboxes)d
Fp(command)821 2531 y @beginspecial 274 @llx 353 @lly
339 @urx 440 @ury 650 @rwi @setspecial
%%BeginDocument: stair_cb.ps

50 dict begin



/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if


/realsetfont /setfont load def
/setfont {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
    realsetfont
} bind def


/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def


/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def


/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def


/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def


/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /lineLength exch def
    /strings exch def

    % First scan through all of the text to find the widest line (if it's
    % longer than the "lineLength" argument).

    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

/CL 0 def

save
306.0 396.0 translate
0.9596 0.9596 scale
-30 -44 translate
-3 89 moveto 64 89 lineto 64 0 lineto -3 0 lineto closepath clip newpath
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
17 83 [
    (highest)
] 0 12 0 0 0 false DrawText
grestore
gsave
8 86 moveto 52 0 rlineto 0 -18 rlineto -52 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
19 65 [
    (higher)
] 0 12 0 0 0 false DrawText
grestore
gsave
8 68 moveto 52 0 rlineto 0 -18 rlineto -52 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 50 moveto 60 0 rlineto 0 -46 rlineto -60 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 50 moveto 56 0 rlineto 0 -18 rlineto -56 0 rlineto closepath
1 setlinewidth 0 setlinejoin 2 setlinecap
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
4 47 [
    (cornerbox)
] 0 12 0 0 0 false DrawText
grestore
gsave
/Helvetica findfont 10 scalefont setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
15 24 [
    (lowest)
] 0 12 0 0 0 false DrawText
grestore
restore showpage

end
%%EndDocument
 @endspecial 563 2633 a(Figure)j(10:)g Fc(Stairboxes)d
Fp(inden)o(t)i(b)q(o)o(xes.)932 2877 y(17)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
